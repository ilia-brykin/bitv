[
  {
    "id": "11.7.1",
    "title": "11.7.1 Benutzerdefinierte Einstellungen",
    "whatChecked": "Die Seite soll benutzerdefinierte Browsereinstellungen berücksichtigen. Im Einzelnen können dies folgende Punkte sein: Geänderte Vorder- und Hintergrundfarben Schriftarten Schriftgrößen Darstellung des Fokuscursors Maßeinheiten Die Seite kann darüber hinaus eigene Werte für diese Einstellungen anbieten. Wenn diese Einstellungen nicht genutzt werden, sollen die Browsereinstellungen übernommen werden. In manchen Fällen muss die Seite neu geladen werden, damit sich die Änderungen auswirken.",
    "whyChecked": "Wenn Menschen eigene Einstellungen im Browser vornehmen, zum Beispiel weil sie größere Schrift oder eigene angepasste Farbeinstellungen brauchen, sollen diese vom Webangebot wo immer möglich respektiert und übernommen werden.",
    "howChecked": "1. Anwendbarkeit des Prüfschritts Der Prüfschritt ist immer anwendbar. 2. Prüfung Die Seite im Firefox Browser laden Einstellungen öffnen (Element Menü öffnen &gt; Einstellungen) Im Bereich \"Sprache und Erscheinungsbild\" die Schriftgröße auf einen deutlich höheren Wert als den Standard-Wert setzen (z.B. 24). In den Einstellungen \"Erweitert…​\" sollte für Mindestschriftgröße \"Keine\" ausgewählt sein. Über den Button \"Erweitert…\" für die Schriftarten \"Serif\", \"Sans Serif\" und \"Feste Breite\" deutlich abweichende Schrifttypen (Fonts) einstellen und bei der Checkbox \"Seiten das Verwenden von eigenen statt der oben gewählten Schriftarten erlauben\" den Haken entfernen. Den Button \"Farben…\" wählen, veränderte Text- und Hintergrundfarbe mit großem Kontrastabstand einstellen. Die Checkbox \"Systemfarben verwenden\" deaktivieren. Bei der Auswahlliste \"Oben ausgewählte Farben anstatt der Farben der Seite verwenden\" den Wert \"Immer\" auswählen. Mit \"OK\" bestätigen. Prüfen, ob sich Einstellungen der Schrifttype, Schriftgröße und Vorder- bzw. Hintergrund-Farben auf die Darstellung der Seite auswirken und übernommen werden. Prüfen, ob alle wichtigen Bedienelemente und deren Zustände (z.B. \"Hamburger\"-Schaltfläche und Zustände von Formularelementen wie Auswahlschalter und Kontrollkästchen) bei geänderten Vorder- und Hintergrund-Farben noch sichtbar sind. 3. Hinweise 3.1. Einzusetzender Browser für die Prüfung Zur Prüfung sollte wenn möglich der Firefox-Browser genutzt werden, der diese Einstellungsmöglichkeiten bietet. In anderen Browsern sind ggf. nicht alle diese Einstellungen zu finden, oder sie sind unwirksam. Wenn zur Prüfung andere Browser genutzt werden und sich die Darstellung trotz geänderter Voreinstellungen nicht ändert, kann dies am Browser oder auch an Vorgaben der Web-Anwendung liegen. 3.2 Hinweis zur Prüfung mit Firefox Der Firefox-Browser übernimmt für button -Elemente die vom Nutzer gewählte Hintergrundfarbe nicht bzw. setzt eine eigene Farbe. Dies darf nicht als Fehler bewertet werden. Für die Praxis fehlen noch Hinweise. Sie können auf GitHub ein Issue zu diesem Prüfschritt erstellen , um bei der Entwicklung der Prüfung mitzuwirken. 4. Bewertung Erfüllt Die Seite wird im Firefox-Browser nach dem Vornehmen von abweichenden Einstellungen (z.B. heller Text auf dunklem Hintergrund) entsprechend anders dargestellt. Alle wichtigen Funktionen sind auch bei benutzerdefinierten Farbeinstellungen weiterhin bedienbar, Schriften erscheinen vergrößert und in der jeweils eingestellten Schrifttype. Teilweise erfüllt oder schlechter Aufgrund von benutzerdefinierten Farbeinstellungen treten Probleme auf, zum Beispiel: Für die Nutzung des Webauftritts wichtige informationstragende Grafiken oder grafische Bedienelemente sind nicht mehr sichtbar. Unterschiedliche Zustände von Formularelementen (z. B. Auswahlschalter oder Kontrollkästchen) sind nicht mehr unterscheidbar. Fließtext wird nicht vergrößert dargestellt.",
    "sources": "Zurzeit keine Quellen.",
    "classification": "Einordnung des Prüfschritts nach EN 301 549 V3.2.1 11.7 User preferences Where Web-App is not designed to be isolated from its platform, and provides a user interface, that user interface shall follow the values of the user preferences for platform settings for: units of measurement, colour, contrast, font type, font size, and focus cursor except where they are overridden by the user. NOTE 1: Web-App that is isolated from its underlying platform has no access to user settings in the platform and thus cannot adhere to them. NOTE 2: For web content, the underlying platform is the user agent. NOTE 3: This does not preclude the Web-App from having additional values for a setting as long as there is one mode where the application will follow the system settings even if more restricted."
  },
  {
    "id": "11.8.2",
    "title": "11.8.2 Barrierefreie Erstellung von Inhalten",
    "whatChecked": "Wenn es sich bei der zu testenden Webanwendung um ein Autorenwerkzeug handelt, soll die Anwendung die Erstellung von barrierefreien Dokumenten erlauben und den Nutzer dabei unterstützen.",
    "whyChecked": "Für Hilfsmittelnutzer, die eine programmatische Ermittelbarkeit von Informationen brauchen, ist es wichtig, dass Autorenwerkzeuge dies bei der Erzeugung von Inhalten unterstützen. Wenn zum Beispiel ein Kommentar-Eingabefeld die Vergabe einer Überschrift erlaubt, sollte diese auf der erzeugten (bzw. aktualisierten) Seite auch als Überschrift ausgezeichnet sein, damit Hilfsmittel-Nutzer diese semantische Information auswerten können (zum Beispiel zum Navigieren von Kommentar zu Kommentar).",
    "howChecked": "1. Anwendbarkeit des Prüfschritts Der Prüfschritt ist bei der Prüfung von Autorenwerkzeugen wie Content Management Systemen anwendbar. Ebenfalls anwendbar ist der Prüfschritt auf Kommentarfunktionen, die die Strukturierung von Kommentaren erlauben, zum Beispiel die Vergabe einer Kommentar-Überschrift oder Funktionen zur Binnenauszeichnung des Kommentars, etwa Listen oder Texthervorhebungen. Die Prüfung bezieht sich in erster Linie auf die Ausgabe des jeweiligen Autorenwerkzeugs. Der Dokumenttyp, den das Autorenwerkzeug erstellt, muss für die Barrierefreiheit optimierbar sein, ansonsten ist dieser Prüfschritt nicht anwendbar. Dies ist für Web Content Management Systeme und Kommentarfunktionen grundsätzlich gegeben. Die Ausgabe des Autorenwerkzeugs muss innerhalb einer Webumgebung dargestellt werden. Es können lediglich Autorenwerkzeuge geprüft werden, die eine HTML-Ausgabe generieren, die auch für die Überprüfung verfügbar ist, etwa in einer Vorschau. Zudem können in das Frontend integrierte Werkzeuge wie z. B. Kommentareditoren getestet werden, deren Output entweder unmittelbar oder nach Freigabe überprüft werden kann. Umfangreiche Autorenwerkzeuge, wie z. B. Textverarbeitungen, können im BITV-Test derzeit nicht geprüft werden, da in diesem Verfahren die Barrierefreiheit der durch das Tool generierten Dateien nicht überprüft werden kann. 2. Prüfung Auf der Seite mittels Autorenwerkzeug (z. B. Kommentarfunktion) eine Ausgabe generieren (und ggf. freigegeben). Die erzeugte HTML-Seite überprüfen. Alle für die Ansicht anwendbaren Prüfschritte sind anzuwenden. Einige Beispiele: Im Autorenwerkzeug festgelegte Überschriften sollen in der Ausgabe mit Überschriften-Markup ausgezeichnet sein (also nicht über Fettung oder CSS Styles) Im Autorenwerkzeug angelegte Listen sollen in der Ausgabe mit Listen-Markup ausgezeichnet sein (also nicht Pseudo-Listen über vorangestellte Spiegelstriche) Im Autorenwerkzeug festgelegte Absätze sollten in der Ausgabe mit Absatz-Markup ausgezeichnet sein (nicht div) Im Autorenwerkzeug festgelegte Text-Hervorhebungen sollen in der Ausgabe mit semantischen Elementen wie strong oder em ausgezeichnet sein. Falls das Autorenwerkzeug die Einfügung von Bildern erlaubt, gibt es die Möglichkeit, einen Alternativtext für das Bild zu definieren. Der Alternativtext wird als alt-Attribut übernommen. 3. Hinweise Der Prüfschritt verlangt nicht die Bereitstellung bestimmter semantischer Umsetzungen. Wenn zum Beispiel bei einer Kommentarfunktion von Nutzern keine Überschrift vergeben werden kann, ist dies hier nicht negativ zu bewerten. Hier entsteht kein Nachteil gegenüber sehenden Nutzern, auch diese haben keine Überschrift. Anders bei Bildern: Wenn ein Bild eingefügt werden kann, entsteht ein Nachteil für nicht-visuelle Nutzer, wenn nicht im selben Zug ein Alternativtext definiert werden kann, der den Bildinhalt benennt oder beschreibt. Das Autorenwerkzeug darf für die Erstellung von barrierefreien Dokumenten von anderen Werkzeugen abhängen, um spezifische Kriterien zu erfüllen. Das könnte z. B. ein zusätzliches Werkzeug für die Erstellung von Untertiteln sein. Wenn Sie Hinweise zur Ausgestaltung dieses Prüfschritts haben, können Sie auf GitHub ein Issue zu diesem Prüfschritt erstellen .",
    "sources": "Zurzeit keine Quellen.",
    "classification": "Einordnung des Prüfschritts nach EN 301 549 V3.2.1 11.8.2 Accessible content creation Authoring tools shall enable and guide the production of content that conforms to clauses 9 (Web content) or 10 (Non-Web content) as applicable. NOTE: Authoring tools may rely on additional tools where conformance with specific requirements is not achievable by a single tool. For example, a video editing tool may enable the creation of video files for distribution via broadcast television and the web, but authoring of caption files for multiple formats may be provided by a different tool."
  },
  {
    "id": "11.8.3",
    "title": "11.8.3 Erhaltung von Barrierefreiheitsinformationen bei Transformation",
    "whatChecked": "Wenn die Web-Anwendung ein Autorenwerkzeug ist und Umstrukturierungen oder Funktionen zur Neucodierung bietet, dann werden die Informationen zur Zugänglichkeit in der Ausgabe, wenn gleichwertige Mechanismen zur Speicherung der Zugänglichkeitsinformationen im Zieldokumententyp der Ausgabe existieren, übernommen.",
    "whyChecked": "Menschen mit Behinderung benötigen semantische Auszeichnungen (zum Beispiel durch Überschriften oder richtig aufgebaute Datentabellen), um Inhalte effektiv zu nutzen. Werden diese Auszeichnungen in Transformationen entfernt oder korrumpiert, leidet die Benutzbarkeit der Dokumente.",
    "howChecked": "1. Anwendbarkeit des Prüfschritts Der Prüfschritt ist anwendbar, wenn die Web-Anwendung ein Autorenwerkzeug ist und Umstrukturierungen (Restrukturierungstransformationen) oder Funktionen zur Neucodierung bietet. 1.1 Restrukturierungstransformationen Restrukturierungstransformationen sind Transformationen, bei denen die strukturellen Merkmale sich ändern (z.B. Linearisierung von Tabellen, Aufteilen eines Dokuments in Seiten oder wenn einzelne PDF-Dokumente in eine Datei zusammengeführt werden). Der Dokumententyp bzw. die Technologie bleibt gleich. 1.2 Rekodierungstransformationen Rekodierungstransformationen sind Transformationen, bei denen die Technologie bzw. der Dokumententyp geändert wird. Dies könnte z. B. die Umwandlung eines HTML Dokuments zum PDF sein. 2. Prüfung Beispieldokument im Eingangsformat wählen. Wenn z. B. ein Autorenwerkzeug eine Rekodierungstransformation von HTML nach PDF bietet, wäre das eine HTML-Datei. Beispieldokument in der Web-Anwendung öffnen und in das Zielformat bzw. in eine andere Struktur umwandeln. Zieldatei überprüfen. Je nach Dokumententyp erfordert dies Überprüfungen, die nicht im Rahmen des BITV-Tests selbst vorgenommen werden können. Ein Beispiel wäre die Transformation eines HTML-Dokuments zum PDF-Dokument: Sind alle Überschriften aus der Quelle übernommen worden? Sind die Alternativtexte der Grafiken in der PDF-Datei enthalten? Wurde die Tabellenauszeichnung korrekt übersetzt? 3. Hinweise Die Schritte müssen für jedes Ein- und Ausgangsformat, das die Web-App für die Transformation unterstützt, wiederholt werden. Auch wenn die Web-Anwendung lediglich die Struktur des Eingangsdokuments verändert, muss sichergestellt werden, dass die Ausgangsdatei noch alle für die Barrierefreiheit relevanten Informationen enthält. Wenn Sie Hinweise zur Verbesserung der Prüfanleitung haben, können Sie auf GitHub ein Issue zu diesem Prüfschritt erstellen .",
    "sources": "Zurzeit keine Quellen.",
    "classification": "Einordnung des Prüfschritts nach EN 301 549 V3.2.1 11.8.3 Preservation of accessibility information in transformations If the authoring tool provides restructuring transformations or re-coding transformations, then accessibility information shall be preserved in the output if equivalent mechanisms exist in the content technology of the output. NOTE 1: Restructuring transformations are transformations in which the content technology stays the same, but the structural features of the content are changed (e.g. linearizing tables, splitting a document into pages). NOTE 2: Re-coding transformations are transformations in which the technology used to encode the content is changed."
  },
  {
    "id": "11.8.4",
    "title": "11.8.4 Reparaturassistenz",
    "whatChecked": "Ist die Seite Teil eines Autorenwerkzeugs und bietet Funktionen zur Erkennung von Barrierefreiheits-Fehlern bei der Erstellung von Dokumenten, dann sollen Vorschläge zur Behebung dieser Fehler verfügbar sein.",
    "howChecked": "1. Anwendbarkeit des Prüfschritts Der Prüfschritt ist anwendbar, wenn die Seite Teil eines Autorenwerkzeugs ist oder eine Autorfunktion enthält (etwa eine Kommentarfunktion). Barrierefreiheits-Fehler in den erstellten Dokumenten bzw. Inhalten können aufgezeigt werden (z. B. \"Bitte vergeben Sie eine Überschrift\" oder \"Wenn Sie ein informationstragendes Bild einfügen, vergeben Sie bitte einen passenden Alternativtext\"). 2. Prüfung Auf der Seite Inhalte erstellen und dabei vorhandene Auszeichnungsmöglichkeiten nicht nutzen, z. B.: Vorhandene Felder für Überschriften leer lassen, Überschriftenauszeichung von Text-Editoren nicht nutzen Bilder einfügen, ohne einen Alternativtext festzulegen In ein E-Mail-Adressen-Feld eine fehlerhafte E-Mail-Adresse eingeben Inhalt sichern oder abschicken und prüfen, ob eine Überprüfung auf Fehler stattfindet. Falls eine Fehlerprüfung stattfindet (z. B. wenn das Sichern oder Abschicken nicht möglich ist bzw. fehlerhafte oder fehlende Eingaben grafisch hervorgehoben werden), prüfen, ob Hinweise für die Korrektur der Fehler gegeben werden. 3. Hinweise Der Begriff \"Dokumente\" wird in dieser Anforderung weit gefasst und umfasst Web- und Nicht-Web-Dokumente. Siehe dazu auch Kapitel 9 (Web-Inhalte) und Kapitel 10 (Nicht-Web-Inhalte) der EN 301 549. Für die Prüfpraxis sind weitere Hinweise notwendig, auf GitHub können Sie dazu ein Issue eröffnen .",
    "sources": "Zurzeit keine Quellen.",
    "classification": "Einordnung des Prüfschritts nach EN 301 549 V3.2.1 11.8.4 Repair assistance If the accessibility checking functionality of an authoring tool can detect that content does not meet a requirement of clauses 9 (Web) or 10 (Non-web documents) as applicable, then the authoring tool shall provide repair suggestion(s). NOTE: This does not preclude automated and semi-automated repair which is possible (and encouraged) for many types of content accessibility problems."
  },
  {
    "id": "11.8.5",
    "title": "11.8.5 Vorlagen",
    "whatChecked": "Wenn die Seite Teil eines Autorenwerkzeugs ist und Vorlagen bzw. Eingabemasken für die Dokumente, die es erstellt, anbietet, soll mindestens eine der angebotenen Vorlagen die Erstellung barrierefreier Web- oder Nicht-Web-Dokumente ermöglichen (je nach Dokumententyp). Falls es alternative Vorlagen gibt, sollten für die Barrierefreiheit optimierte Vorlagen eindeutig als solche zu identifizieren sein.",
    "whyChecked": "(folgt)",
    "howChecked": "1. Anwendbarkeit des Prüfschritts Der Prüfschritt ist anwendbar, wenn die Seite Teil eines Autorenwerkzeugs ist und Vorlagen (z. B. Eingabemasken) für die Dokumente, die es erstellt, anbietet. Im BITV-Test können lediglich webbasierte Autorenwerkzeuge getestet werden, die eine Ausgabe im Web-Format erzeugen (z. B. ein Content Management System, dessen Web-Output sich mit dem BITV-Test überprüfen lässt). Für webbasierte Autorenwerkzeuge, die keine HTML-Ausgabe, sondern z. B. ein PDF erzeugen, ist dieser Prüfschritt nur in Kombination mit einer zusätzlichen Prüfung der Nicht-Web-Ausgabe in einem anderen Verfahren anwendbar. 2. Prüfung Autorenwerkzeug öffnen Prüfen, ob das Autorenwerkzeug wahlweise verschiedene Vorlagen für die Erstellung von Inhalten anbietet. Prüfen, ob bei Vorhandensein alternativer Vorlagen, welche die Erstellung barrierefreier Inhalte unterstützen, diese deutlich als solche markiert sind. (Wenn es nur eine Vorlage gibt, muss diese nicht extra als barrierefreiheits-unterstützend markiert sein). Testausgaben mit der barrierefreiheits-unterstützenden Vorlage erstellen, ansonsten die Standardvorlage nutzen. Testausgaben auf Barrierefreiheit prüfen (Mängel sind zusätzlich bei den sonstigen anwendbaren Prüfschritten einzutragen). 3. Hinweise Für die Prüfpraxis sind weitere Hinweise notwendig, auf GitHub können Sie dazu ein Issue eröffnen .",
    "sources": "Zurzeit keine Quellen.",
    "classification": "Einordnung des Prüfschritts nach EN 301 549 V3.2.1 11.8.5 Templates When an authoring tool provides templates, at least one template that supports the creation of content that conforms to the requirements of clauses 9 (Web) or 10 (Non-web documents) as applicable shall be available and identified as such."
  },
  {
    "id": "12.1.1",
    "title": "12.1.1 Dokumentation von Kompatibilität und Barrierefreiheit",
    "whatChecked": "Wenn ein Webangebot Dokumentation bereitstellt (und dazu gehört auch die Erklärung zur Barrierefreiheit), dann soll diese Dokumentation vorhandene zusätzliche Barrierefreiheits-Eigenschaften und -Funktionen auflisten und deren Nutzung erklären, sofern diese als Teil des Web-Angebots selbst implementiert wurden. Dazu gehören zum Beispiel Vorlesefunktionen, Funktionen zum Einstellen individueller Farbschemata, oder verfügbare Tastaturkurzbefehle. Auch Informationen zur (möglicherweise eingeschränkten) Kompatibilität mit assistiven Technologien zählen dazu.",
    "whyChecked": "Wenn Angebote bestimmte Barrierefreiheitsfunktionen enthalten, sollten diese gut dokumentiert sein, denn viele Nutzende werden ohne ausdrückliche Hinweise diese Funktionen nicht erkennen oder nutzen können.",
    "howChecked": "1. Anwendbarkeit des Prüfschritts Dieser Prüfschritt ist anwendbar, wenn für das Angebot eine technische Dokumentation von Funktionen des Angebots (etwa Tastaturkurzbefehle oder Hinweise zur Nutzung mit Hilfsmitteln) vorhanden ist. Diese inhaltliche Prüfung wird sowohl bei Dokumentation, die in HTML vorgehalten wird, als auch bei Dokumentation in anderen Formaten wie PDF oder Word vorgenommen. Inhaltliche Hilfe, etwa in FAQs (Frequently Asked Questions) gelten hierbei nicht als technische Dokumentation. Die Erklärung zur Barrierefreiheit ist als Dokumentation des Angebots einzustufen. 2. Prüfung Zusätzliche Barrierefreiheits-Funktionen oder -Eigenschaften des Angebots sollen in der Dokumentation aufgelistet und erklärt werden. Es geht hierbei nicht um die Dokumentation einer grundsätzlich barrierefreien Umsetzung, sondern um zusätzliche Funktionen, etwa Vorlese-Funktionen, Einstellungen für nutzerdefinierte Farbschemata, usw. Die Dokumentation kann dabei auf der Webseite zur Verfügung gestellt werden oder separat verfügbar sein. Zu finden ist die Dokumentation z. B. auf Hilfeseiten bzw. in Support-Bereichen oder in der Erklärung zur Barrierefreiheit. Die Dokumentation muss dabei z.B. folgende Informationen zu vorhandenen Barrierefreiheits-Funktionen oder -Eigenschaften enthalten: Einzelheiten zu Barrierefreiheits-Funktionen, sofern sie auf der Webseite integriert sind, etwa: Vorlesefunktion Funktionen, die Nutzenden die Einstellung individueller Farbschemata erlauben Funktionen für eine verbesserte Darstellung des Maus- oder Tastaturfokus Funktionen zur Anpassung von Textgrößen oder Textabständen Besondere Bedienungsarten mit Tastatur / Tastenkombinationen, z.B. spezielle Tastenkombinationen für die Nutzung mit assistiven Technologien Hinweise auf unterstützte Umgebungen, falls es Einschränkungen bei der Nutzbarkeit mit assistiven Technologien gibt Es wird empfohlen, Metadaten für die unterstützten Barrierefreiheitsfunktionen und Kompatibilität gemäß den Konventionen des Schema.org Accessibility Properties for Discoverability Vocabulary bereitzustellen. 3. Hinweise Wichtig: Dieser Prüfschritt verlangt nicht, dass zusätzliche Barrierefreiheits-Funktionen oder -Eigenschaften bereitgestellt werden. Nur: Wenn sie existieren, sollen sie dokumentiert sein. Es wird nur die Dokumentation von Barrierefreiheits-Funktionen verlangt, die vom Webangebot selbst implementiert werden. Dazu gehören auch Features wie Vorlesefunktionen, die von Drittanbietern definiert und im Angebot eingebunden werden. Barrierefreiheits-Funktionen des Browsers oder des jeweiligen Betriebssystems müssen dagegen nicht dokumentiert werden. Zum Punkt Hinweise auf unterstützte Umgebungen: Wenn das Angebot explizit für einen eingeschränkten Nutzerkreis (zum Beispiel ein Firmen-Intranet) entwickelt wurde und für diesen eine bestimmte unterstützte Nutzungsumgebung (beispielsweise ein bestimmter Browser und ein bestimmter Screenreader) festgelegt wurde, soll die Dokumentation die unterstützte Umgebung nennen. Nutzende, die in anderen Umgebungen auf Barrieren stoßen, können dann wenigstens ermitteln, woran es liegt, und können ggf. ihre Nutzungsumgebung anpassen. Für Angebote, die allgemein im Web zugänglich sind und mit verschiedensten Browsern und Hilfsmitteln genutzt werden, sind solche Einschränkungen nicht zulässig. Manche Barrierefreiheitsfunktionen, etwa Kontrastschalter im Kopfbereich, ändern unmittelbar die Darstellung der Seite und können damit als selbsterklärend gelten. Sofern diese einfachen Schalter zugänglich umgesetzt sind (also z.B. einen programmatisch ermittelbaren Namen und Zustand haben) müssen sie nicht explizit in der Erklärung zur Barrierefreiheit dokumentiert sein. Für die Prüfpraxis sind weitere Hinweise nützlich, auf GitHub können Sie dazu ein Issue eröffnen . 4. Bewertung Nicht anwendbar Es gibt keine technische Dokumentation als Teil des Angebots Es gibt keine Barrierefreiheitsfunktionen, die als Teil der Dokumentation erläutert werden müssten Nicht erfüllt Eine technische Dokumentation des Angebots ist vorhanden und es gibt Barrierefreiheits-Funktionen oder -Eigenschaften des Angebots. Diese werden in der Dokumentation nicht erfasst und erklärt (etwa Tastaturkurzbefehle oder Hinweise zur Nutzung mit Hilfsmitteln).",
    "sources": "Zurzeit keine Quellen.",
    "classification": "Einordnung des Prüfschritts nach EN 301 549 V3.2.1 12.1.1 Accessibility and compatibility features Product documentation provided with the ICT whether provided separately or integrated within the ICT shall list and explain how to use the accessibility and compatibility features of the ICT. NOTE 1: Accessibility and compatibility features include accessibility features that are built-in and accessibility features that provide compatibility with assistive technology. NOTE 2: It is best practice to use WebSchemas/Accessibility 2.0 [i.38] to provide meta data on the accessibility of the ICT. NOTE 3: The accessibility statement and help pages are both examples of the provision of product information."
  },
  {
    "id": "12.1.2",
    "title": "12.1.2 Barrierefreie Dokumentation",
    "whatChecked": "Die Produkt-Dokumentation eines Web-Angebots enthält Hilfestellungen für die allgemeine Nutzung von Funktionen des Angebots, aber oft auch Hinweise auf zusätzliche Funktionen, welche die Barrierefreiheit für bestimmte Nutzergruppen verbessern. Auch die Erklärung zur Barrierefreiheit ist eine Produkt-Dokumentation. Wenn ein Web-Angebot eine Produkt-Dokumentation bereitstellt, soll diese mindestens in einer der folgenden Formate barrierefrei zur Verfügung gestellt werden: Als Web-Dokument, erfüllt Kriterien der EN 301 549 Kapitel 9 Als Nicht-Web-Dokument (u. a. PDF), erfüllt Kriterien der EN 301 549 Kapitel 10 Nicht-Web-Dokumente werden nicht in diesem Prüfverfahren bewertet.",
    "whyChecked": "Die Dokumentation ist ein wichtiger Teil eines Webangebots. So informiert zum Beispiel die \"Erklärung zur Barrierefreiheit\" Menschen mit Behinderungen über den Stand der Barrierefreiheit des Angebots und nennt (noch) nicht barrierefreie Inhalte sowie gegebenenfalls Wege, benötigte Informationen in anderer Form zu erhalten. Es ist deshalb wichtig, dass diese Erklärung barrierefrei ist. Sie wird deshalb, wenn vorhanden, immer geprüft. Dies gilt auch für weitere Seiten zur Dokumentation des Webangebots, wenn vorhanden.",
    "howChecked": "1. Anwendbarkeit des Prüfschritts Der Prüfschritt ist anwendbar, wenn eine Produkt-Dokumentation angeboten wird. Dazu gehört auch die Erklärung zur Barrierefreiheit. Als Produkt-Dokumentation gilt die technische Dokumentation von Funktionen des Angebots (etwa Tastaturkurzbefehle oder Hinweise zur Nutzung mit Hilfsmitteln). Inhaltliche Hilfe, etwa in FAQs (Frequently Asked Questions) gelten hierbei nicht als Produkt-Dokumentation. Die Prüfung der Barrierefreiheit von nicht-web-basierter Dokumentation (etwa von PDFs) kann nicht Teil des Prüfverfahrens sein, sie muss in einem separaten Auftrag erfolgen. 2. Prüfung Je nach den gegebenen Voraussetzungen (siehe \"3. Hinweise\") muss die Dokumentation nicht Teil der Seitenauswahl sein. Die Prüfung erfolgt dann wie unter 2.2 beschrieben. 2.1 Prüfung der Dokumentation (Teil der Seitenauswahl) Prüfen, ob sämtliche anwendbaren Prüfschritte des Verfahrens mit \"konform\" bewertet worden sind. Ist dies der Fall, ist auch dieser Prüfschritt konform. 2.2 Prüfung der Dokumentation (nicht Teil der Seitenauswahl) Ist die Dokumentation nicht Teil der Seitenauswahl (siehe Erläuterungen unter \"3. Hinweise\"), prüfen, ob für die seitenübergreifenden Bereiche (z.B. Kopf- und Fußbereich) sämtliche anwendbaren Prüfschritte des Verfahrens mit konform bewertet wurden. Für den Inhaltsbereich der Seite prüfen, ob sämtliche anwendbaren Prüfschritte des Verfahrens mit konform bewertet wurden (in der Regel handelt es sich bei sehr einfachen Seiten um die Prüfung der Struktur und gegebenenfalls die Tastaturbedienbarkeit). 3. Hinweise Die Dokumentation muss nicht zwingend Teil der Seitenauswahl sein, wenn Folgendes gegeben ist: Der Seitentyp ist bereits in der Seitenauswahl abgedeckt. Seitenübergreifende Bereiche (Kopf- und Fußbereich) sind mit den anderen Seiten der Seitenauswahl identisch und bereits geprüft worden. Der Inhaltsbereich ist sehr einfach (es handelt sich beispielsweise nur um strukturierten Text und Links). Ist die Dokumentation komplexer oder als weiterer Seitentyp einzustufen, wird sie als eine weitere Seite in die Seitenauswahl aufgenommen. Wenn eine weitere web-basierte Dokumentation zum Web-Angebot vorhanden ist, soll auch diese in die Seitenauswahl bzw. Prüfung einbezogen werden. Der Prüfschritt schließt nicht die Möglichkeit aus, alternative Formate anzubieten, die die Bedürfnisse einer bestimmten Nutzergruppe erfüllen (z. B. Braille-Dokumente für blinde Menschen oder Informationen in leichter Sprache für Personen mit eingeschränkter Kognition, Sprache und Lernfähigkeit). Für weitere Hinweise zu diesem Prüfschritt können Sie auf GitHub ein Issue eröffnen .",
    "sources": "Zurzeit keine Quellen.",
    "classification": "Einordnung des Prüfschritts nach EN 301 549 V3.2.1 12.1.2 Accessible documentation Product documentation provided with the ICT shall be made available in at least one of the following electronic formats: a Web format that conforms to the requirements of clause 9; or a non-web format that conforms to the requirements of clause 10. NOTE 1: This does not preclude the possibility of also providing the product documentation in other formats (electronic, printed or audio) that are not accessible. NOTE 2: It also does not preclude the possibility of providing alternate formats that meet the needs of some specific type of users (e.g. Braille documents for blind people or easy-to-read information for persons with limited cognitive, language and learning abilities). NOTE 3: Where documentation is incorporated into the ICT, the documentation falls under the requirements for accessibility in the present document. NOTE 4: A user agent that supports automatic media conversion would be beneficial to enhancing accessibility."
  },
  {
    "id": "12.2.2",
    "title": "12.2.2 Technischer Support",
    "whatChecked": "Wird ein technischer Support (etwa über Telefon, Mail oder Chat) angeboten, so soll dieser Informationen zu Barrierefreiheitsfunktionen des Webangebots und Kompatibilität zu assistiven Technologien bereitstellen können. Die Informationen dazu sollen mindestens so umfassend sein wie in der Dokumentation des Webangebots (siehe auch Prüfschritt 12.1.1 \"Dokumentation von Kompatibilität und Barrierefreiheit\" ).",
    "whyChecked": "Hinweise zu Barrierefreiheits-Funktionen sind nicht immer verständlich genug. Hinweise zur Hilfsmittel-Kompatibilität können schnell veraltet sein. Es ist wichtig, dass der technische Support auf Kunden-Fragen eingehen und Hilfe bereitstellen kann.",
    "howChecked": "1. Anwendbarkeit des Prüfschritts Der Prüfschritt ist anwendbar, wenn das Webangebot (meist eine Web-Anwendung) technische Dokumentation für das Webangebot anbietet, und Barrierefreiheits-Funktionen und Hinweise auf Hilfsmittel-Kompatibilität in dieser Dokumentation eingeschlossen sind. 2. Prüfung Den technischen Support kontaktieren und stichprobenartig Fragen zu den in der Dokumentation genannten Barrierefreiheits-Funktionen oder zur Hilfsmittel-Kompatibilität stellen. Ist der technische Support in der Lage, mündlich oder schriftlich zusätzliche Informationen und Hilfestellungen zu geben? 3. Hinweise Der Prüfschritt bewertet nicht die Qualität der übermittelten Information und auch nicht die Zugänglichkeit von übersandten Dokumenten. Er prüft lediglich, ob der technische Support des Anbieters darauf eingerichtet ist, mit weitergehenden Fragen zu Barrierefreiheits-Funktionen oder Hilfsmittel-Kompatibilität umzugehen. Ein allgemeiner Kontakt zum Anbieter des Webangebots wird im Sinne des Prüfschritts noch nicht als Support verstanden. Es sollte sich um einen technischen Support handeln, dies sollte aus der Formulierung des Kontakts hervorgehen (z. B. \"Technischer Support\", \"Support\", \"Hilfe bei technischen Fragen\" oder ähnliches). Wie dieser Prüfschritt in der Praxis getestet werden kann, ist noch nicht vollständig geklärt. Hinweise dazu können Sie in einem GitHub Issue hinterlassen .",
    "sources": "Zurzeit keine Quellen.",
    "classification": "Abgrenzung zu anderen Prüfschritten In diesem Prüfschritt wird ermittelt, ob der technische Support zu dokumentierten Barrierefreiheits-Funktionen oder zur Hilfsmittel-Kompatibilität weitere Informationen liefern kann. Davon ist abzugrenzen: Der Prüfschritt 12.2.3 \"Effektive Kommunikation\" prüft, ob mit dem technischen Support auf verschiedene Weise kommuniziert werfen kann (z.B. per Telefon, Kontaktformular, E-Mail oder Chat). Der Prüfschritt 12.2.4 \"Vom Support bereitgestellte Dokumentation\" prüft die Barrierefreiheit der vom Support bereitgestellten web-basierten Dokumentation. Einordnung des Prüfschritts nach EN 301 549 V3.2.1 12.2.2 Information on accessibility and compatibility features ICT support services shall provide information on the accessibility and compatibility features that are mentioned in the product documentation. NOTE: Accessibility and compatibility features include accessibility features that are built-in and accessibility features that provide compatibility with assistive technology."
  },
  {
    "id": "12.2.3",
    "title": "12.2.3 Effektive Kommunikation",
    "whatChecked": "Wird ein technischer Support (etwa über Telefon, Mail oder Chat) angeboten, soll dieser die Kommunikationsbedürfnisse von Menschen mit Behinderungen berücksichtigen und effektive d. h. funktionierende und tragfähige Kommunikationskanäle anbieten. Dies kann auch durch die Vermittlung an Dritte geschehen.",
    "whyChecked": "Menschen mit verschiedenen Behinderungen bevorzugen verschiedene Kommunikationskanäle. So haben zum Beispiel schwerhörige Menschen Schwierigkeiten beim Telefonieren und bevorzugen E-Mail oder Chat. Für Menschen, denen Schreiben aus welchen Gründen auch immer schwer fällt, ist ein Telefonat einfacher.",
    "howChecked": "1. Anwendbarkeit des Prüfschritts Der Prüfschritt ist anwendbar, wenn das Angebot (meist eine Web-Anwendung) technischen Support (etwa über Telefon, Mail oder Chat) anbietet. 2. Prüfung Um diesen Prüfschritt zu erfüllen, ist es sicherlich notwendig, verschiedene Kommunikationsmöglichkeiten für die Nutzenden anzubieten. Also etwa Kommunikation über E-Mail Chat Telefon Videotelefonie 3. Hinweise Ein Ansatz für die Prüfung wäre, festzustellen, ob eine Kontaktmöglichkeit zum Support über mindestens zwei verschiedene Kommunikations-Kanäle (z.B. Telefon und E-Mail) zur Verfügung steht. Wie dieser Prüfschritt in der Praxis berücksichtigt werden kann, ist noch nicht vollständig geklärt. Auf GitHub können Sie Hinweise zu diesem Prüfschritt hinterlassen .",
    "sources": "Zurzeit keine Quellen.",
    "classification": "Einordnung des Prüfschritts nach EN 301 549 V3.2.1 12.2.3 Effective communication ICT support services shall accommodate the communication needs of individuals with disabilities either directly or through a referral point."
  },
  {
    "id": "12.2.4",
    "title": "12.2.4 Vom Support bereitgestellte Dokumentation",
    "whatChecked": "Wird durch den technischen Support eines Angebots eine Dokumentation bereitgestellt, wird diese in mindestens einem der folgenden Formate barrierefrei angeboten: Als Web-Dokument, das die Kriterien der EN 301 549 Kapitel 9 erfüllt Als Nicht-Web-Dokument (z. B. ein PDF oder eine Word-Datei), dass die Kriterien der EN 301 549 Kapitel 10 erfüllt Weitere gegebenenfalls nicht barrierefreie Versionen der Dokumentation werden nicht bewertet.",
    "whyChecked": "Die technische Dokumentation ist ein wichtiger Bestandteil vieler Angebote, besonders bei komplexeren Web-Anwendungen. Damit auch Menschen mit Behinderungen sie gut nutzen können, sollte sie alle Anforderungen der Barrierefreiheit erfüllen.",
    "howChecked": "1. Anwendbarkeit des Prüfschritts Der Prüfschritt ist anwendbar, wenn Support Services eine technische Dokumentation zur Nutzung des Angebots bereitstellen, etwa HTML-basierte Hilfe-Systeme, PDF-Handbücher, oder Anleitungen. Im BIK BITV-Test können lediglich Dokumente auf Basis von Web-Technologien getestet werden. Falls von Support Services eine webbasierte Dokumentation bereitgestellt wird, sollte dies vorab mit dem Anbieter geklärt werden, damit diese Dokumentation bereits bei der Seitenauswahl berücksichtigt werden kann. Für andere Formate (etwa PDF) muss gegebenenfalls ein getrennter Prüfauftrag erteilt werden, da sich diese Formate im BITV-Test nicht prüfen lassen. 2. Prüfung Gibt es eine Support-Dienstleistung, die eine technische Dokumentation zur Nutzung bzw. zum Verständnis der Funktionen eines Angebots bereitstellt? Beispiele wären: Ein Datenbank-Anbieter schickt auf Anfrage den Link zu einer HTML-Anwendung mit einer Erklärung der angebotenen Such- und Filter-Funktionen. Ein Dokumenten-Management-System schickt auf Anfrage eine HTML-Referenzseite zu unterstützten Tastaturbefehlen. Der Anbieter eines web-basierten Drucker-Management-Systems schickt auf Anfrage ein PDF-Handbuch mit einer vollständigen Liste der verfügbaren Touch-Displays eines Druckers mit Dokumentation aller angebotenen Funktionen (dieses Handbuch wäre nicht im Test zu prüfen, der Auftraggeber wird darauf hingewiesen, hier ggf. einen Zusatzauftrag für eine PDF-Prüfung zu erteilen). Wenn eine zusätzliche technische Dokumentation im HTML-Format bereitgestellt wird, wird diese in der Seitenauswahl des Tests berücksichtigt und mitgetestet. 3. Hinweise Dokumentation bezieht sich in diesem Prüfschritt auf alle Dokumente, die dem Nutzer auf Anfrage durch den Support zur Verfügung gestellt werden. Der Prüfschritt schließt nicht die Möglichkeit aus, alternative Formate anzubieten, die die Bedürfnisse einer bestimmten Nutzergruppe erfüllen (z. B. Braille-Dokumente für blinde Menschen oder Informationen in leichter Sprache für Personen mit eingeschränkter Kognition, Sprache und Lernfähigkeit). Wie dieser Prüfschritt in der Praxis berücksichtigt werden kann, ist noch nicht vollständig geklärt. Für Hinweise zu diesem Prüfschritt können Sie auf GitHub ein Issue eröffnen . 4. Bewertung Erfüllt Die webbasierte Dokumentation erfüllt alle Anforderungen aus Kapitel 9 (Web) der EN. Nicht erfüllt Die webbasierte Dokumentation erfüllt eine oder mehrere Anforderungen aus Kapitel 9 (Web) nicht.",
    "sources": "Zurzeit keine Quellen.",
    "classification": "Einordnung des Prüfschritts nach EN 301 549 V3.2.1 12.2.4 Accessible documentation Documentation provided by support services shall be made available in at least one of the following electronic formats: * a Web format that conforms to clause 9; or * a non-web format that conforms to clause 10. NOTE 1: This does not preclude the possibility of also providing the documentation in other formats (electronic or printed) that are not accessible. NOTE 2: It also does not preclude the possibility of providing alternate formats that meet the needs of some specific type of users (e.g. Braille documents for blind people or easy-to-read information for persons with limited cognitive, language and learning abilities). NOTE 3: Where the support documentation is incorporated into the ICT, the documentation falls under the requirements for accessibility in the present document. NOTE 4: A user agent that supports automatic media conversion would be beneficial to enhancing accessibility."
  },
  {
    "id": "5.2",
    "title": "5.2 Aktivierung von Barrierefreiheitsfunktionen",
    "whatChecked": "Wenn die Webseite dokumentierte Funktionen für die Barrierefreiheit bereithält, die spezielle Bedürfnisse von Nutzenden erfüllen, soll die Aktivierung dieser Funktionen für diese Nutzendengruppe barrierefrei möglich sein. Das bedeutet, dass die Barrierefreiheitsfunktion für die Nutzendengruppe, die sie unterstützen soll, selbstständig aktivierbar sein soll. In der Regel ist dies der Fall, wenn die Funktion - etwa ein Kontrastumschalter oder eine Icon-basierter Link zu einer Version in leichter Sprache - alle übrigen Anforderungen der EN 301 549 erfüllt. Die Anforderung 5.2 beschränkt die Prüfung auf Funktionen, die dokumentiert sind, also etwa auf Hilfeseiten oder in der Erklärung zur Barrierefreiheit benannt bzw. erläutert sind. Beispiele für Barrierefreiheitsfunktionen: Vorlesefunktion Kontrasterhöhung, abweichende Farbschemata Anpassung der Schriftgröße, Schriftformatierungen (z. B. Zeilenabstand, Schriftart usw.) Versionen in Leichter Sprache oder Deutscher Gebärdensprache Einstellungen zum Deaktivieren automatischen Abspielens von Animationen, Videos oder Audio-Dateien",
    "whyChecked": "Barrierefreiheitsfunktionen, die von der zu testenden Webseite (also nicht vom Betriebssystem oder dem Browser) bereitgestellt werden, sollen von Nutzenden, die diese brauchen, selbstständig aktivierbar sein. Wenn die Webseite beispielsweise eine Funktion zur Verfügung stellt, mit der die Kontrastverhältnisse verbessert werden, müssen sämtliche Bedienelemente, die zur Aktivierung der Funktion bedient werden müssen, auch in der Standardansicht ein ausreichendes Kontrastverhältnis aufweisen. Damit wird sichergestellt, dass auch Nutzende, die mit kontrastarmen Inhalten und Bedienelementen Schwierigkeiten haben (also zur Zielgruppe der Barrierefreiheitsfunktion gehören), die Funktion zur Kontrasterhöhung selbstständig aktivieren können.",
    "howChecked": "1. Anwendbarkeit des Prüfschritts Der Prüfschritt ist anwendbar, wenn die zu prüfende Webseite spezielle Barrierefreiheits-Funktionen bereithält, die im Angebot selbst, etwa in den Einstellungen, oder in einer zur Verfügung gestellen technischen Dokumentation dokumentiert sind. Nicht berücksichtigt werden systemseitige Bedienungshilfen (z. B. vom Browser oder Betriebssystem). 2. Prüfung Webseite aufrufen. Falls dokumentierte Barrierefreiheitsfunktionen angeboten werden: Ist die Barrierefreiheits-Funktion für die Zielgruppe identifizierbar? Ist die Barrierefreiheits-Funktion für die Zielgruppe selbstständig aktivierbar? 3. Hinweise 3.1 Hinweis zur Bestimmung der Zielgruppe der Barrierefreiheits-Funktion Viele Menschen mit Behinderung nutzen verschieden Eingabemöglichkeiten, z.B. fallweise die Maus oder die Tastatur. Menschen mit kognitiven Einschränkungen haben zum Teil auch andere Einschränkungen. Bei der Bestimmung der Zielgruppe ist es deshalb wichtig, auch Anforderungen zu berücksichtigen, die nicht direkt mit der Einschränkung zu tun haben, für die die Barrierefreiheits-Funktion gedacht ist. 3.2 Hinweis zur Identifizierbarkeit und Aktivierbarkeit Bedienelemente für Barrierefreiheits-Funktionen sollen grundsätzlich alle Barrierefreiheits-Anforderungen erfüllen. Zwei Beispiele: Ein Schalter zum Laden einer Version in Leichter Sprache sollte leicht verständlich, kontrastreich und zugänglich beschriftet sein, denn es gibt Menschen mit kognitiven Einschränkungen, die außerdem sehbehindert oder blind sind. Ein visueller Kontrastmodus-Schalter für Menschen mit Sehbehinderung braucht auch eine zugängliche Beschriftung, denn manche sehbehinderten Menschen nutzen zusätzlich auch eine Sprachausgabe. 3.3 Hinweis auf andere anwendbare Anforderungen Bei nicht dokumentierten Barrierefreiheitsfunktionen, für die dieser Prüfschritt erfüllt ist, kann es zu negativen Bewertungen in anderen Prüfschritten kommen. 4. Bewertung Erfüllt Die Barrierefreiheits-Funktion ist barrierefrei identifizierbar und aktivierbar. Nicht voll erfüllt Bedienelemente der Barrierefreiheitsfunktion oder die Funktion selbst verstoßen gegen andere Anforderungen der EN.",
    "sources": "Zurzeit keine Quellen.",
    "classification": "Einordnung des Prüfschritts nach EN 301 549 V3.2.1 5.2 Activation of accessibility features Where ICT has documented accessibility features, it shall be possible to activate those documented accessibility features that are required to meet a specific need without relying on a method that does not support that need."
  },
  {
    "id": "5.3",
    "title": "5.3 Biometrie",
    "whatChecked": "Wenn die Webseite biometrische Merkmale (z.B. Fingerabdruck, Gesichtserkennung, Spracherkennung) für die Nutzeridentifizierung oder die Steuerung nutzt, soll diese sich nicht nur auf ein biometrisches Merkmal beschränken. Die Alternativen zu einer biometrischen Identifizierung werden in der Regel nicht-biometrische Methoden sein, etwa die Eingabe von Nutzername und Passwort. (Für diese gelten dann natürlich alle anderen Anforderungen, etwa die der Tastaturbedienbarkeit und der Verfügbarkeit zugänglicher Namen.) Auch eine zweite biometrische Methode kann diesen Prüfschritt erfüllen, z.B. wenn zusätzlich zu Fingerabdruck-Erkennung die Erkennung des Irismusters, des Sprachmusters, oder des Gesichts angeboten wird.",
    "whyChecked": "Die biometrische Identifizierung (bzw. Authentifizierung) kann gerade für Menschen mit Behinderung sinnvoll sein und den Zugang zu geschützten Systemen erleichtern. Die Berührung eines Sensors mit dem Finger ist schneller und einfacher als die Eingabe einer Pin oder eines Passworts. Es muss aber für Menschen, welche z.B. aufgrund von Behinderungen die angebotene Methode der biometrischen Identifizierung nicht nutzen können, eine nutzbare Alternative geben.",
    "howChecked": "1. Anwendbarkeit des Prüfschritts Der Prüfschritt ist anwendbar, wenn die Webseite biometrische Merkmale für die Nutzeridentifizierung oder Steuerung nutzt. 2. Prüfung Webseite öffnen Prüfen, ob nicht-biometrische oder biometrische Alternativen zur angebotenen biometrischen Identifizierung angeboten werden. Bedienkonzept der wesentlichen Funktionen auf den zu testenden Webseiten untersuchen: Wird Biometrie für die Steuerung genutzt? Gibt es neben der identifizierten biometrischen Steuerung alternative nicht biometrische oder biometrische Steuerungsmethoden? 3. Hinweise Zurzeit sind biometrische Aspekte der Steuerung hauptsächlich die Nutzer-Identifizierung als ein Schritt innerhalb eines Prozesses. So kann die Berührung eines Fingerabdrucksensors die Einfügung eines im System gespeicherten Passwortes für einen eingegebenen Nutzernamen freigeben. Diese Funktionalität wird aber in der Regel vom System bereitgestellt, der Autor hat darauf keinen Einfluss. Andere vom Autor gestaltbare Formen der Steuerung sind denkbar. Ansätze dazu gibt es etwa im Bereich digitaler Videoaufnahmen. Manche Systeme halten den Schärfepunkt automatisch auf einer (biometrisch identifizierten) Person, wenn sich diese durch den Bildraum bewegt. Auch in Spielen auf Basis von Augmented Reality wäre die Steuerung über die Erkennung biometrischer Eigenschaften denkbar. 4. Bewertung Erfüllt Neben biometrischer Identifizierung oder Steuerung gibt es mindestens eine weitere nicht-biometrische oder biometrische Methode. Nicht erfüllt Nutzeridentifizierung oder Steuerung sind nur über ein biometrisches Merkmal möglich, es gibt keine Alternativen dazu.",
    "sources": "Zurzeit keine Quellen.",
    "classification": "Einordnung des Prüfschritts nach EN 301 549 V3.2.1 5.3 Biometrics Where ICT uses biological characteristics, it shall not rely on the use of a particular biological characteristic as the only means of user identification or for control of ICT. NOTE 1: Alternative means of user identification or for control of ICT could be non-biometric or biometric. NOTE 2: Biometric methods based on dissimilar biological characteristics increase the likelihood that individuals with disabilities possess at least one of the specified biological characteristics. Examples of dissimilar biological characteristics are fingerprints, eye retinal patterns, voice, and face."
  },
  {
    "id": "5.4",
    "title": "5.4 Erhaltung von Barrierefreiheitsinformationen bei Konvertierung",
    "whatChecked": "Wenn die Webseite Dokumente in andere Formate konvertiert, sollen vorhandene Barrierefreiheits-Informationen im Zielformat übernommen werden, wenn das Zielformat diese Informationen grundsätzlich unterstützt.",
    "whyChecked": "Wenn die Webseite Konvertierungsfunktionen anbietet, sollen Barrierefreiheitsinformationen im Ausgangsformat nicht unnötigerweise im Zielformat verloren gehen. Unnötig ist der Verlust von Barrierefreiheitsinformationen dann, wenn das Zielformat prinzipiell die Aufnahme der Barrierefreiheitsinformation unterstützt, durch die Konvertierungsfunktion jedoch nicht genutzt wird. Beispielsweise unterstützen HTML- und PDF-Dateien die Auszeichnung von Überschriften, eine Konvertierungsfunktion könnte daher problemlos die Überschriftenauszeichnung aus dem HTML-Quelltext für PDF adaptieren. Hinzunehmen ist der Verlust von Barrierefreiheitsinformationen nur dann, wenn das Zielformat keine Unterstützung für die im Ausgangsformat genutzte Informationsart anbietet.",
    "howChecked": "1. Anwendbarkeit des Prüfschritts Der Prüfschritt ist grundsätzlich anwendbar, wenn die Webseite digitale Formate wie Text, Audio und Video konvertiert. Sind jedoch entweder das Ausgangs- oder das Zielformat der Konvertierung nicht HTML, kann der Prüfschritt nicht in diesem Verfahren allein geprüft werden, denn hier müsste zusätzlich eine Prüfung des abweichenden Formats durchgeführt werden. Hinsichtlich der Bewertung siehe \"3. Hinweise\". 2. Prüfung Die Prüfung ist sehr individuell und richtet sich nach den verwendeten Quell- und Zielformaten. Die zusätzliche Prüfung des abweichenden Formats kann nicht im Rahmen dieses Prüfverfahrens durchgeführt werden. Gegebenenfalls Beispieldokumente mit Barrierefreiheits-Informationen in das Zielformat konvertieren. Sind vom Format grundsätzlich unterstützte Barrierefreiheits-Informationen nach der Konvertierung im Zielformat erhalten geblieben? 3. Hinweise Da die Prüfung eines Nicht-HTML-Formats nicht mit diesem Prüfverfahren erfolgen kann, muss der Prüfschritt mit \"nicht anwendbar\" bewertet werden. Es sollte jedoch in einer Anmerkungen darauf hingewiesen werden, dass die Barrierefreiheits-Informationen (z.B. semantische Überschriften, Links oder Untertitel) im Zielformat erhalten bleiben sollen. 4. Bewertung Erfüllt Das Zielformat enthält alle Barrierefreiheits-Informationen des HTML-Ausgangsformats, die grundsätzlich unterstützt werden. Nicht voll erfüllt Grundsätzlich vom Zielformat unterstützte Barrierefreiheits-Informationen des HTML-Ausgangsformats gehen bei der Konvertierung verloren.",
    "sources": "Zurzeit keine Quellen.",
    "classification": "Einordnung des Prüfschritts nach EN 301 549 V3.2.1 5.4 Preservation of accessibility information during conversion Where ICT converts information or communication it shall preserve all documented non-proprietary information that is provided for accessibility, to the extent that such information can be contained in or supported by the destination format."
  },
  {
    "id": "6.1",
    "title": "6.1 Audiobandbreite für Sprache",
    "whatChecked": "Um gute Sprachverständlichkeit bei der Zwei-Wege-Sprachkommunikation zu garantieren, soll die Webanwendung beim Kodieren und Dekodieren von Audio einen Frequenzbereich nutzen, dessen obere Grenze mindestens bis 7.000 Hz reicht. Damit die Webanwendung diesen Prüfschritt besteht, muss sie mindestens HD-Telefonie / Telefonie in ISDN-Qualität bieten. Dazu kann z. B. der weit verbreitete Codec G.722 genutzt werden.",
    "whyChecked": "Gute Sprachqualität ist besonders für Menschen mit Hörbehinderungen wichtig. Deshalb wird hier ein verbindlicher Mindeststandard für die Audioqualität festgelegt.",
    "howChecked": "1. Anwendbarkeit des Prüfschritts Der Prüfschritt ist anwendbar, wenn die Webanwendung eine Zwei-Wege-Sprachkommunikation anbietet. 2. Prüfung Die Sprachqualität der Audio-Verbindung im Praxistest beurteilen. Entspricht die Qualität der Qualität aktueller Festnetztelefonie? Es muss dabei sichergestellt werden, dass die Internetverbindung an beiden Enden nicht beeinträchtigt ist. Ggf. wird der Test dazu wiederholt. Führt der Hörtest zu keinem klaren Ergebnis, sollte die Dokumentation der Software konsultiert werden. Hier sollte der verwendete Codec zu finden sein. Ggf. muss beim Hersteller der Webanwendung nachgefragt werden. Anschließend sollte der Codec recherchiert werden, um dessen Frequenzbereich in Erfahrung zu bringen. Die obere Grenze des Frequenzbereichs muss mindestens bis 7.000 Hz reichen.",
    "sources": "Zurzeit keine Quellen.",
    "classification": "Einordnung des Prüfschritts nach EN 301 549 V3.2.1 6.1 Audio bandwidth for speech Where ICT provides two-way voice communication, in order to provide good audio quality, that ICT shall be able to encode and decode two-way voice communication with a frequency range with an upper limit of at least 7 000 Hz. NOTE 1: For the purposes of interoperability, support of Recommendation ITU-T G.722 [i.21] is widely used. NOTE 2: Where codec negotiation is implemented, other standardized codecs such as Recommendation ITU-T G.722.2 [i.22] are sometimes used so as to avoid transcoding."
  },
  {
    "id": "6.2.1.1",
    "title": "6.2.1.1 Textkommunikation in Echtzeit",
    "whatChecked": "Ermöglicht das Webangebot Zwei-Wege-Kommunikation (eine Sprechverbindung in beide Richtungen, z.B. Sprach- und Videotelefonie), muss es ebenfalls Textkommunikation in Echtzeit (RTT, Real-Time Text) zur Verfügung stellen. Echtzeit bedeutet hier, dass schon die Eingabe einzelner Zeichen übertragen und dem Empfänger angezeigt wird. Die Nutzenden müssen den eingegebenen Text nicht erst aktiv abschicken.",
    "whyChecked": "Menschen, die nicht Sprache nutzen können oder wollen, sollen die Möglichkeit haben, über Echtzeit-Textkommunikation (RTT, Real-time Text) gleichrangig an Kommunikation teilzuhaben.",
    "howChecked": "1. Anwendbarkeit des Prüfschritts Der Prüfschritt ist anwendbar, wenn das zu testende Webangebot Zwei-Wege-Kommunikation ermöglicht. Dies umfasst z. B. webbasierte Sprach- und Videotelefonie. 2. Prüfung Webangebot öffnen. Wenn eine Funktion für die Zwei-Wege-Kommunikation geboten wird, prüfen, ob auch Textkommunikation in Echtzeit (RTT, Real-time Text) unterstützt wird. 3. Hinweise Bei Echtzeit-Textkommunkation (RTT, Real-Time Text) erscheint der Text beim Empfänger dynamisch schon während der Eingabe des Senders. RTT ist also nicht das Gleiche wie etwa Chat, wo Nachrichten explizit abgeschickt werden und erst dann beim Empfänger erscheinen.",
    "sources": "Human Factors (HF); Real-Time Text (RTT) in Multiparty Conference Calling / ETSI TR 103 708 V1.1.1 (2022-08) 11 More Free Open-source Text-To-Speech Apps (MEDevel.com: Open-source Guide to Healthcare and Medical Software) Web Speech API (Mozilla Foundation, mdm web docs) RFC 8865 T.140 Real-Time Text Conversation over WebRTC Data Channels (PDF) WebRTC 1.0: Real-Time Communication Between Browsers. W3C Editor’s Draft 06 February 2023",
    "classification": "Einordnung des Prüfschritts nach EN 301 549 V3.2.1 6.2.1.1 RTT communication Where ICT is in a mode that provides a means for two-way voice communication, the ICT shall provide a means for two-way RTT communication, except where this would require design changes to add input or output hardware to the ICT. NOTE 1: This requirement includes those products which do not have physical display or text entry capabilities but have the capability to connect to devices that do have such capabilities. It also includes intermediate ICT between the endpoints of the communication. NOTE 2: There is no requirement to add: a hardware display, a hardware keyboard, or hardware to support the ability to connect to a display or keyboard, wired or wirelessly, if this hardware would not normally be provided. NOTE 3: For the purposes of interoperability, support of Recommendation ITU-T T.140 [i.36] is widely used."
  },
  {
    "id": "6.2.1.2",
    "title": " 6.2.1.2 Gleichzeitige Sprache und Text",
    "whatChecked": "Wenn die Web-Anwendung Zwei-Wege-Kommunikation und Textkommunikation in Echtzeit (RTT, Real-Time Text) anbietet, soll die gleichzeitige Kommunikation mittels Sprache und Echtzeit-Textkommunikation möglich sein.",
    "whyChecked": "Menschen, die statt Sprache die Eingabe von Echtzeit-Text nutzen, sollen gleichrangig behandelt werden. Funktionen wie das Sich-Einreihen in eine Warteschlange für Beiträge durch digitales \"Handheben\" soll von Arten von Nutzern gleichrangig genutzt werden können.",
    "howChecked": "1. Anwendbarkeit des Prüfschritts Der Prüfschritt ist anwendbar, wenn die Web-Anwendung Zwei-Wege-Kommunikation und zusätzlich Textkommunikation in Echtzeit ermöglicht. Zwei-Wege-Kommunikation umfasst u. a. Sprach- und Videotelefonie. Echtzeit bedeutet hier, dass schon die Eingabe einzelner Zeichen übertragen wird und der Nutzer den eingegebenen Text nicht erst aktiv abschicken muss. 2. Prüfung Web-Anwendung öffnen Prüfen, ob die gleichrangige Kommunikation via Echtzeit-Text und Sprache möglich ist und Funktionen wie das digitale Handheben ebenso Sprachnutzern wie Echtzeit-Text-Nutzern zur Verfügung stehen. Wenn es eine Warteschlange für Beiträge gibt, landen Sprachnutzer und Echtzeit-Text-Nutzer in der gleichen Schlange. 3. Hinweise Bei Echtzeit-Textkommunkation (RTT, Real-Time Text) erscheint der Text beim Empfänger dynamisch schon während der Eingabe des Senders. RTT ist also nicht das Gleiche wie etwa Chat, wo Nachrichten explizit abgeschickt werden und erst dann beim Empfänger erscheinen. Bei Konferenzen, also einer Kommunikation mit mehr als zwei Personen, soll die Echtzeit-Text-Kommunikation der Sprach-Kommunikation gleichgestellt sein. Das bedeutet z. B., dass wenn die Software Funktionen für die abwechselnde Kommunikation anbietet (z. B. immer nur ein aktiver Redner), sollen diese Funktionen auch für die Textkommunikation in Echtzeit verfügbar sein. Bei Konferenzen, die gleichzeitig eine herkömmliche Chat-Funktion bieten, sollen Chat und Echtzeit-Textkommunikation separiert werden, B. in separaten Programmfenstern, damit sich diese verschiedenen Kommunikationsarten nicht gegenseitig stören und nicht zu Verwirrung führen.",
    "sources": "Human Factors (HF); Real-Time Text (RTT) in Multiparty Conference Calling / ETSI TR 103 708 V1.1.1 (2022-08)",
    "classification": "Einordnung des Prüfschritts nach EN 301 549 V3.2.1 6.2.1.2 Concurrent voice and text Where ICT provides a means for two-way voice communication and for users to communicate by RTT, it shall allow concurrent voice and text through a single user connection. NOTE 1: With many-party communication, as in a conference system, it is allowed (but not required or necessarily recommended) that RTT be handled in a single display field and that \"turn-taking\" be necessary to avoid confusion (in the same way that turn-taking is required for those presenting/talking with voice). NOTE 2: With many-party communication, best practice is for hand-raising for voice users and RTT users to be handled in the same way, so that voice and RTT users are in the same queue. NOTE 3: With a many-party conference system that has chat as one of its features - the RTT (like the voice) would typically be separate from the chat so that RTT use does not interfere with chat (i.e. people can be messaging in the chat field while the person is presenting/talking with RTT - in the same manner that people message using the chat feature while people are talking with voice). RTT users would then use RTT for presenting and use the Chat feature to message while others are presenting (via Voice or RTT). NOTE 4: The availability of voice and RTT running concurrently (and separately from chat) can also allow the RTT field to support text captioning when someone is speaking (and it is therefore not being used for RTT since it is not the RTT user’s turn to speak). NOTE 5: Where both server-side software and local hardware and software are required to provide voice communication, where neither part can support voice communication without the other and are sold as a unit for the voice communication function, the local and server-side components are considered a single product."
  },
  {
    "id": "6.2.2.1",
    "title": "6.2.2.1 Visuell unterscheidbare Anzeige von Textnachrichten",
    "whatChecked": "Wenn das Webangebot Echtzeit-Textkommunikation (RTT, Real-Time Text) senden und empfangen kann, soll die Anzeige von empfangenen und gesendeten Nachrichten visuell gut voneinander unterscheidbar sein.",
    "whyChecked": "Menschen, die Echtzeit-Textkommunikation nutzen, sollen in der Lage sein, bereits empfangene und gesendete Nachrichten visuell zu unterscheiden. So können sie leichter Äußerungen von sich selbst oder von anderen finden und zuordnen.",
    "howChecked": "1. Anwendbarkeit des Prüfschritts Der Prüfschritt ist anwendbar, wenn die Webangebot Echtzeit-Textkommunikation (RTT, Real-Time Text) senden und empfangen kann. 2. Prüfung Webangebot öffnen Prüfen, ob die Webangebot das Senden und Empfangen von Echtzeit-Textkommunikation anbietet Prüfen, ob die gesendeten und empfangenen Textnachrichten deutlich voneinander unterscheidbar sind und separat angezeigt werden, z. B.: Rahmen für Textnachricht (mit gutem Kontrast nach außen) Positionierung der eigenen Nachrichten rechtsbündig und der Gesprächsteilnehmer linksbündig oder umgekehrt Nennung des Namens vor Beginn der Nachricht 3. Hinweise Bei Echtzeit-Textkommunkation (RTT, Real-Time Text) erscheint der Text beim Empfänger dynamisch schon während der Eingabe des Senders. RTT ist also nicht das Gleiche wie etwa Chat, wo Nachrichten explizit abgeschickt werden und erst dann beim Empfänger erscheinen. Die Anforderung gilt streng genommen nur für Echtzeit-Textkommunikation, ist aber auch für die Unterscheidung von anderen Formen von Textkommunikation (etwa Text-Chats) wichtig. Wenn das Webangebot weitere Optionen für die Anzeige der Nachrichten anbietet, die gegebenenfalls nicht diesen Anforderungen entsprechen, soll dies nicht negativ bewertet werden. Andere Darstellungsweisen sind positiv, sie können bestimmte Nutzer-Bedürfnisse erfüllen. So kann die Fließtext-Darstellung von sowohl empfangenen als auch gesendeten Nachrichten in einem Textcontainer für Braille-Nutzer vorteilhaft sein. Die Unterscheidung der Nachrichten von verschiedenen Personen sollte nicht ausschließlich über eine unterschiedliche Textfarbe geschehen - vergleiche auch Abschnitt 4.2 Abgrenzung zu anderen Prüfschritten. Der Prüfschritt verlangt nur die Unterscheidung von gesendeten (auch Nutzersicht also eignen) und empfangenen Äußerungen, nicht die Unterscheidung verschiedener empfangener Äußerungen.",
    "sources": "Human Factors (HF); Real-Time Text (RTT) in Multiparty Conference Calling / ETSI TR 103 708 V1.1.1 (2022-08)",
    "classification": "Abgrenzung zu anderen Prüfschritten Wenn Nachrichten des Senders und des Empfängers nur über die Farbe des Textes unterschieden werden können und der Kontrastunterschied beider Arten von Nachricht unter 3:1 liegt, sind sowohl dieser Prüfschritt als auch Prüfschritt 1.4.1a \"Ohne Farbe nutzbar\" nicht erfüllt. Andere Anforderungen (etwa, dass der Text selbst oder auch der Rahmen oder andere grafische Elemente zur Unterscheidung kontrastreich genug sind) werden außerdem in den dafür zuständigen Prüfschritten bewertet. Einordnung des Prüfschritts nach der EN 301 549 V3.2.1 6.2.2.1 Visually distinguishable display Where ICT has RTT send and receive capabilities, displayed sent text shall be visually differentiated from, and separated from, received text. NOTE: The ability of the user to choose between having the send and receive text be displayed in-line or separately, and with options to select, allows users to display RTT in a form that works best for them. This would allow Braille users to use a single field and take turns and have text appear in the sequential way that they may need or prefer."
  },
  {
    "id": "6.2.2.2",
    "title": "6.2.2.2 Programmatisch unterscheidbare Anzeige von Textnachrichten",
    "whatChecked": "Wenn die Web-Anwendung eine Funktion zur Echtzeit Textkommunikation (RTT, Real-Time Text) anbietet, soll die Sende- und Empfangsrichtung programmatisch ermittelbar sein. Das bedeutet konkret, dass Hilfsmittel-Nutzende beim Lesen der Text-Kommunikation die selbst gesendeten Texte von empfangenen Texten unterscheiden können.",
    "whyChecked": "Wenn Menschen, die Hilfsmittel wie Screenreader einsetzen, die Äußerungen in einer Kommunikation lesen wollen, müssen sie eigene Text-Beiträge von denen anderer unterscheiden können. Darum muss die Sende- und Empfangsrichtung programmatisch ermittelbar sein. (Darüber hinaus ist es auch sinnvoll, programmatisch zwischen empfangenen Texten von verschiedenen Teilnehmenden unterscheiden zu können.)",
    "howChecked": "1. Anwendbarkeit des Prüfschritts Der Prüfschritt ist anwendbar, wenn die Web-Anwendung Echtzeit-Textkommunikation (RTT, Real-Time Text) senden und empfangen kann. 2. Prüfung 2.1 Quelltext-Prüfung Web-Anwendung öffnen In den Developer Tools des Browsers prüfen, ob die gesendeten und empfangenen Textnachrichten semantisch voneinander unterscheidbar sind. Dazu kann z. B. im HTML-Quelltext die jeweilige Verfasser:innen mit Uhrzeit genannt werden. Die unterscheidenden Merkmale (etwa Nutzer-Namen oder Kürzel) dürfen dabei nicht vor Hilfsmitteln versteckt sein, etwa über ´display:none´ oder ´aria-hidden=true´. 2.2 Zusätzliche Prüfung mittels Screenreader Screenreader starten die zu prüfende Web-Anwendung mit der Ansicht für die Echtzeit-Textkommunikation aufrufen einige Testnachrichten senden und empfangen (ggf. zweites Gerät notwendig) die Textnachrichten antippen bzw. mit dem Screenreader zu diesen navigieren auf die Ausgabe des Screenreaders achten. Wird die Unterscheidung zwischen eigenen und fremden Textbeiträgen unterstützt? 3. Hinweise Bei Echtzeit-Textkommunkation (RTT, Real-Time Text) erscheint der Text beim Empfänger dynamisch schon während der Eingabe des Senders. RTT ist also nicht das Gleiche wie etwa Chat, wo Nachrichten explizit abgeschickt werden und erst dann beim Empfänger erscheinen. Die Anforderung verlangt streng genommen nur die Unterscheidung der Senderichtung, sie verlangt also nicht, dass empfangene Textnachrichten verschiedener Teilnehmer unterscheidbar sind. In der Praxis wird jedoch anzunehmen sein, dass bei allen Echtzeit-Textbeiträgen der jeweilige Sender über einen Namen bzw. Kürzel identifizierbar ist und somit auch empfangene Textnachrichten von verschiedenen Teilnehmenden unterscheidbar sind. 4. Bewertung Erfüllt Die Eingaben des Nutzers selbst und die empfangenen Echtzeit-Texteingaben anderer Nutzer sind programmatisch unterscheidbar, z.B. über einen Präfix. Eher erfüllt Die Eingaben des Nutzers selbst von empfangenen Echtzeit-Texteingaben anderer Nutzer sind programmatisch unterscheidbar, die anderen Nutzer sind aber nicht unterscheidbar. Nicht erfüllt Es gibt beim Lesen der Echtzeit-Texteingaben einer Kommunikation keine Möglichkeit, programmatisch zwischen eigenen und fremden Eingaben zu unterscheiden.",
    "sources": "Human Factors (HF); Real-Time Text (RTT) in Multiparty Conference Calling / ETSI TR 103 708 V1.1.1 (2022-08)",
    "classification": "Einordnung des Prüfschritts nach EN 301 549 V3.2.1 6.2.2.2 Programmatically determinable send and receive direction Where ICT has RTT send and receive capabilities, the send/receive direction of transmitted/received text shall be programmatically determinable, unless the RTT is implemented as closed functionality. NOTE: This enables screen readers to distinguish between incoming text and outgoing text when used with RTT functionality."
  },
  {
    "id": "6.2.2.3",
    "title": "6.2.2.3 Sprecheridentifizierung",
    "whatChecked": "Wenn die Web-Anwendung Echtzeit Textkommunikation (RTT, Real-time Text) unterstützt und aktive Sprechende über Sprache identifiziert, sollen auch Sprechende, die Echtzeit-Texteingaben nutzen, gleichermaßen identifizierbar sein.",
    "whyChecked": "Für alle Teilnehmenden in einer entfernten Kommunikation ist es sehr wichtig, sehen oder ermitteln zu können, wer gerade spricht, um sich in Antworten auf sie oder ihn beziehen zu können. Sprach-Eingaben und Text-Eingaben sollen deshalb gleichranging behandelt werden.",
    "howChecked": "1. Anwendbarkeit des Prüfschritts Der Prüfschritt ist anwendbar, wenn die Web-Anwendung Echtzeit-Textkommunikation (RTT, Real-time Text) unterstützt und den aktiven Sprecher über Sprache identifiziert. Der aktive Sprecher wird dabei in der Web-App markiert oder anderweitig hervorgehoben. 2. Prüfung Web-Anwendung öffnen. Prüfen, ob aktive Sprechende über Sprache identifiziert und in der Anwendung markiert oder anderweitig hervorgehoben werden. Ist dies der Fall, prüfen, ob auch Teilnehmende, die Echtzeit-Texteingabe verwenden, beim Eingeben markiert oder anderweitig hervorgehoben werden. 3. Hinweise Bei diesem Test muss eine Video- und Sprachverbindung mit mehreren Teilnehmenden etabliert werden, um eine eventuelle Markierung oder anderweitige Hervorhebung zweifelsfrei festzustellen.",
    "sources": "Human Factors (HF); Real-Time Text (RTT) in Multiparty Conference Calling / ETSI TR 103 708 V1.1.1 (2022-08)",
    "classification": "Einordnung des Prüfschritts nach EN 301 549 V3.2.1 6.2.2.3 Speaker identification Where ICT has RTT capabilities, and provides speaker identification for voice, the ICT shall provide speaker identification for RTT. NOTE: This is necessary to enable both voice and RTT participants to know who is currently communicating, whether it be in RTT or voice."
  },
  {
    "id": "6.2.2.4",
    "title": "6.2.2.4 Echtzeitindikation von Sprachkommunikation",
    "whatChecked": "Wenn die Web-Anwendung Zwei-Wege-Sprachkommunikation unterstützt und Funktionen zur Echtzeit-Textkommunikation (RTT, Real-Time Text) bietet, soll die Aktivität von Sprechenden in Echtzeit visualisiert werden. Der visuelle Indikator, dass gerade gesprochen wird, soll dabei auch programmatisch ermittelbar sein, sodass auch taubblinde Menschen z. B. über eine Braillezeile über die laufende Audiokommunikation informiert werden. Es wird dabei lediglich in Echtzeit signalisiert, dass Audio-Eingabe stattfindet, die Vermittlung von Inhalten ist nicht Gegenstand des Prüfschritts.",
    "whyChecked": "Ein wichtige Information in der Kommunikation, etwa in einer Web-Konferenz, ist die Anzeige, dass jemand spricht, und die Zuordnung des Beitrags zum jeweils Sprechenden. So wissen Teilnehmende, die den Beitrag nicht hören können (z.B. gehörlose Menschen), dass gerade jemand spricht, und wer spricht.",
    "howChecked": "1. Anwendbarkeit des Prüfschritts Der Prüfschritt ist anwendbar, wenn die Web-Anwendung Zwei-Wege-Sprachkommunikation unterstützt und Funktionen zur Echtzeit-Textkommunikation bietet. 2. Prüfung Web-Anwendung öffnen Eine Verbindung mit einem weiteren Gerät über die Anwendung herstellen Prüfen, ob beim Sprechen eine Signalisierung in Echtzeit erfolgt, B. über ein blinkendes Icon Falls dies der Fall ist, mit Screenreader und Braillezeile prüfen, ob die Signalisierung programmatisch ermittelbar ist und auf der Braillezeile platzsparend über blinkende Braillemodule o. ä. dargestellt wird 3. Hinweise Bei Echtzeit-Textkommunkation (RTT, Real-Time Text) erscheint der Text beim Empfänger dynamisch schon während der Eingabe des Senders. RTT ist also nicht das Gleiche wie etwa Chat, wo Nachrichten explizit abgeschickt werden und erst dann beim Empfänger erscheinen.",
    "sources": "Human Factors (HF); Real-Time Text (RTT) in Multiparty Conference Calling / ETSI TR 103 708 V1.1.1 (2022-08)",
    "classification": "Einordnung des Prüfschritts nach EN 301 549 V3.2.1 6.2.2.4 Visual indicator of Audio with RTT Where ICT provides two-way voice communication, and has RTT capabilities, the ICT shall provide a real-time visual indicator of audio activity on the display. NOTE 1: The visual indicator may be a simple character position on the display that flickers on and off to reflect audio activity, or presentation of the information in another way that can be both visible to sighted users and passed on to deaf-blind users who are using a braille display. NOTE 2: Without this indication a person who lacks the ability to hear does not know when someone is talking."
  },
  {
    "id": "6.2.3",
    "title": "6.2.3 Interoperabilität von Echtzeit-Textkommunikation",
    "whatChecked": "Web-Anwendungen, die (meist zusätzlich zur Sprach-Kommunikation) die Echtzeit-Textkommunikation (RTT, Real-Time Text) mit anderen Anwendungen erlauben, sollen Interoperabilität, also die jeweils relevanten technischen ITU-, IETF-, oder ETSI-Standards für Echtzeit Text-Kommunikation unterstützen.",
    "whyChecked": "Wenn Web-Anwendungen, die zusätzlich zur Kommunikation über Sprache außerdem Echtzeit-Text-Kommunikation (RTT) bieten, mit anderen solchen Anwendungen in Austausch treten, sollen die Mechanismen bei der Echtzeit-Text-Kommunikation auf beiden Seiten gleichermaßen funktionieren. Dies betrifft etwa die Anzeige von nicht oder fehlerhaft übertragenen Zeichen. Dies ist sichergestellt, wenn auf beiden Seiten jeweils geltende technische Standards der ITU, der IETF oder von ETSI unterstützt werden. Wenn von der Web-Anwendung stattdessen proprietäre Mechanismen für RTT eingesetzt werden, funktionieren diese ggf. nicht beim Austausch mit anderen Anwendungen, die RTT unterstützen.",
    "howChecked": "1. Anwendbarkeit des Prüfschritts Der Prüfschritt ist anwendbar, wenn die Web-Anwendung (zusätzlich zur Sprachkommunikation) Echtzeit-Textkommunikation unterstützt und potentiell mit anderer Kommunikations-Software mit solcher Unterstützung kommunizieren kann. 2. Prüfung Die Dokumentation der Web-Anwendung oder den Anbieter der Web-Anwendung konsultieren. Werden (je nach technischer Umsetzung) die jeweils anwendbaren aktuellen technischen Standards für Echtzeit-Textkommunikation unterstützt? 3. Hinweise Bei Echtzeit-Textkommunkation (RTT, Real-Time Text) erscheint der Text beim Empfänger dynamisch schon während der Eingabe des Senders. RTT ist also nicht das Gleiche wie etwa Chat, wo Nachrichten explizit abgeschickt werden und erst dann beim Empfänger erscheinen. Bei der Beurteilung der Standards-Unterstützung muss die aktuelle Entwicklung der Standards berücksichtigt werden. Ggf. sind mittlerweile neuere Standards für die Kommunikationsmethode gängig. EN 301 549 V3.2.1 nennt folgende je nach technischer Umsetzung anwendbare Standards: Die Web-Anwendung kommuniziert über das öffentliche Telefonnetz: Die Empfehlungen ITU-T V.18 [i.23] oder dessen Text-Telefonie-Standards in den Anhängen werden für die Echtzeit-Textkommunikation verwendet. Voice over IP (VoIP) über das Session Initiation Protocol (SIP): Empfehlungen der IETF zu Echtzeit-Textkommunikation RFC 4103 [i.13] werden verwendet. Die Web-Anwendung nutzt Voice over IP (VoIP) über das IP Multimedia Sub-System (IMS): Hier sind die Protokolle ETSI TS 126 114 [i.10], ETSI TS 122 173 [i.11] und ETSI TS 134 229 [i.12] relevant. Wenn andere Kommunikationsmethoden verwendet werden: Gemeinsame, relevante und veröffentlichte Standards werden unterstützt. Dabei unterstützt der gemeinsame Standard die Anzeige von verlorenen und fehlerhaft übertragenen Zeichen.",
    "sources": "Human Factors (HF); Real-Time Text (RTT) in Multiparty Conference Calling / ETSI TR 103 708 V1.1.1 (2022-08)",
    "classification": "Einordnung des Prüfschritts nach EN 301 549 V3.2.1 6.2.3 Interoperability Where ICT with RTT functionality interoperates with other ICT with RTT functionality (as required by clause 6.2.1.1) they shall support the applicable RTT interoperability mechanisms described below: (a) ICT interoperating with other ICT directly connected to the Public Switched Telephone Network (PSTN), using Recommendation ITU-T V.18 [i.23] or any of its annexes for text telephony signals at the PSTN interface; (b) ICT interoperating with other ICT using VOIP with Session Initiation Protocol (SIP) and using RTT that conforms to IETF RFC 4103 [i.13]. For ICT interoperating with other ICT using the IP Multimedia Sub-System (IMS) to implement VOIP, the set of protocols specified in ETSI TS 126 114 [i.10], ETSI TS 122 173 [i.11] and ETSI TS 134 229 [i.12] describe how IETF RFC 4103 [i.13] would apply; (c) ICT interoperating with other ICT using technologies other than a or b, above, using a relevant and applicable common specification for RTT exchange that is published and available for the environments in which they will be operating. This common specification shall include a method for indicating loss or corruption of characters. (d) ICT interoperating with other ICT using a standard for RTT that has been introduced for use in any of the above environments, and is supported by all of the other active ICT that support voice and RTT in that environment. NOTE 1: In practice, new standards are introduced as an alternative codec/protocol that is supported alongside the existing common standard and used when all end-to-end components support it while technology development, combined with other reasons including societal development and cost efficiency, may make others become obsolete. NOTE 2: Where multiple technologies are used to provide voice communication, multiple interoperability mechanisms may be needed to ensure that all users are able to use RTT. EXAMPLE: A conferencing system that supports voice communication through an internet connection might provide RTT over an internet connection using a proprietary RTT method (option c). However, regardless of whether the RTT method is proprietary or non-proprietary, if the conferencing system also offers telephony communication it will also need to support options a or b to ensure that RTT is supported over the telephony connection."
  },
  {
    "id": "6.2.4",
    "title": "6.2.4 Reaktionsgeschwindigkeit der Echtzeit-Textkommunikation",
    "whatChecked": "Wenn die Web-App Echtzeit-Textkommunikation (RTT, Real-Time Text) unterstützt und Texteingaben entgegennimmt, soll die kleinste Texteinheit (einzelne Zeichen oder Wörter) in maximal 500 Millisekunden abgeschickt werden. Es geht hier also um Systeme, die eingegebene Zeichen unmittelbar nach der Eingabe an den Empfänger weiterleiten. Die Nachricht muss nicht erst wie in den meisten Chat-Systemen nach Eingabe abgeschickt werden, sondern erscheint unmittelbar.",
    "whyChecked": "Menschen, die über Texteingabe an einer Online-Kommunikation teilnehmen, sollen gegenüber Sprechenden nicht benachteiligt werden. Die Eingaben sollen unmittelbar oder nur mit geringer Verzögerung für andere Teilnehmende sichtbar werden.",
    "howChecked": "1. Anwendbarkeit des Prüfschritts Der Prüfschritt ist anwendbar, wenn das Webangebot Eingaben für Echtzeit-Textkommunikation unterstützt. Das ist z.B. der Fall, wenn es sich um eine Anwendung zur Kommunikation handelt, die Echtzeit-Textkommunikation unterstützt und in der Benutzerschnittstelle eine entsprechende Eingabemöglichkeit bereithält. 2. Prüfung Für diesen Prüfschritt existieren bislang nur Ansätze für die Prüfung in der Praxis. Eigentlich müsste gemessen werden, wann die Daten, direkt nach der Eingabe, von der Anwendung abgeschickt werden. Zwischenzeitlich kann man testen, indem eine Echtzeit-Textkommunikation zwischen zwei Geräten hergestellt wird. Die kleinste Texteinheit (einzelne Zeichen oder Wörter) sollte dabei möglichst unmittelbar nach der Eingabe auf dem zweiten Gerät erscheinen. Die Übertragung sollte nicht mehr als eine halbe Sekunde dauern. Physikalische Grenzen durch die Netzwerktechnik müssen dabei berücksichtigt und abgezogen werden. Dies wird z. B. bei weiten Entfernungen der Kommunikationspartner relevant. Die reine Übertragungszeit kann z. B. mit einem “Ping” gemessen werden. 3. Hinweise Bei Echtzeit-Textkommunkation (RTT, Real-Time Text) erscheint der Text beim Empfänger dynamisch schon während der Eingabe des Senders. RTT ist also nicht das Gleiche wie etwa Chat, wo Nachrichten explizit abgeschickt werden und erst dann beim Empfänger erscheinen. Es sollte eine maximale Verzögerung von 300 Millisekunden für das Abschicken der Eingabe angestrebt werden, da dies den wahrgenommenen Informationsfluss verbessert. Für Hinweise, wie dies zuverlässig in der Praxis gemessen werden kann, können Sie auf GitHub ein Issue eröffnen .",
    "sources": "Human Factors (HF); Real-Time Text (RTT) in Multiparty Conference Calling / ETSI TR 103 708 V1.1.1 (2022-08)",
    "classification": "Einordnung des Prüfschritts nach EN 301 549 V3.2.1 6.2.4 RTT responsiveness Where ICT utilises RTT input, that RTT input shall be transmitted to the ICT network or platform on which the ICT runs within 500 ms of the time that the smallest reliably composed unit of text entry is available to the ICT for transmission. Delays due to platform or network performance shall not be included in the 500 ms limit. NOTE 1: For character by character input, the \"smallest reliably composed unit of text entry\" would be a character. For word prediction it would be a word. For some voice recognition systems - the text may not exit the recognition software until an entire word (or phrase) has been spoken. In this case, the smallest reliably composed unit of text entry available to the ICT would be the word (or phrase). NOTE 2: The 500 ms limit allows buffering of characters for this period before transmission so character by character transmission is not required unless the characters are generated more slowly than 1 per 500 ms. NOTE 3: A delay of 300 ms, or less, produces a better impression of flow to the user."
  },
  {
    "id": "6.3",
    "title": "6.3 Anrufer-Identifizierung",
    "whatChecked": "Wenn die Web-Anwendung Telekommunikationsfunktionen mit Anrufidentifizierung bietet, soll die Identifizierung (auch) in Textform verfügbar und programmatisch ermittelbar sein.",
    "whyChecked": "Diese Anforderung stellt sicher, dass auch Nutzende von Hilfsmittel-Technologien den Anrufer identifizieren können.",
    "howChecked": "1. Anwendbarkeit des Prüfschritts Der Prüfschritt ist anwendbar, wenn die Web-Anwendung Telekommunikationsfunktionen mit Anrufidentifizierung bietet. Anrufidentifizierung bedeutet hier die Signalisierung bzw. Anzeige des Anrufenden. 2. Prüfung Für die Prüfung muss die Web-Anwendung ggf. auf zwei Geräten geöffnet werden. Screenreader starten Web-Anwendung öffnen Anruf von einem zweiten Gerät tätigen Prüfen, wie der Anruf in Zusammenhang mit dem aktiviertem Screenreader signalisiert wird. Wird der Anrufende automatisch angesagt oder sind die Informationen über den Anrufenden im Browser für den Screenreader ohne Umwege auslesbar? Prüfen, wie der Anruf visuell signalisiert bzw. angezeigt wird. Die Anzeige muss den Anrufenden in irgend einer Weise in Textform identifizieren, B. über die Telefonnummer oder über den für die Nummer hintelegten Namen des Anrufers.",
    "sources": "Human Factors (HF); Real-Time Text (RTT) in Multiparty Conference Calling / ETSI TR 103 708 V1.1.1 (2022-08)",
    "classification": "Einordnung des Prüfschritts nach EN 301 549 V3.2.1 6.3 Caller ID Where ICT provides caller identification or similar telecommunications functions, the caller identification and similar telecommunications functions shall be available in text form as well as being programmatically determinable, unless the functionality is closed."
  },
  {
    "id": "6.4",
    "title": "6.4 Alternativen zu sprachbasierten Diensten",
    "whatChecked": "Wenn ein Webangebot Echtzeit-Sprachkommunikation mit Voicemail-Funktion bietet oder interaktive Sprachdialogsysteme einsetzt (z.B. sprachgesteueerte Menüführung), sollen etwaige Aufgaben auch ohne die Fähigkeit zum Hören und Sprechen durchführbar sein.",
    "whyChecked": "Gehörlose und schwerhörige Menschen und Menschen mit Einschränkungen beim Sprechen können sprachbasierte Dienste nicht nutzen. Deshalb muss eine zugängliche Alternative bereitstehen, in der der Zugang zu Informationen und deren Ausgabe auch ohne Sprechen und Hören möglich ist.",
    "howChecked": "1. Anwendbarkeit des Prüfschritts Der Prüfschritt ist anwendbar, wenn das Webangebot Echtzeit-Sprachkommunikation mit Voicemail-Funktion oder interaktive Sprachdialogsysteme (z.B. sprachgesteuerte Menüführung bei einer Hotline) einsezt. 2. Prüfung Wenn Informationen über Echtzeit-Sprachkommunikation bereitgestellt werden, prüfen, ob diese auch ohne Sprach- und Hör-Fähigkeit zugänglich ist. Dies beinhaltet: eine alternative Zugangsmöglichkeit, z.B. über barrierefreie Menüs oder Formulare eine alternative barrierefreie Ausgabe der Information, etwa als sichtbarer programmatisch ermittelbarer Text 3. Hinweise Ein Beispiel für einen Dienst, der Sprach und Hörfähigkeiten voraussetzt, ist z.B. das Video-Ident-Verfahren. Dieses wird u. a. bei Online-Banken für die Identifizierung genutzt. Mit einem Videoanruf werden dabei Personalausweis etc. auf Echtheit geprüft. Hier muss eine Alternative geboten werden, die das Hören und Sprechen nicht erfordert. Ein anderes Beispiel ist telefonische Ansage des Guthabens bei einem Prepaid-Mobilfunkvertrag. Hier müsste der Anbieter das aktuelle Guthaben in Textform auf der Seite bereitstellen. Für Hinweise zu diesem Prüfschritt können Sie auf GitHub ein Issue anlegen .",
    "sources": "Human Factors (HF); Real-Time Text (RTT) in Multiparty Conference Calling / ETSI TR 103 708 V1.1.1 (2022-08)",
    "classification": "Einordnung des Prüfschritts nach EN 301 549 V3.2.1 6.4 Alternatives to voice-based services Where ICT provides real-time voice-based communication and also provides voice mail, auto-attendant, or interactive voice response facilities, the ICT shall offer users a means to access the information and carry out the tasks provided by the ICT without the use of hearing or speech. NOTE 1: Tasks that involve both operating the interface and perceiving the information would require that both the interface and information be accessible without use of speech or hearing. NOTE 2: Solutions capable of handling audio, RTT and video media could satisfy the above requirement."
  },
  {
    "id": "6.5.2",
    "title": "6.5.2 Auflösung bei Videotelefonie",
    "whatChecked": "Web-Anwendungen mit Videotelefonie-Funktion sollen mindestens die QVGA-Auflösung für die Videoübertragung unterstützen. Üblicherweise entspricht dies 320x240 Pixel. Bei anderen Seitenverhältnissen müssen entsprechend 76.800 Bildpunkte geboten werden.",
    "whyChecked": "Für manche Menschen mit Behinderung ist ein Videobild mit ausreichender Auflösung besonders wichtig - zum Beispiel für gehörlose Menschen, die über das Mundbild von Sprechern die Inhalte verstehen oder durch die zusätzliche Aufnahme von Mundbild, Mimik und Gestik eine simultane Verschriftlichung besser verstehen können.",
    "howChecked": "1. Anwendbarkeit des Prüfschritts Der Prüfschritt ist anwendbar, wenn die Web-App Videotelefonie unterstützt. 2. Prüfung Die technische Dokumentation der Web-App konsultieren. Wird mindestens eine QVGA (320x240 Pixel) angegeben? Testübertragung: Den visuellen Eindruck prüfen. Ist die Angabe in der App-Dokumentation plausibel? 3. Hinweise Für Hinweise zu diesem Prüfschritt eröffnen Sie gerne ein Issue auf GitHub .",
    "sources": "Zurzeit keine Quellen.",
    "classification": "Einordnung des Prüfschritts nach EN 301 549 V3.2.1 6.5.2 Resolution Where ICT that provides two-way voice communication includes real-time video functionality, the ICT: shall support at least QVGA resolution"
  },
  {
    "id": "6.5.3",
    "title": "6.5.3 Bildwiederholfrequenz bei Videotelefonie",
    "whatChecked": "Wenn das Web-Angebot Videotelefonie unterstützt, soll sie eine Bildwiederholfrequenz (framerate) von mindestens 20 Bildern pro Sekunde unterstützen. Besser ist eine Bildwiederholfrequenz von 30 Bildern pro Sekunde.",
    "whyChecked": "Eine ausreichende Bildwiederholfrequenz ist besonders wichtig für Menschen mit Hörbehinderungen, die Bildinformationen auswerten, etwa gehörlose Menschen, die das Mundbild von Sprechenden lesen. Auch die unterstützende Wahrnehmung von Mimik und Gestik verlangt eine ausreichende Bildwiederholfrequenz.",
    "howChecked": "1. Anwendbarkeit des Prüfschritts Der Prüfschritt ist anwendbar, wenn das Web-Angebot Videotelefonie unterstützt. 2. Prüfung Zur Beurteilung der Konformität mit diesem Prüfschritt müssen derzeit die Angaben des Software-Herstellers mit den eigenen visuellen Eindrücken abgeglichen werden. Für die Prüfung muss das Web-Angebot auf zwei Geräten geöffnet werden. Die unterstützte Bildwiederholfrequenz der Dokumentation des Web-Angebots entnehmen oder vom Hersteller erfragen. Werden mindestens 20 Bilder pro Sekunde unterstützt? Web-Angebot auf zwei Geräten öffnen Videotelefonieverbindung zwischen den Geräten herstellen Prüfen, ob das Bild flüssig dargestellt wird. Scheint die Angabe des Herstellers über die Bildwiederholfrequenz plausibel? 3. Hinweise Für die Videotelefonie ist eine Bildwiederholfrequenz von 30 Bildern pro Sekunde empfehlenswert, um eine flüssige Darstellung des Bildes zu gewährleisten. Eine genaue Methode zur Messung der unterstützten Bildwiederholfrequenz ist noch offen. Hinweise zur Weiterentwicklung des Prüfschritts können Sie auf GitHub in einem Issue hinterlassen.",
    "sources": "Zurzeit keine Quellen.",
    "classification": "Einordnung des Prüfschritts nach EN 301 549 V3.2.1 6.5.3 Framerate Where ICT that provides two-way voice communication includes real-time video functionality, the ICT: shall support a frame rate of at least 20 frames per second (FPS)"
  },
  {
    "id": "6.5.4",
    "title": "6.5.4 Synchronität bei Videotelefonie",
    "whatChecked": "Wenn das Webangebot Videotelefonie unterstützt, soll die Zeitdifferenz zwischen Audio und Video nicht mehr als 100 Millisekunden betragen.",
    "whyChecked": "Die Verständlichkeit von Videotelefonie ist allgemein schlechter, wenn Bild und Ton nicht zeitgleich übertragen werden. Gestik und Mimik der Sprechenden passen dann nicht mehr zur gehörten Sprache. Menschen mit kognitiven Einschränkungen, gehörlosen Menschen und Menschen mit eingeschränktem Hörvermögen fällt es vermutlich schwerer, mittels nicht synchroner Videotelefonie zu kommunizieren. Um dem Gesprochenen besser zu folgen, ist es hilfreich, zeitgleich zum Ton die Lippen der sprechenden Person zu sehen. Die Voraussetzung dafür ist, dass Bild und Ton gleichzeitig übertragen werden. Empirische Untersuchungen dazu sind uns allerdings nicht bekannt, und Hinweise darauf willkommen.",
    "howChecked": "1. Anwendbarkeit des Prüfschritts Der Prüfschritt ist anwendbar, wenn das Webangebot Videotelefonie mit Sprachübertragung unterstützt. 2. Prüfung Die Zeitdifferenz zwischen Audio und Video bei der Übertragung von Videotelefonie soll nicht mehr als 100 Millisekunden betragen, deutlich wahrnehmbare Differenzen sind also zu vermeiden. Die zeitgleiche Übertragung von Ton und Bild (bzw. eine Asynchronität, das bedeutet Bild und Ton werden nicht gleichzeitig übertragen) kann mit einem Testvideoanruf geprüft werden. Dafür muss das Webangebot auf zwei verschiedenen Testgeräten im Browser laufen. Webangebot auf zwei Geräten im Browser aufrufen Videotelefonieverbindung zwischen beiden Angeboten herstellen Synchronität zwischen Sprache und Video prüfen (Lippensynchronität). Ist eine Zeitdifferenz deutlich wahrnehmbar? Um ein belastbares Ergebnis zu erzielen, sollte die Testübertragung wiederholt werden. Hinweise Untersuchungen zeigen, dass die Verständlichkeit deutlich mehr leidet, wenn das Video dem Audio hinterherhängt, als umgekehrt. Diese Tatsache kann bei der Bewertung entsprechend berücksichtigt und angemerkt werden. Um Latenzen der Netzwerk-Infrastruktur zu minimieren, sollten beide Geräte über eine stabile Internetverbindung mit ausreichend Bandbreite verbunden sein. Für Hinweise zu diesem Prüfschritt, z. B. für die genaue Messung der Zeitdifferenz, können Sie auf GitHub ein Issue anlegen .",
    "sources": "Zurzeit keine Quellen.",
    "classification": "Einordnung des Prüfschritts nach EN 301 549 V3.2.1 6.5.4 Synchronization between audio and video Where ICT that provides two-way voice communication includes real-time video functionality, the ICT shall ensure a maximum time difference of 100 ms between the speech and video presented to the user. NOTE: Recent research shows that, if audio leads the video, the intelligibility suffers much more than the reverse."
  },
  {
    "id": "6.5.5",
    "title": "6.5.5 Visuelle Anzeige von Audio-Aktivität",
    "whatChecked": "Wenn das Webangebot Videotelefonie unterstützt, soll Audio-Aktivität visuell angezeigt werden.",
    "whyChecked": "Die Anzeige der Audio-Aktivität ermöglicht gehörlosen Nutzenden die Wahrnehmung, dass jemand spricht und wer spricht.",
    "howChecked": "Anwendbarkeit des Prüfschritts Der Prüfschritt ist anwendbar, wenn das Webangebot Videotelefonie mit Sprachübertragung unterstützt. Prüfung Webangebot auf zwei verschiedenen Geräten im Browser mit abweichenden Nutzenden-Konten starten. Videotelefonie-Verbindung zwischen den beiden Instanzen des Webangebots herstellen. Auf dem verbundenen Gerät Sprache eingeben und auf dem Prüfgerät überprüfen, ob die Spracheingabe visuell wahrnehmbar ist. Hinweise Für den Indikator der Sprachaktivität gelten weitere Anforderungen, z.B. bezüglich Grafik-Kontrast. Der visuelle Indikator der Audio-Aktivität kann ein einfacher visueller Punkt, eine LED oder eine andere Art von Ein- / Aus-Anzeige sein, die flackert. Für Hinweise zu diesem Prüfschritt können Sie auf GitHub ein Issue anlegen .",
    "classification": "Einordnung des Prüfschritts nach EN 301 549 V3.2.1 6.5.5 Visual indicator of audio with video Where ICT provides two-way voice communication, and includes real-time video functionality, the ICT shall provide a real-time visual indicator of audio activity. NOTE 1: The visual indicator may be a simple visual dot or LED, or other type of on/off indicator, that flickers to reflect audio activity. NOTE 2: Without this indication a person who lacks the ability to hear does not know when someone is talking."
  },
  {
    "id": "6.5.6",
    "title": "6.5.6 Sprecher-Anzeige für Gebärdensprachen-Kommunikation",
    "whatChecked": "Wenn ein Webangebot Videotelefonie unterstützt und die Aktivität von Sprechenden angezeigt wird, soll dies auch für Nutzende von Gebärdensprache gewährleistet sein.",
    "whyChecked": "Die Anzeige einer Gebärden-Eingabe ermöglicht Nutzenden die Wahrnehmung, dass jemand gerade Eingaben in Gebärdensprache macht und wer dies tut.",
    "howChecked": "1. Anwendbarkeit des Prüfschritts Der Prüfschritt ist anwendbar, wenn ein Webangebot Videotelefonie unterstützt und eine Anzeige der Sprechaktivität von Sprechenden bietet. 2. Prüfung Webangebot auf zwei Geräten im Browser mit abweichenden Nutzenden-Konten starten. Videotelefonie-Verbindung zwischen den beiden Instanzen des Webangebots herstellen. Auf dem verbundenen Gerät die Eingabe von Gebärden starten. Prüfen, ob das Webangebot die Möglichkeit bietet, den Start einer Gebärden-Eingabe manuell zu signalisieren (d.h. die Anzeige des Aktivitätszustandes zu aktivieren) oder die Eingabe vom Webangebot automatisch erkannt und in der Folge der Aktivitäts-Zustand automatisch gesetzt wird. Prüfen, ob die Aktivität der Gebärden-Eingabe wahrnehmbar ist. 3. Hinweise Es spielt für die Überprüfung vermutlich keine Rolle, ob die Eingabe von Gebärdensprachen-Kundigen vorgenommen wird oder nur ähnliche Bewegungen gemacht werden, eine Eingabe also nur simuliert wird. Für den Indikator der Aktivität von Gebärdenden gelten weitere Anforderungen, z.B. bezüglich Grafik-Kontrast. Für Hinweise zu diesem Prüfschritt können Sie auf GitHub ein Issue anlegen .",
    "sources": "Zurzeit keine Quellen.",
    "classification": "Einordnung des Prüfschritts nach EN 301 549 V3.2.1 6.5.6 Speaker identification with video (sign language) communication Where ICT provides speaker identification for voice users, it shall provide a means for speaker identification for real-time signing and sign language users once the start of signing has been indicated. NOTE 1: The speaker ID can be in the same location as for voice users for multiparty calls. NOTE 2: This mechanism might be triggered manually by a user, or automatically where this is technically achievable."
  },
  {
    "id": "7.1.1",
    "title": "7.1.1 Wiedergabe von Untertiteln",
    "whatChecked": "Sind Videos mit synchroner Bild- und Tonspur vorhanden und werden dynamisch zuschaltbare, textbasierte Untertitel (closed captions) angeboten, bietet der Videoplayer die Möglichkeit, diese ein- und auszublenden.",
    "whyChecked": "Filme sind in der Regel ohne den Ton nicht zu verstehen. Daher muss für Menschen mit Höreinschränkung der Inhalt der Tonspur durch Untertitel bereitgestellt werden. Untertitel können auf unterschiedliche Arten eingebunden werden: Manche Player unterstützen nur die dauerhaft sichtbaren „open captions“, die meisten jedoch sogenannte textbasierte „closed captions“, die über ein Bedienelement am Player flexibel zuschaltbar sind. Damit closed captions (dynamisch zuschaltbare Untertitel) von den Nutzenden wahrgenommen werden können, ist es erforderlich, dass der Videoplayer die Möglichkeit bietet, diese ein- und auszublenden. Bei open captions handelt es sich hingegen um immer sichtbare Untertitel, d.h. der Videoplayer wird hier nicht geprüft.",
    "howChecked": "1. Anwendbarkeit des Prüfschritts Der Prüfschritt ist anwendbar, wenn die Webseite aufgezeichnete Videos mit synchroner Bild- und Tonspur anbietet und Untertitel vorhanden sind. Zuschaltbare Untertitel sind in der Regel innerhalb des video -Elements als getrennte track -Datei verfügbar. Aufgezeichnete Videos ohne Tonspur (stumme Videos) brauchen keine Untertitelung, der Prüfschritt ist für sie nicht anwendbar. 2. Prüfung Text-Dateien für Untertitelungen werden meist über das HTML 5 track -Element eingebunden. Im Quellcode prüfen, ob über das track -Element eine Untertitel-Datei eingebunden ist. Das kind -Attribut legt die Art der Texteinblendung fest. Der Wert subtitles zeigt an, dass es sich um Untertitel handelt (Transkription oder Übersetzung des Dialogs). Der Wert captions zeigt an, dass es sich um Untertitel für hörgeschädigte und gehörlose Menschen handelt. Manche Player binden Untertitel-Dateien auch außerhalb des video -Elements ein. Wenn eine Untertitel-Datei eingebunden ist, prüfen, ob der Videoplayer eine Möglichkeit bietet, diese ein- und auszublenden. 3. Hinweise Empfehlenswert wäre, wenn der Videoplayer eine Funktion zur Verfügung stellt, um die Untertitel auf einer Braillezeile anzuzeigen. Nicht negativ bewertet wird, wenn ein alternatives Video mit open captions bei Aktivierung eines Bedienelements im Player neu geladen wird, oder wenn das Video mit open captions über einen zweiten Player angezeigt wird. 4. Bewertung Erfüllt Sind Videos mit synchroner Bild- und Tonspur vorhanden, werden Untertitel als fester Bestandteil des Videos angezeigt (open captions) oder können über ein Bedienelement des Videoplayers ein- und ausgeblendet werden (closed captions). Nicht voll erfüllt Es wird eine Untertitel-Datei angeboten, der Player bietet jedoch keine Möglichkeit, diese anzuzeigen.",
    "sources": "Adding captions and subtitles to HTML video (Mozilla Foundation, mdn web docs)",
    "classification": "Abgrenzung zu anderen Prüfschritten Bei diesem Prüfschritt geht es um den eigentlichen Prozess der Anzeige von Untertiteln während der Wiedergabe sowie um die Bedienelemente zum Ein- und Ausschalten von Untertiteln im Videoplayer. 9.1.2.2 \"Aufgezeichnete Videos mit Untertiteln\" bezieht sich hingegen auf den Inhalt der Untertitel. Es geht darum, dass der Autor bei der Erstellung der Untertitel sicherstellen muss, dass Audioinhalt korrekt transkribiert wurde und in einem Format erfasst werden, das für die Bereitstellung synchronisierter Untertitel verwendet werden kann. Anforderungen der Video-Bedienelemente bezüglich Kontrast, zugänglichem Namen, Tastaturbedienbarkeit, Fokushervorhebung usw. werden in den entsprechenden Prüfschritten geprüft. Einordnung des Prüfschritts nach EN 301 549 V3.2.1 7.1.1 Captioning playback Where ICT displays video with synchronized audio, it shall have a mode of operation to display the available captions. Where closed captions are provided as part of the content, the ICT shall allow the user to choose to display the captions. NOTE 1: Captions may contain information about timing, colour and positioning. This caption data is necessary for caption users. Timing is used for caption synchronization. Colour can be used for speaker identification. Position can be used to avoid obscuring important information. NOTE 2: If a Braille device is connected, the ICT should provide an option to display captions on the Braille device."
  },
  {
    "id": "7.1.2",
    "title": "7.1.2 Synchrone Untertitel",
    "whatChecked": "Sind Videos mit synchroner Bild- und Tonspur vorhanden, ist gewährleistet, dass der Videoplayer Untertitel und Ton synchron darstellt. Das bedeutet für Untertitel aufgezeichneter Videos: Die Anzeige des Untertitels weicht nicht mehr als 100ms vom Zeitstempel der Untertitel-Datei ab. Dies bezieht sich theoretisch auch auf Live-Untertitel. Hier liegt jedoch naturgemäß einer Verzögerung durch die Konvertierung von gesprochener Sprache in Text vor, besonders, wenn die Konvertierung nicht automatisch, sondern durch Menschen erfolgt.",
    "whyChecked": "Die Untertitel-Standards fordern für eine Untertitelung \"Synchronität\". Das bedeutet, dass die Einblendung zeitgleich mit dem Bild/Ton und möglichst lippensynchron erfolgen soll. Hintergrund ist, dass Menschen mit Höreinschränkungen neben der Untertitelung auch auf das Mundbild achten. Außerdem leidet die Gesamtverständlichkeit, wenn Bild/Ton und Untertitel nicht synchron sind.",
    "howChecked": "1. Anwendbarkeit des Prüfschritts Der Prüfschritt ist anwendbar, wenn auf der Webseite aufgezeichnete Videos mit synchroner Bild- und Tonspur sowie zuschaltbare Untertitel (closed captions) vorhanden sind. 2. Prüfung 2.1 Prüfung von Untertiteln eines aufgezeichneten Videos: Das Video in dem auf der Webseite eingebundenen Player abspielen. Prüfen, ob die Untertitel synchron zum Ton angezeigt werden. Werden Untertitel nicht synchron angezeigt, kann das an den technischen Möglichkeiten des Players oder an fehlerhaften Zeitstempel in der Untertitel-Datei liegen. Um festzustellen, ob die Ursache beim Player liegt oder an der Untertitel-Datei, können die Zeitstempel der Untertitel-Datei stichprobenartig geprüft werden. Dazu im Inspektor des Browsers das track -Element suchen. Die Untertitel-Datei ist als .vtt oder .srt-Datei über das track -Element eingebunden. Mit der Maus über den Dateipfad fahren. Mit der rechten Maustaste das Kontextmenü öffnen und mit Hilfe der Funktion \"Link in neuem Tab anzeigen\" die Untertitel anzeigen. Alternativ den Pfad kopieren. Den Pfad im Browser hinter dem / der Top-Level-Domain eingeben. Prüfen, ob die Zeitstempel korrekt sind. Wenn die Zeitcodierung in der Track-Datei Fehler aufweist, ist davon auszugehen, dass der Fehler nicht beim Player liegt. Dieser Prüfschritt ist erfüllt. 3. Hinweise Wenn Fehler in der Zeitcodierung der Track-Datei gefunden werden, ist davon auszugehen, dass der Fehler nicht beim Player liegt. Es ist es jedoch nicht ganz auszuschließen, dass eine nicht vorhandene Synchronität an der Untertitel-Datei und am Player liegt. Es ist sinnvoll, stichprobenartig zu prüfen, ob es im Webangebot Videos gibt, bei denen die Untertitel synchron zum Ton dargestellt werden. Wenn dies der Fall ist, ist das ein Hinweis, dass der Player Untertitel prinzipiell korrekt darstellt. Der Prüfschritt ist damit erfüllt, Probleme mit der Synchronität sind dann höchstwahrscheinlich bei den Inhalten zu suchen und nicht im eingebundenen Player. Hinweise zu diesem Prüfschritt können Sie auf GitHub in einem Issue hinterlassen . 4. Bewertungen Nicht erfüllt: Bild/Ton und Untertitel sind nicht synchron.",
    "sources": "Zurzeit keine Quellen.",
    "classification": "Abgrenzung zu anderen Prüfschritten Inhalte, Qualität und Angemessenheit der Untertitel werden in Prüfschritt 9.1.2.2 \"Aufgezeichnete Videos mit Untertiteln\" geprüft. In diesem Prüfschritt wird geprüft, ob der eingebundene Player grundsätzlich in der Lage ist, Videos mit Untertiteln synchron darzustellen. Einordnung des Prüfschritts nach EN 301 549 V3.2.1 7.1.2 Captioning synchronization Where ICT displays captions, the mechanism to display captions shall preserve synchronization between the audio and the corresponding captions as follows: Captions in recorded material: within 100 ms of the time stamp of the caption Live captions: within 100 ms of the availability of the caption to the player."
  },
  {
    "id": "7.1.3",
    "title": "7.1.3 Erhaltung von Untertiteln",
    "whatChecked": "Wenn das Webangebot Videos mit Untertiteln überträgt, konvertiert oder aufnimmt, bleiben die Untertitel erhalten, sie lassen sich weiterhin anzeigen und werden synchron zum Ton dargestellt. Das heißt, die Prüfschritte 7.1.1 \"Wiedergabe von Untertiteln\" und 7.1.2 \"Synchrone Untertitel\" sind weiterhin erfüllt.",
    "whyChecked": "Wenn das Webangebot Videos mit Untertiteln überträgt, konvertiert oder aufnimmt, sollen diese Untertitel in gleicher Weise nutzbar sein wie vor dem Vorgang. Dazu gehört, dass sie sich anzeigen lassen und synchron dargestellt werden.",
    "howChecked": "1. Anwendbarkeit des Prüfschritts Der Prüfschritt ist anwendbar, wenn das Webangebot Videos mit Untertiteln übertragen, konvertieren oder aufnehmen kann. 2. Prüfung Wenn die Webseite Videos mit Untertiteln konvertiert oder aufnimmt, Video anschließend in einem konformen Player abspielen: Sind alle Untertitel aus der Quelle weiterhin vorhanden? Lassen sich alle Untertitel anzeigen? Ist die Darstellung der Untertitel weiterhin synchron zum Ton? 3. Hinweise Wenn gestalterische Aspekte der Untertitel (z. B. Position, Farbe, Fettung oder kursive Darstellung) informationstragend sind, sollten sie nach Möglichkeit erhalten bleiben. Hinweise zu diesem Prüfschritt können Sie auf GitHub in einem Issue hinterlassen . 4. Bewertung Nicht erfüllt: Nach der Übertragung, Konvertierung oder Aufnahme lassen sich Untertitel nicht mehr anzeigen oder sind nicht mehr synchron zum Ton.",
    "sources": "Zurzeit keine Quellen.",
    "classification": "Abgrenzung zu anderen Prüfschritten In diesem Prüfschritt wird geprüft, ob es durch die Übertragung, Konvertierung oder Aufnahme zu Problemen hinsichtlich der Anzeige oder Synchronität von Untertiteln kommt. In den Prüfschritten 7.1.1 \"Wiedergabe von Untertiteln\" und 7.1.2 \"Synchrone Untertitel\" geht es hingegen um Videos, die auf der Webseite bereits vorhanden sind. Einordnung des Prüfschritts nach EN 301 549 V3.2.1 7.1.3 Preservation of captioning Where ICT transmits, converts or records video with synchronized audio, it shall preserve caption data such that it can be displayed in a manner consistent with clauses 7.1.1 and 7.1.2. Additional presentational aspects of the text such as screen position, text colours, text style and text fonts may convey meaning, based on regional conventions. Altering these presentational aspects could change the meaning and should be avoided wherever possible."
  },
  {
    "id": "7.1.4",
    "title": "7.1.4 Untertitel-Anpassungen",
    "whatChecked": "Wenn das Webangebot Videos mit Untertiteln enthält, lassen sich Untertitel anpassen, z.B. hinsichtlich der Schriftgröße.",
    "whyChecked": "Bei Videos mit Untertiteln ist es für Untertitel-Nutzende hilfreich, die visuelle Darstellung der Untertitel anpassen zu können, zum Beispiel, die Schrift größer stellen zu können oder den Kontrast des Texts erhöhen zu können.",
    "howChecked": "1. Anwendbarkeit des Prüfschritts Der Prüfschritt ist anwendbar, wenn das Webangebot Videos mit Untertiteln enthält und sich die Untertitel zuschalten lassen (closed captions). Auf permanent sichtbare Untertitel, die Teil des Videobildes sind (open captions), ist der Prüfschritt nicht anwendbar. 2. Prüfung Webangebot öffnen. Video mit Untertitelung abspielen. Falls es sich um zuschaltbare Untertitel handelt: Prüfen, ob es Einstellungsmöglichkeiten für die Darstellung der Untertitel gibt, etwa, um Schriftgröße, Schriftart (Font), Vorder- und Hintergrundfarbe, oder Transparenz des Untertitel-Bereichs anpassen zu können. Hinweise zu diesem Prüfschritt können Sie auf GitHub in einem Issue hinterlassen . 3. Hinweise Art und Umfang der Anpassungsmöglichkeiten sind nicht normativ festgelegt. Die Norm nennt beispielhaft Hinter- und Vordergrundfarbe der Untertitel, Schriftart, Größe, Transparenz des Untertitel-Bereichs und Kontur der Schrift. Der Prüfschritt ist auch erfüllt, wenn sich die Darstellung der Untertitel nicht über Einstellungen des Video-Players, sondern durch browserseitige oder systemseitige Einstellungen anpassen lässt (wenn also etwa die Vergrößerung der Schriftgröße oder angepasste Farb-Schemata in den Browser-Einstellungen sich auf die Darstellung der Untertitel auswirken). 4. Bewertung Nicht erfüllt: Bei zuschaltbaren Untertiteln (closed captions) gibt es keinerlei Anpassungsmöglichkeiten für Position, Textgröße, Text-Vorder- und Hintergrundfarbe, Textstil oder Text-Font.",
    "sources": "Zurzeit keine Quellen.",
    "classification": "Einordnung des Prüfschritts nach EN 301 549 v.3.2.1 7.1.4 Captions characteristics Where ICT displays captions, it shall provide a way for the user to adapt the displayed characteristics of captions to their individual requirements, except where the captions are displayed as unmodifiable characters. NOTE 1: Defining the background and foreground colour of subtitles, font type, size opacity of the background box of subtitles, and the contour or border of the fonts can contribute to meeting this requirement. NOTE 2: Subtitles that are bitmap images are examples of unmodifiable characters."
  },
  {
    "id": "7.1.5",
    "title": "7.1.5 Gesprochene Untertitel",
    "whatChecked": "Wenn das Webangebot Videos mit einem Originalton enthält, der nicht der Hauptsprache des Webangebots entspricht, sollen zuschaltbare bzw. programmatisch ermittelbare Untertitel, die in der Hauptsprache der Seite angeboten werden, als akustische Ausgabe zugänglich sein, z.B. über eine eigene Tonspur, die den Untertiteln entspricht, oder über eine generierte Sprachausgabe der Untertitel. Nicht programmatisch ermittelbar sind Untertitel, die \"fest eingebrannt\" (open captions), also Teil der Bildinformation, sind.",
    "whyChecked": "Für Menschen, die den fremdsprachigen Originalton eines Videos nicht verstehen, ist eine Übersetzung in Untertiteln in der eigenen Sprache wichtig. Diese Untertitel sollen auch für blinde oder seheingeschränkte Menschen als akustische Ausgabe zugänglich sein.",
    "howChecked": "1. Anwendbarkeit des Prüfschritts Der Prüfschritt ist anwendbar: wenn der Original-Ton des Videos fremdsprachig ist (d.h. er entspricht nicht der Hauptsprache des Webauftritts) und Untertitel in der Hauptsprache des Webauftritts bereitgestellt werden und wenn es keine Version des Videos mit einer Tonspur in der Hauptsprache des Webauftritts gibt. 2. Prüfung Webangebot öffnen. Prüfen, ob der Originalton des Videos von der Hauptsprache des Webangebots abweicht. Prüfen, ob für Videos mit fremdsprachiger Tonspur Untertitel in der Hauptsprache des Webangebots angeboten werden. Prüfen, ob sich eine alternative Tonspur in der Hauptsprache des Angebots oder eine generierte Sprachausgabe der Untertitel aktivieren lässt. 3. Hinweise Gängige Video-Player verfügen derzeit meist nicht über die Möglichkeit einer einschaltbaren Sprachausgabe der Untertitel. Für blinde oder sehbehinderte Menschen, die den fremdsprachigen Originalton eines Videos nicht verstehen, sollen Untertitel in der Hauptsprache der Webseite als akustische Ausgabe zugänglich sein. Ist der Original-Ton des Videos bereits in der Hauptsprache, so gelten Untertitel in anderen Sprachen als zusätzliche Informationen und sind daher nicht von der Anforderung betroffen. Hinweise zu diesem Prüfschritt können Sie auf GitHub in einem Issue anlegen . 4. Bewertung Nicht erfüllt: Bei Videos mit fremdsprachiger Tonspur und zuschaltbaren Untertiteln in der Hauptsprache sind die Untertitel nicht als akustische Ausgabe zugänglich.",
    "sources": "Empfehlungen für die Audio-Darstellung von Text in Videos, einschließlich Untertitel und andere Texte im Bild (ITU Version, Englisch, kostenlos) ITU T.701.25 : Guidance on the audio presentation of text in videos, including captions, subtitles and other on-screen text (itu.int)",
    "classification": "Einordnung des Prüfschritts nach EN 301 549 v.3.2.1 7.1.5 Spoken subtitles Where ICT displays video with synchronized audio, it shall have a mode of operation to provide a spoken output of the available captions, except where the content of the displayed captions is not programmatically determinable. NOTE 1: Being able to manage speech output range for spoken subtitles independently from general ICT speech is preferable for most users. That is possible when the audio file with spoken subtitle is delivered in a separate audio track and mixed in the end users device."
  },
  {
    "id": "7.2.1",
    "title": "7.2.1 Wiedergabe von Audiodeskription",
    "whatChecked": "Wenn Videos mit synchroner Bild- und Tonspur vorhanden sind und eine alternative Version mit Audiodeskription verfügbar ist, gibt es einen Mechanismus für die Auswahl und Wiedergabe der verfügbaren Audiodeskription. Für die Auswahl der Version mit Audiodeskription muss der eingesetzte Player ein entsprechendes AD-Bedienelement haben oder die Möglichkeit bieten, eine Tonspur mit Audiodeskription in den Spracheinstellungen zu aktivieren. Alternativ kann eine Version mit Audiodeskription auch im unmittelbaren Kontext des Players angeboten werden.",
    "whyChecked": "Werden für visuelle Inhalte eines Videos Beschreibungen dieser visuellen Inhalte in einer Version mit Audiodeskription angeboten, soll sich diese Version auswählen bzw. zuschalten lassen.",
    "howChecked": "1. Anwendbarkeit des Prüfschritts Der Prüfschritt ist anwendbar, wenn auf der Webseite ein oder mehrere aufgezeichnete Videos mit synchroner Bild- und Tonspur vorhanden sind und für diese Videos Alternativen mit Audiodeskription bereitstehen. 2. Prüfung Das Video wird im auf der Website eingebundenen Player abgespielt. Prüfen, ob der Player ein Bedienelement anbietet, dass das Ein- und Ausschalten von Audiodeskription ermöglicht. Sollte es keine Schaltfläche für Audiodeskription geben, prüfen, ob aus einer von mehreren Tonspuren Audiodeskription ausgewählt werden kann. 3. Hinweise Weder das Laden eines zweiten Videos mit Audiodeskription (bei Aktivierung eines AD-Buttons), noch die Bereitstellung von Audiodeskription mit Hilfe eines zweiten Videos über einen zweiten Player wird negativ bewertet. Wenn alle wichtigen Informationen der Bildsequenz bereits über die Audiospur vermittelt werden, ist keine Audiodeskription und damit auch kein AD-Button erforderlich. Die Anforderung 7.2.1 erlaubt zwar die Auswahl der Audiodeskription aus einer von mehreren Tonspuren. Anforderung 7.3 verlangt jedoch, dass sich die Bedienelemente zur Aktivierung der Audiodeskription auf der gleichen Interaktionsebene wie die Bedienelemente zur Wiedergabekontrolle (z.B. Abspielen, Pause, Lautstärke etc.) befinden. Wenn 7.3 \"Bedienelemente für Untertitel und Audiodeskription\" erfüllt ist, ist 7.2.1 \"Wiedergabe von Audiodeskription\" (dieser Prüfschritt) ebenfalls erfüllt. 4. Bewertung Nicht erfüllt: Der Videoplayer bietet keine Möglichkeit, Audiodeskription zuzuschalten.",
    "sources": "Zurzeit keine Quellen.",
    "classification": "Abgrenzung zu anderen Prüfschritten Dieser Prüfschritt fordert, dass in Fällen, wo für Videos Versionen mit Audiodeskription bereit gestellt werden, Bedienelemente zum Ein- und Ausschalten der Audiodeskription angeboten werden. In Prüfschritt 9.1.2.5 \"Audiodeskription für Videos\" wird hingegen geprüft, ob für Inhalte eines Videos, die nur über Bilder vermittelt werden, eine Audiodeskription vorhanden ist. Es geht dort um die inhaltliche Beurteilung. Wird 9.1.2.5 negativ bewertet (eine notwendige Audiodeskription ist nicht vorhanden), ist dieser Prüfschritt nicht anwendbar. 7.2.1 ist nur anwendbar, wenn eine Audiodeskription angeboten wird. Einordnung des Prüfschritts nach EN 301 549 V3.2.1 7.2.1 Audio description playback Where ICT displays video with synchronized audio, it shall provide a mechanism to select and play available audio description to the default audio channel. Where video technologies do not have explicit and separate mechanisms for audio description, an ICT is deemed to satisfy this requirement if the ICT enables the user to select and play several audio tracks. NOTE 1: In such cases, the video content can include the audio description as one of the available audio tracks. NOTE 2: Audio descriptions in digital media sometimes include information to allow descriptions that are longer than the gaps between dialogue. Support in digital media players for this \"extended audio description\" feature is useful, especially for digital media that is viewed personally."
  },
  {
    "id": "7.2.2",
    "title": "7.2.2 Synchrone Audiodeskription",
    "whatChecked": "Sind Videos mit synchroner Bild- und Tonspur und zusätzlicher Audiodeskription vorhanden, soll der Videoplayer in der Lage sein, die zusätzliche Audiodeskription synchron zu Bild und Ton wiederzugeben.",
    "whyChecked": "Bildbeschreibungen sollten möglichst handlungssynchron umgesetzt werden (siehe auch Vorgaben der Rundfunkanstalten für Audiodeskription ). Das bedeutet, dass die Audiodeskription auf die visuellen Elemente des zu beschreibenden Videos abgestimmt und damit synchron ist. Die synchrone Ausgabe ist für die Gesamtverständlichkeit wichtig.",
    "howChecked": "1. Anwendbarkeit des Prüfschritts Der Prüfschritt ist anwendbar, wenn auf der Webseite Videos mit synchroner Bild- und Tonspur sowie einer zusätzlich eingebundenen Tonspur für Audiodeskription vorhanden sind. Eine Alternative wäre die Verwendung des track -Elements mit kind=\"description\" , eine im video-Element eingebundene Textdatei, aus der ggf. eine Audio-Ausgabe synthetisiert wird. Wenn also ein Player bei der Auswahl einer angebotenen 'Version mit Audiodeskription' eine andere Videodatei mit erweitertem Ton lädt, ist der Prüfschritt nicht anwendbar, denn eine festgestellte mangelnde Synchronität läge dann in jedem Fall an der eingebundenen Video-Datei, nicht am Player. 2. Prüfung Das Video mit zugeschalteter Audiodeskription in dem auf der Webseite eingebundenen Player abspielen. Prüfen, ob die Audiodeskription synchron zu Bild und Ton wiedergegeben wird. Falls die Audiodeskription nicht synchron läuft: Mittels Web Developer Tools prüfen, ob beim Abspielen der Versionen mit und ohne Audiodeskription unterschiedliche Quell-Dateien genutzt werden. Das src -Attribut des video -Elements hat in diesem Fall abweichende Pfade, etwa ../video-name.mp4 und ../video-name-AD.mp4 . Ist das der Fall, ist die Audiodeskription mit großer Wahrscheinlichkeit integrierter Teil der Video-Tonspur. Mangelnde Synchronität liegt in diesem Fall nicht am Player, der Prüfschritt ist erfüllt. Wahrscheinlich muss dann aber Prüfschritt 9.1.2.5 \"Audiodeskription für Videos\" negativ bewertet werden! Falls der Dateipfad des Videos nach Zuschalten der Audiodeskription gleich bleibt, ist bei mangelnder Synchronität entweder der Player fehlerhalft oder es liegt an einer fehlerhaften Umsetzung der Audiodeskription. Die Ursache kann derzeit nur vom Web-Autor geprüft werden. 3. Hinweise Wenn zugeschaltete Audiodeskription nicht synchron läuft und im Angebot andere Videos mit zuschaltbarer Audiodeskription vorhanden sind, dort prüfen, ob ebenfalls Mängel bei der Synchronität bestehen. Ist die zugeschaltete Audiodeskription bei anderen Videos synchron, deutet dies darauf hin, d ass das Problem nicht beim Player, sondern beim spezifischen Video oder Audiodeskriptions-Dateien liegt. Der Prüfschritt wäre dann erfüllt. Hinweise zu diesem Prüfschritt können Sie auf GitHub in einem Issue hinterlassen . 4. Bewertung Nicht erfüllt: Bild/Ton und Audiodeskription sind nicht synchron.",
    "sources": "Zurzeit keine Quellen.",
    "classification": "Abgrenzung zu anderen Prüfschritten In diesem Prüfschritt wird geprüft, ob der Videoplayer Audiodeskription synchron anzeigt. In Prüfschritt 9.1.2.5 \"Audiodeskription für Videos\" erfolgt hingegen die inhaltliche Prüfung der Audiodeskription. Die Prüfung, ob der Player oder die Umsetzung der Audiodeskription fehlerhaft ist, kann derzeit nicht erfolgen. Wird Audiodeskription nicht synchron dargestellt, erfolgt in beiden Prüfschritten eine negative Bewertung mit dem Hinweis auf eine unklare Ursache. Einordnung des Prüfschritts nach EN 301 549 V3.2.1 7.2.2 Audio description synchronization Where ICT has a mechanism to play audio description, it shall preserve the synchronization between the audio/visual content and the corresponding audio description."
  },
  {
    "id": "7.2.3",
    "title": "7.2.3 Erhaltung von Audiodeskription",
    "whatChecked": "Wenn das Webangebot Videos mit Audiodeskription überträgt, konvertiert oder aufnimmt, bleibt die Audiodeskription nach dem Vorgang erhalten. Sie ist weiterhin zuschaltbar und wird synchron zu Bild und Ton dargestellt. Die Prüfschritte 7.2.1 \"Wiedergabe von Audiodeskription\" und 7.2.2 \"Synchrone Audiodeskription\" sind weiterhin erfüllt.",
    "whyChecked": "Wenn das Webangebot Videos mit Audiodeskription überträgt, konvertiert oder aufnimmt, soll die Audiodeskription in gleicher Weise nutzbar sein wie vor dem Vorgang. Dazu gehört, dass sie ausgegeben werden kann und synchron abgespielt wird.",
    "howChecked": "1. Anwendbarkeit des Prüfschritts Der Prüfschritt ist anwendbar, wenn das Webangebot Videos mit Audiodeskription übertragen, konvertieren oder aufnehmen kann. 2. Prüfung Wenn das Webangebot Videos mit Audiodeskription konvertiert oder aufnimmt, das Video anschließend in einem konformen Player abspielen: Ist Audiodeskription aus der Quelle weiterhin vorhanden? Lässt sich Audiodeskription abspielen? Ist die Audiodeskription weiterhin synchron zu Bild und Ton? 3. Hinweise Hinweise zu diesem Prüfschritt können Sie auf GitHub in einem Issue hinterlassen . 4. Bewertung Nicht erfüllt:",
    "classification": "Abgrenzung zu anderen Prüfschritten In diesem Prüfschritt wird geprüft, ob es durch die Übertragung, Konvertierung oder Aufnahme zu Problemen hinsichtlich der Ausgabe oder Synchronität von Audiodeskription kommt. In den Prüfschritten 7.2.1 \"Wiedergabe von Audiodeskription\" und 7.2.2 \"Synchrone Audiodeskription\" geht es hingegen um Videos, die auf der Webseite bereits vorhanden sind. Einordnung des Prüfschritts nach EN 301 549 V3.2.1 7.2.3 Preservation of audio description Where ICT transmits, converts, or records video with synchronized audio, it shall preserve audio description data such that it can be played in a manner consistent with clauses 7.2.1 and 7.2.2."
  },
  {
    "id": "7.3",
    "title": "7.3 Bedienelemente für Untertitel und Audiodeskription",
    "whatChecked": "Wenn ein Videoplayer Video-Inhalte mit zugehörigen Audioinhalten abspielt, befinden sich die Bedienelemente zur Aktivierung der Untertitelung und Audiodeskription auf der gleichen Interaktionsebene wie die Bedienelemente zur Wiedergabekontrolle (z. B. Abspielen, Pause, Lautstärke etc.).",
    "whyChecked": "Videoplayer bieten den Menschen eine Vielzahl von Interaktionsmöglichkeiten. Am wichtigsten sind dabei die Bedienelemente zur Wiedergabekontrolle. Sie sind daher prominent auf der obersten Interaktionsebene des Players positioniert. Bedienelemente für das Ein- und Ausblenden der Untertitel bzw. das Starten und Beenden der Audiodeskription sind für Menschen, die diese Funktion benötigen, ebenfalls wichtige Steuerelemente. Sie sollen leicht gefunden werden und müssen daher ebenfalls auf der obersten Interaktionsebene positioniert sein.",
    "howChecked": "1. Anwendbarkeit des Prüfschritts Der Prüfschritt ist anwendbar, wenn auf der Webseite ein Videoplayer eingebunden ist, der Video-Inhalte mit zugehörigen Audioinhalten abspielt und wenn Untertitel und / oder Audiodeskription angeboten werden. 2. Prüfung Das Video mit dem auf der Website eingebundenen Player abspielen. Prüfen, ob Bedienelemente zur Anzeige von Untertiteln und / oder Audiodeskription auf gleicher Ebene wie die Bedienelemente zur Wiedergabekontrolle (z. B. Abspielen, Pause, Lautstärke etc.) angeboten werden. 3. Hinweise Wenn 7.3 Bedienelemente für Untertitel und Audiodeskription (dieser Prüfschritt) erfüllt ist, ist 7.1.1 \"Wiedergabe von Untertiteln\" und 7.2.1 \"Wiedergabe von Audiodeskription\" ebenfalls erfüllt. Für Hinweise zu diesem Prüfschritt können Sie auf GitHub ein Issue anlegen . 4. Bewertung Nicht erfüllt: Die Bedienelemente zur Aktivierung der Untertitel und Audiodeskription sind nicht auf der gleichen Interaktionsebene positioniert wie die Bedienelemente zur Wiedergabekontrolle.",
    "classification": "Abgrenzung zu anderen Prüfschritten Bei diesem Prüfschritt geht es darum, wo die Bedienelemente für Untertitel und Audiodeskription positioniert sind. In Prüfschritt 7.2.1 \"Wiedergabe von Audiodeskription\" geht es darum, dass überhaupt entsprechende Bedienelemente vorhanden sind. Einordnung des Prüfschritts nach EN 301 549 V3.1.1 7.3 User controls for captions and audio description Where ICT primarily displays materials containing video with associated audio content, user controls to activate subtitling and audio description shall be provided to the user at the same level of interaction (i.e. the number of steps to complete the task) as the primary media controls. NOTE 1: Primary media controls are the set of controls that the user most commonly uses to control media. NOTE 2: Products that have a general hardware volume control, such as a telephone, or a laptop which can be configured to display video through Web-App but which is not its primary purpose, would not need dedicated hardware controls for captions and descriptions; however Web-App controls, or hardware controls mapped through Web-App, would need to be at the same level of interaction. NOTE 3: It is best practice for ICT to include additional controls enabling the user to select whether captions and audio description are turned on or off by default."
  },
  {
    "id": "9.1.1.1A",
    "title": "9.1.1.1a Alternativtexte für Bedienelemente",
    "whatChecked": "Grafische Bedienelemente (alle verlinkten / interaktiven Grafiken und Bilder) müssen mit Alternativtexten versehen werden (nicht verlinkte bzw. nicht interaktive Grafiken und Bilder werden in Prüfschritt 9.1.1.1b \"Alternativtexte für Grafiken und Objekte\" geprüft). Die Alternativtexte für Bedienelemente (z. B. Icons oder Logos) oder Teaserbilder sollen das Ziel des Links bezeichnen. Alternativtexte für grafische Schaltflächen (Buttons) sollen die Aktion bezeichnen, die der Button auslöst. Wenn Image maps eingesetzt werden, sollen deren Bereiche ( area -Elemente) sinnvolle Alternativtexte haben. Thema dieses Prüfschritts sind auch Textlinks, die per CSS durch Hintergrundbilder ersetzt werden sowie Textalternativen für Icon Fonts und SVGs.",
    "whyChecked": "Für blinde Benutzer oder für Benutzer, die für schnellere Zugriffszeiten das Laden von Grafiken abschalten, sind Grafiken nicht zugänglich. Die Textalternative tritt dann an die Stelle der Grafik, sie soll die Grafik ersetzen. Icon Fonts sind Schriftarten, die Symbole statt Buchstaben beinhalten. Sie werden per CSS eingebunden und werden entweder von assistiven Technologien nicht ausgegeben oder es wird ein Unicode-Äquivalent wiedergegeben, was die Bedeutung im Kontext nicht vermittelt.",
    "howChecked": "1. Anwendbarkeit des Prüfschritts Der Prüfschritt ist anwendbar, wenn Grafiken, Icon Fonts oder SVGs als Bedienelemente (Menüs, Logos, Teaserbilder oder Schaltflächen) eingesetzt werden. 2. Prüfung 2.1 Anzeige der Alternativtexte von Grafiken Die Seite im Firefox aufrufen. Bedienelemente feststellen (zum Beispiel horizontale oder vertikale Navigationsleisten, Logo, Banner, Teaserbilder, grafische Schaltflächen). In der Web Developer Toolbar das Menü Images &gt; Display Alt Attributes aufrufen und prüfen, ob die Bedienelemente mit äquivalenten Alternativtexten versehen sind (siehe 2.6 Gleichwertige (äquivalente) Alternativtexte ). Alternativ kann auch das Images bookmarklet eingesetzt werden. Feststellen, ob die Seite Image maps enthält. Hierfür kann gegebenenfalls der Quelltext nach map durchsucht werden. Ist eine Image map vorhanden, weiter mit 2.2 Anzeige von Image maps . 2.2 Anzeige von Image maps Falls Image maps eingesetzt werden: Die Web Developer Tools öffnen und im Quellcode prüfen, ob für jeden Link ( area -Element der Image map, aktiver Bereich) und für das Gesamtbild der Image map ein gleichwertiger Alternativtext vorhanden ist (siehe 2.6 Gleichwertige (äquivalente) Alternativtexte ). Der Alternativtext für die gesamte Image map sollte in der Regel die Image map beschreiben, die Alternativtexte für die aktiven Bereiche ( area -Elemente) sollten die Linkziele bezeichnen. 2.3 Textalternativen für Hintergrundgrafiken Hintergrundgrafiken haben kein alt -Attribut, auf diese Weise kann also keine Textalternative hinterlegt werden. Falls eine Hintergrundgrafik aber einen im HTML-Dokument tatsächlich vorhandenen Textlink ersetzt (CSS-Bildersetzungsverfahren), dann gilt dieser Textlink als Textalternative für die Hintergrundgrafik. Voraussetzung ist allerdings, dass ein geeignetes Bildersetzungsverfahren verwendet wurde (nicht display:none ). Grundeinstellung in Firefox Firefox aufrufen und im Menü Extras den Dialog Einstellungen… aufrufen. Den Reiter Inhalt wählen und im Bereich Schriftarten &amp; Farben die Option Farben…​ wählen. Im Dialog Farben im Bereich Text und Hintergrund als Hintergrundfarbe eine Farbe wählen, die normalerweise eher selten für die Seitengestaltung verwendet wird (gut geeignet sind z. B. helle Rosa- oder Grüntöne). Im Select Ausgewählte Farben anstatt Farben der Seite verwenden die Option Immer wählen. Die Dialogfenster mit \"OK\" schließen. Prüfung Seite in Firefox aufrufen. Prüfen, ob grafische Bedienelemente verschwinden. Das passiert, wenn sie als Hintergrundbilder eingebunden sind. Falls nicht redundante grafische Bedienelemente als Hintergrundbilder eingebunden sind: Prüfen, ob das Hintergrundbild einen tatsächlich im HTML-Dokument vorhandenen Textlink ersetzt oder ein aussagekräftiger Alternativtext auf andere Art hinterlegt ist (z. B. als aria-label oder title auf dem Link). Wenn ein leeres a -Element ohne eingeschlossenen Text durch ein Hintergrundbild ersetzt wird, ist dies wie ein nicht vorhandenes oder leeres alt -Attribut zu werten. Falls Textlinks durch Hintergrundbilder ersetzt werden: Prüfen, welches Verfahren für die Bildersetzung verwendet wurde. Wenn display:none verwendet wird, ist dies wie ein nicht vorhandenes oder leeres alt -Attribut zu werten. Falls ein geeignetes Bildersetzungsverfahren verwendet wurde: Prüfen, ob der Textlink eine äquivalente Textalternative für das Hintergrundbild darstellt (siehe 2.6 Gleichwertige (äquivalente) Alternativtexte ). 2.4 Textalternativen für Icon Fonts Beim Einsatz von Icon Fonts ist es nicht möglich, mittels alt -Attribut eine Textalternative zu hinterlegen. Falls ein Bedienelement aus einem solchen Icon sowie einem HTML-Text besteht, der den Zweck des Bedienelements wiedergibt, dann gilt dieser Text als Alternative für das Icon. Es ist sinnvoll, das Icon selbst mit einer geeigneten Technik für Screenreader zu verstecken (z. B. aria-hidden=\"true\" ). Handelt es sich dabei um ein informationstragendes Icon ohne visuell sichtbaren Text (Stand-alone-Icon), so sollte eine Textalternative vorhanden sein. Dies kann beispielsweise Text sein, der mit einem geeigneten Verfahren versteckt ist (nicht display:none ) oder über ein aria-label bereitgestellt wird. Prüfung Seite in Firefox aufrufen. Bedienelemente feststellen. Mit Firebug oder dem Seiteninspektor des Browsers prüfen, ob mit der CSS-Eigenschaft content für die Pseudoelemente :before oder :after Inhalt (Font Icons) eingebunden wird. Falls nicht redundante Icons eingebunden sind: Prüfen, ob eine HTML-Textalternative vorhanden ist. Ein leeres a -Element ohne eingeschlossenen Text, ist wie ein nicht vorhandenes oder leeres alt -Attribut zu werten. Falls HTML-Textalternativen vorhanden sind, die nicht am Bildschirm sichtbar sind: Prüfen, welches Verfahren verwendet wurde, um diese zu verstecken. Wenn display:none verwendet wird, ist dies wie ein nicht vorhandenes oder leeres alt -Attribut zu werten. Falls eine geeignete CSS-Technik verwendet wurde: Prüfen, ob der Textlink eine äquivalente Textalternative für das Icon darstellt (siehe 2.6 Gleichwertige (äquivalente) Alternativtexte ). Falls keine HTML-Textalternative vorhanden ist, prüfen, ob die Textalternative über ein title -Attribut oder aria-label bereitgestellt wird. Falls für die Icons Text ausgegeben wird (z. B. content: \"k\" ), prüfen, ob das Icon mit einer geeigneten Technik für Screenreader versteckt wird (z. B. aria-hidden=\"true\" ). 2.5 Textalternativen für Inline-SVGs Prüfung Seite im Firefox aufrufen. Bedienelemente feststellen. Mit den Web Developer Tools des Browsers prüfen, ob es sich um ein direkt in HTML eingebundene SVG handelt (Inline SVG). Prüfen, ob eine Textalternative vorhanden ist Prüfen, ob ein title -Element (für längere Beschreibungen das desc -Element) vorhanden ist und die dort hinterlegte Textalternative das Bild in angemessener Weise ersetzt (siehe 2.6 Gleichwertige (äquivalente) Alternativtexte ). Das title - bzw. desc -Element sollte das erste Kind-Element des svg -Eltern-Elements sein. Da SVG noch nicht ausreichend von allen Screenreader-Browser-Kombinationen unterstützt wird, prüfen, ob die Zugänglichkeit über ARIA-Auszeichnung gewährleistet ist: SVG-Grafiken sollten role=\"img\" tragen, sonst wird ggf. ihr title -Element nicht ausgegeben. Wird das SVG title -Element als zugänglicher Name genutzt, sollte das svg -Element mittels aria-labelledby auf das title -Element verweisen. Wenn ein Link sowohl die SVG-Grafik als auch einen in sich aussagekräftigen Linktext enthält, sollte die SVG-Grafik über aria-hidden=\"true\" aus der Screenreader-Ausgabe entfernt werden. Die Nutzung einer role ist dann nicht erforderlich. Wenn kein title - oder desc -Element eingesetzt wird, prüfen, ob über aria-label auf dem umschließenden Link eine Textalternative bereitgestellt wird. Für die Rolle kommt bei SVGs auch role=\"graphics-document\" in Frage. Diese kommt für komplexere SVG-Grafiken wie z. B. Erklärbilder, Diagramme, oder Bilder mit eingebundenen Links zum Einsatz (das Ausmaß der Unterstützung durch Screenreader ist zur Zeit unklar). 2.6 Gleichwertige (äquivalente) Alternativtexte Entscheidend ist: die Seite soll benutzbar sein, wenn Grafiken, oder Bilder oder Objekte durch die entsprechenden Alternativtexte oder Textalternativen ersetzt sind. In der Regel bedeutet das: Bei Schriftgrafiken soll der Alternativtext den Text der Schriftgrafik wiederholen. Bei Symbolen soll der Alternativtext das Symbol nicht beschreiben, sondern ersetzen. Also zum Beispiel Alternativtext \"Kontakt\" für einen Briefkasten, der als Symbol für die Kontakt-Seite verwendet wird. Bei Objekten , die nicht angezeigt werden können, sollen der Alternativtext (ganz gleich ob Fallback-Text des Objekts oder skriptgeneriert) eine kurze Beschreibung oder Identifizierung bieten. Zusätzlich ist es sinnvoll, dass ein Skript auswertet, ob das Objekt wegen deaktiviertem JavaScript und/oder deaktiviertem Plugin nicht angezeigt werden kann, und eine entsprechende Meldung generiert. In diesem Fall ist es auch ausreichend, wenn das Objekt etwa durch eine Überschrift im unmittelbaren Kontext identifiziert wird. Bei verlinkten Abbildungen gibt es folgende Möglichkeiten: Der abgebildete Gegenstand wird in der Textalternative beschrieben (wenn der abgebildete Gegenstand wichtig ist und daraus das Linkziel hervorgeht, zum Beispiel Logo). Das Ziel des Links wird über die Textalternative vermittelt (nur wenn der abgebildete Gegenstand unwichtig ist, zum Beispiel Illustration). Der sinnhafte Inhalt des abgebildeten Gegenstandes und Ziel des Links bzw. die Aktion werden über die Textalternative vermittelt (wenn beides wichtig ist). Generell gilt: Alternativtexte sollen kurz sein. Ausführliche Beschreibungen von Abbildungen sollen nicht im Alternativtext, sondern im Kontext der Abbildung zur Verfügung gestellt werden. 3. Hinweise 3.1 Alternativtexte für redundant verlinkte Abbildungen Wenn eine Abbildung und ein danebenstehender Textlink auf dasselbe Ziel verweisen, muss geprüft werden, ob Abbildung und Text in den selben Link eingeschlossen sind. Wenn Abbildung und Text innerhalb des selben Links stehen, soll der Alternativtext der Abbildung nicht den Text des Links wiederholen. Je nach Inhalt der Abbildung kann das alt -Attribut dann leer bleiben oder den abgebildeten Inhalt beschreiben, während der Linktext Zweck oder Ziel des Links beschreibt. Wenn Abbildung und Text zwei unabhängige Links auf dasselbe Ziel sind, dann kann das alt -Attribut dagegen nicht leer bleiben. Denn gängige Screenreader verlassen sich nicht darauf, dass leere alt -Attribute sachgerecht eingesetzt werden, sie behandeln bei Bedienelementen leere wie fehlende alt -Attribute und lesen den Dateinamen der Grafik / die URL der Zieldatei vor. 3.2 Unterstützung von SVGs durch assistive Technologien Da SVG noch nicht ausreichend in allen Screenreader-Browser-Kombinationen unterstützt werden, sollte derzeit die Rolle über WAI-ARIA vermittelt werden (siehe 9.4.1.2 \"Name, Rolle, Wert verfügbar\"). Die Rolle kann entfallen, wenn Text im gleichen Link das Linkziel aussagekräftig beschreibt: dann sollte die SVG-Grafik mit aria-hidden=\"true\" ausgezeichnet werden. 4. Bewertung Teilweise erfüllt Der Alternativtext fehlt beim Link zum Seitenanfang oder bei einem anderen für die Benutzung der Seite weniger wichtigen Bedienelement. Alternativtexte sind missverständlich, undeutlich oder extrem lang. Nicht erfüllt Der Alternativtext für ein wichtiges Bedienelement fehlt oder er ist unbrauchbar.",
    "sources": "Anleitungen zum Erstellen guter Alternativtexte W3C Web Accessibility Tutorials: Images Concepts WebAIM: Alternative Text HTML 5.1 Spezifikation: Requirements for providing text to act as an alternative for images W3C - Scalable Vector Graphics (SVG) 1.1 The 'desc' and the 'title' elements Zu Rollen wie role=\"graphics-document\" für komplexere SVG-Grafiken: WAI-ARIA Graphics Module (W3C Recommendation 02 October 2018) SVGs zugänglich einbinden Contextually marking up accessible images and SVGs (Scott O’Hara, May 2019) Creating accessible SVGs (Deque blog, January 2019) 7 solutions for creating more accessible SVGs (SimplyAccessible, March 2017) Accessible SVGs (CSS-Tricks, updated August 2016)",
    "classification": "Abgrenzung zu anderen Prüfschritten Verlinkte Grafiken sind stets in diesem Prüfschritt zu bewerten. Das gilt auch dann, wenn die Grafiken neben der Information über das Linkziel auch noch eine andere Information vermitteln sollen, wie zum Beispiel auf die Startseite verlinkte Logos. Einzige Ausnahme: Grafik und danebenstehender Text sind ein zusammengehöriger Link. Der Alternativtext bezieht sich dann nur auf die Grafik, die Prüfkriterien 9.1.1.1b \"Alternativtexte für Grafiken und Objekte\" oder 9.1.1.1c \"Leere alt-Attribute für Layoutgrafiken\" sind anzuwenden. Alternativtexte für grafische Überschriften: siehe Prüfschritt 9.1.1.1b \"Alternativtexte für Grafiken und Objekte\". CAPTCHAs werden im Prüfschritt 9.1.1.1d \"Alternativen für CAPTCHAs\" geprüft. Textäquivalent ( title -Attribut) für Frames: siehe Prüfschritt 9.2.4.1 \"Bereiche überspringbar\". Linktexte sind auch in Prüfschritt 9.2.4.4 \"Aussagekräftige Linktexte\" Thema. Dort geht es um die allgemeine Aussagekraft, in diesem Prüfschritt 9.1.1.1a geht es dagegen nur um die Gleichwertigkeit von Alternativtext und grafischem Link. Die Ausgabe der entsprechenden Rolle von SVGs wird im Prüfschritt 9.4.1.2 \"Name, Rolle, Wert verfügbar\" geprüft (s. o 3.2 Unterstützung von SVGs durch assistive Technologien ). Einordnung des Prüfschritts nach WCAG 2.1 Guideline Guideline 1.1 Text Alternatives: Provide text alternatives for any non-text content so that it can be changed into other forms people need, such as large print, braille, speech, symbols or simpler language. Success criterion 1.1.1 Non-text Content (Level A) Techniques General Techniques G94: Providing short text alternative for non-text content that serves the same purpose and presents the same information as the non-text content HTML Techniques H2: Combining adjacent image and text links for the same resource H24: Providing text alternatives for the area elements of image maps H30: Providing link text that describes the purpose of a link for anchor elements H36: Using alt attributes on images used as submit buttons H37: Using alt attributes on img elements ARIA Techniques ARIA6 Using aria-label to provide labels for objects ARIA10: Using aria-labelledby to provide a text alternative for non-text content Failures F3: Failure of Success Criterion 1.1.1 due to using CSS to include images that convey important information F20: Failure of Success Criterion 1.1.1 and 4.1.2 due to not updating text alternatives when changes to non-text content occur F30: Failure of Success Criterion 1.1.1 and 1.2.1 due to using text alternatives that are not alternatives F65: Failure of Success Criterion 1.1.1 due to omitting the alt attribute on img elements, area elements, and input elements of type 'image'",
    "questions": "Kann das alt -Attribut nicht leer gelassen werden, wenn stattdessen ein sinnvolles title -Attribut verwendet wird? Das wird in meinem Screenreader problemlos ausgegeben. Es stimmt, dass neuere Screenreader bei Vorhandensein eines title -Attributs dieses anstelle eines fehlenden alt -Attributs ausgeben. Das trifft aber nicht auf alle gängigen Hilfsmittel zu. Deshalb verlangt der Test grundsätzlich die standardkonforme Umsetzung gemäß HTML 5.0 und WCAG 2.0: Das alt -Attribut soll den Inhalt des Bildes ersetzen Das title -Attribut ist für zusätzliche (nicht essenzielle) Informationen gedacht Deshalb steht in der WCAG 2.0-Technik H33 : Because of the extensive user agent limitations in supporting access to the title attribute, authors should use caution in applying this technique. For this reason, it is preferred that the author use technique C7 : Using CSS to hide a portion of the link text (CSS) or H30 : Providing link text that describes the purpose of a link for anchor elements (HTML). Ein weiterer Punkt, der die Wichtigkeit des alt -Attributs unterstreicht, ist die Nutzung mit abgeschalteten Bildern. Auch wenn Alternativtexte im Bereich der Bildumrisse in manchen Browsern nicht vollständig angezeigt werden, ist das immer noch besser als eine Nicht-Anzeige beim Einsatz von title . Der Alternativtext beschreibt die Grafik, der title -Text beschreibt das Link-Ziel: Ist das ein geeigneter Lösungsansatz für grafische Links? Vorgeschlagen wurde diese Lösung für Fälle, in denen die Grafik nicht einfach das Linkziel abbildet (Schriftgrafik) oder für das Linkziel steht, sondern zusätzlich eine eigenständige Aussagekraft hat (zum Beispiel bei aus Anreißertext und einer verlinkten Abbildung bestehenden Teasern). Die Idee ist einleuchtend: Der sehende Benutzer klickt auf das Bild, denn er vermutet, dass hinter dem Bild eine Seite steht. Der beschreibende Alternativtext ersetzt das Bild, der blinde Benutzer schließt wie der sehende Benutzer vom (beschriebenen) Bildinhalt auf das Linkziel. Wenn aus dem Bild / der Bildbeschreibung nicht hinreichend klar hervorgeht, wo es hinführt, kann der sehende wie der blinde Benutzer auf die ergänzenden Informationen im title -Attribut zugreifen. In der Praxis funktioniert das aber nicht: Sehende Benutzer orientieren sich nicht an den Inhalten des Bildes, sondern eher an der Position. Viele Teaser-Bilder sind vom Inhalt her ohnehin nicht geeignet, etwas über das Linkziel zu sagen, der Bezug zum Thema des Linkziels ist oft nur ansatzweise nachvollziehbar. Aber sie müssen auch gar nichts über das Linkziel sagen: Das Linkziel steht im Text daneben, es muss nicht aus dem Bild erraten werden. Geklickt wird auf das Bild, weil es vielleicht leichter zu treffen ist und der Benutzer weiß, dass Teaser-Bilder üblicherweise mit weiterführenden Informationen zum jeweiligen Textabschnitt verlinkt sind. Für den blinden Benutzer ist der Zusammenhang von Bild und (darauf folgendem) Kontext dagegen normalerweise nicht klar. Er müsste also tatsächlich Vermutungen anstellen, wo ein Link hinführen könnte, der mit dem beschriebenen Bild verbunden ist. Und da das Bild die entsprechende Aussagekraft nicht hat, wäre er auf die Informationen im title -Attribut in der Regel angewiesen . Sie sind also für ihn nicht ergänzend . Hinzu kommt: Das title -Attribut wird von gängigen Screenreadern unterschiedlich behandelt und schlecht unterstützt. Nach wie vor werden von JAWS die Inhalte von alt -Attribut und title -Attribut nur alternativ vorgelesen. Das title -Attribut ist für ergänzende Informationen vorgesehen. Die Information über das Linkziel ist in aller Regel keine ergänzende Information, denn sie geht aus dem Bildinhalt nicht hervor. Der Alternativtext muss daher das Linkziel beschreiben. Sollte im alt -Attribut und im title -Attribut eines Bildes derselbe Inhalt stehen? Der Alternativtext soll das Bild ersetzen . Sehr häufig bedeutet das: Der Alternativtext sagt, was abgebildet ist. Das title -Attribut ist dagegen für ergänzende Informationen zum Bild vorgesehen. Es kann zum Beispiel verwendet werden, um zu sagen, von welcher Quelle das Bild stammt. Dort stehen also Informationen, die man dem Bild nicht entnehmen kann. Eigentlich also ein klarer Fall: Die Aufgaben der Attribute sind unterschiedlich, entsprechend sollten sie normalerweise nicht denselben Inhalt haben. Es gibt aber eine wichtige Ausnahme: Häufig werden Symbole oder Zeichen als Bedienelemente verwendet. Für sehende Nutzende ist dann eine ergänzende Beschriftung nützlich. Sie steht am besten als Text neben dem Bild, denn dann ist sie auch für Tastaturnutzer sichtbar. Aber auch das title -Attribut kann verwendet werden. Dann sollte im title -Attribut möglichst exakt der gleiche Text stehen wie im zugänglichen Namen, der über das alt -Attribut (oder auch über aria-label ) gesetzt ist. Der Grund: Sind die Werte identisch, wird dieser Text von Screenreadern in der Regel nur einmal ausgegeben. Weicht er ab, erfolgt eine Ausgabe beider Werte, was oft zu unnötigen Doppelungen führt. Screenreader geben oft den Dateinamen der Bilddatei aus, wenn kein Alternativtext zur Verfügung steht. Kann so das Fehlen des Alternativtextes kompensiert werden? Nein, denn die Ausgabe des Dateinamens funktioniert nicht verlässlich. Nicht alle Browser oder Screenreader geben den Dateinamen aus. Von manchen wird der ganze Pfad der Bilddatei ausgegeben. Das ist schwer verständlich. Soll im Alternativtext stehen, dass es sich um ein Navigationselement handelt? Nein, das sollte vermieden werden. Screenreader oder Textbrowser geben in der Regel die Rolle des Elements aus, also etwa \"Link\" oder \"Taste\". Wenn diese Rolle im Alternativtext steht, liefert der Screenreader diese Information doppelt. Was ist ein passender Alternativtext für verlinkte Bilder, etwa Fotos? Wenn Bilder verlinkt sind, soll der Alternativtext vor allem das Linkziel nennen. Oft geschieht dies im Zusammenhang von Teasern, die gleichzeitig Überschriften, Anreißertext und/oder \"Weiter\" oder \"Mehr lesen\"- Links enthalten. Hier eignet sich oft die Überschrift als Linktext. Ist der gesamte Teaser verlinkt, sollte der Alternativtext des Bildes leer sein, um Doppelungen zu vermeiden. Ist das Bild für sich genommen informationstragend, sollte es einen aussagekräftigen Alternativtext haben. Es bietet sich dann an, das Bild nicht in den Teaser-Link einzuschließen. Techniken wie das Cards-Pattern zeigen, wie das Bild dennoch zum Teil der Klick-Fläche gemacht werden kann. Sollte der Alternativtext für grafische Bedienelemente (Icons) auch sagen, was abgebildet ist? Symbole haben meist konventionelle Bedeutung. So steht eine Lupe für die Funktion 'Suchen', eine Diskette (immer noch) für die Funktion 'Sichern', ein Fragezeichen für 'Hilfe', ein Stift für 'Editieren'. In solchen Fällen soll der Alternativtext des Icons die Funktion bezeichnen und nicht den abgebildeten Gegenstand. Links oben ist das Firmenlogo abgebildet, es ist außerdem mit der Startseite verlinkt. Welcher Alternativtext ist angemessen? Der Alternativtext in diesem Fall hat zwei Aufgaben: Er soll für das Logo stehen und er soll das Linkziel vertreten. Auf dieser Grundlage kann man verschieden argumentieren: Das Bild zeigt das Logo der Firma. Das ist auch seine vorrangige Aufgabe. Auch für einen blinden Benutzer ist es gut, zu wissen, dass die Firma ihr Logo auf der Seite zeigt. Zusätzliche Informationen zum Ziel des Links sind überflüssig. Wo soll das Logo von Müllermilch schon hinführen. Also sollte \"Logo: Müllermilch\" im Alternativtext stehen. Das Bild hat zwei Funktionen. Es zeigt das Logo der Firma und es dient als Link auf die Startseite des Webauftritts. Der sehende Benutzer hat damit kein Problem, er wundert sich nicht, wenn er das Bild anklickt und auf der Startseite von Müllermilch landet. Ebenso der blinde Benutzer. Ein grafischer Link namens Müllermilch. Der zeigt und verweist wohl auf Müllermilch. Also kurz und knapp: \"Müllermilch\" in den Alternativtext! Das Bild hat zwei Funktionen. Es zeigt das Logo der Firma und es dient als Link auf die Startseite des Webauftritts. Für beides soll auch der Alternativtext stehen: \"Logo: Müllermilch - zur Startseite\". Alle drei Alternativen unterstützen den blinden Besucher. Im BITV-Test gelten daher alle drei Alternativen als angemessen."
  },
  {
    "id": "9.1.1.1B",
    "title": "9.1.1.1b Alternativtexte für Grafiken und Objekte",
    "whatChecked": "Nicht verlinkte informationsorientierte Grafiken und Bilder müssen mit Alternativtexten versehen werden (verlinkte Grafiken werden in Prüfschritt 9.1.1.1a \"Alternativtexte für Bedienelemente\" geprüft). Die Alternativtexte ersetzen das Bild, sie sollen also (wenn möglich) dieselbe Aufgabe erfüllen wie das Bild. Bei eingebundenen Multimedia-Objekten, Video- beziehungsweise Audio-Dateien oder Applets soll der Alternativtext zumindest eine beschreibende Identifizierung des Inhalts ermöglichen. Thema dieses Prüfschritts sind auch Textalternativen für Hintergrundbilder, Icon Fonts und SVGs, sofern diese nicht verlinkt sind.",
    "whyChecked": "Für blinde Benutzer oder für Benutzer von einfachen Textbrowsern sind Grafiken und Bilder nicht zugänglich. Die Textalternative tritt dann an die Stelle der Grafik, sie soll die Grafik ersetzen. Wenn Objekte (etwa Video-Dateien, Audio-Dateien oder Applets) nicht angezeigt werden können, sollen kurze beschreibende Alternativtexte dem Nutzer eine Identifikation der Inhalte ermöglichen. Icon Fonts sind Schriftarten, die Symbole statt Buchstaben beinhalten. Sie werden per CSS eingebunden und werden entweder von assistiven Technologien nicht ausgegeben oder es wird ein Unicode-Äquivalent wiedergegeben, was die Bedeutung im Kontext nicht vermittelt.",
    "howChecked": "1. Anwendbarkeit des Prüfschritts Der Prüfschritt ist anwendbar, wenn unverlinkte informative Grafiken oder Bilder, Video- oder Audio-Dateien, oder Multimedia-Objekte vorhanden sind. Als informative Grafiken gelten: grafische Schriften Symbole Abbildungen, die zeigen sollen, wie ein Objekt oder eine Person aussieht Illustrationen, die eine Aussage vorstellen, verdeutlichen oder veranschaulichen sollen Dekorative Grafiken und Bilder sind Grenzfälle. Sie stellen (im Unterschied zu Layoutgrafiken) etwas dar, der dargestellte Gegenstand hat auch meist einen Bezug zum Thema der Seite. Ihr Informationsgehalt und ihr Nutzen für das Verständnis der Seite ist aber nicht klar. Dekorative Grafiken können daher mit leerem alt -Attribut versehen werden, der Prüfschritt ist dann nicht anwendbar. Anders, wenn Alternativtexte vorhanden sind. Dann ist der Prüfschritt anwendbar, er ist zum Beispiel nicht erfüllt, wenn im alt -Attribut von dekorativen Grafiken Bilddateinamen eingetragen sind. Logo-artige Elemente in denen Grafik und Schrift verbunden sind, sind fast nie als bloße Schmuckgrafik anzusehen und brauchen deshalb Alternativtext. Wenn sie verlinkt ist, ist das natürlich ohnehin so. Dies ermöglicht blinden und sehenden Nutzern, sich gemeinsam auf diese Elemente zu beziehen. Der Alternativtext muss aber nicht expliziter sein als das, was für den sehenden Nutzer erkenntlich ist. Darüber hinaus ist der Prüfschritt anwendbar, wenn informative Audio-Elemente vorhanden sind. 2. Prüfung 2.1 Anzeige der Alternativtexte von Grafiken In der Web Developer Toolbar das Menü Images &gt; Display Alt Attributes aufrufen und prüfen, ob das alt -Attribut vorhanden ist und der dort hinterlegte Alternativtext das Bild in angemessener Weise ersetzt (siehe [2.6 Angemessene Alternativtexte] ). Alternativ kann auch das Images bookmarklet eingesetzt werden. 2.2 Anzeige der Alternativtexte von Objekten Prüfen, ob die Seite Objekte enthält. Dazu kann folgende Methode genutzt werden: In der Web Developer Toolbar CSS &gt; Disable All Styles und Images &gt; Hide Images wählen. Werden jetzt noch Elemente angezeigt, bei denen es sich offensichtlich nicht um einfachen Text handelt? Im Quelltext prüfen, ob eine Alternative vorhanden ist, die das Objekt in angemessener Weise ersetzt (siehe [2.6 Angemessene Alternativtexte] ). Falls es sich bei der Alternative für das Objekt um ein img -Element handelt: Den Alternativtext des Bildes wie unter [2.6 Angemessene Alternativtexte] beschrieben prüfen. 2.3 Textalternativen für Hintergrundgrafiken (entspricht dem Abschnitt 2.3 des Verfahrens von Prüfschritt 9.1.1.1a \"Alternativtexte für Bedienelemente\") Hintergrundgrafiken haben kein alt -Attribut, auf diese Weise kann also keine Textalternative hinterlegt werden. Falls eine Hintergrundgrafik aber einen im HTML-Dokument tatsächlich vorhandenen Text, zum Beispiel eine Überschrift ersetzt (CSS-Bildersetzungsverfahren), gilt dieser Text als Textalternative für die Hintergrundgrafik. Voraussetzung ist allerdings, dass ein geeignetes Verfahren verwendet wurde (nicht display:none ). Grundeinstellung in Firefox Firefox aufrufen und im Menü Extras &gt; Einstellungen &gt; Allgemein &gt; Schriftarten &amp; Farben wählen. Im Bereich \"Text und Hintergrund\" als Hintergrundfarbe eine Farbe wählen, die normalerweise eher selten für die Seitengestaltung verwendet wird (gut geeignet sind zum Beispiel helle Rosa- oder Grüntöne). Im Select Ausgewählte Farben anstatt Farben der Seite verwenden die Option Immer wählen. Die Dialogfenster mit \"OK\" schließen. Prüfung Seite in Firefox aufrufen. Prüfen, ob informative Grafiken oder Bilder verschwinden. Das passiert, wenn sie als Hintergrundbilder eingebunden sind. Falls informative Grafiken oder Bilder als Hintergrundbilder eingebunden sind: Prüfen, ob das Hintergrundbild einen tatsächlich im HTML-Dokument vorhandenen Text ersetzt. Falls nicht, ist dies wie ein fehlendes alt -Attribut zu werten. Falls Texte durch Hintergrundbilder ersetzt werden: Prüfen, welches Verfahren für die Bildersetzung verwendet wurde. Wenn display:none verwendet wird, ist dies wie ein fehlendes alt -Attribut zu werten. Falls ein geeignetes Bildersetzungsverfahren verwendet wurde: Prüfen, ob der Text eine äquivalente Textalternative für das Hintergrundbild darstellt (siehe [2.6 Angemessene Alternativtexte] ). 2.4 Textalternativen für Icon Fonts: Beim Einsatz von Icon Fonts ist es nicht möglich, mittels alt -Attribut eine Textalternative zu hinterlegen. Handelt es sich dabei um ein informationstragendes Icon ohne visuell sichtbaren Text (Stand-alone-Icon), sollte eine Textalternative vorhanden sein. Dies kann beispielsweise Text sein, der mit einem geeigneten Verfahren versteckt ist (nicht display:none ) oder der über ein aria-label bereitgestellt wird. Es ist sinnvoll, das Icon selbst mit einer geeigneten Technik für Screenreader zu verstecken (z. B. aria-hidden=\"true\" ). Prüfung Seite in Firefox aufrufen. Mit den Web Developer Tools des Browsers prüfen, ob mit der CSS-Eigenschaft content für die Pseudoelemente :before oder :after Inhalt (Font Icons) eingebunden wird. Prüfen, ob das Icon mit einer geeigneten Technik für Screenreader versteckt wird (z. B. aria-hidden=\"true\" ). Für informationstragende Icons prüfen, ob eine HTML-Textalternative vorhanden ist, die per CSS unsichtbar gemacht wird. Falls HTML-Textalternativen vorhanden sind, die nicht am Bildschirm sichtbar sind: Prüfen, welches Verfahren verwendet wurde, um diese zu verstecken. Wenn display:none verwendet wird, ist dies wie ein nicht vorhandenes oder leeres alt -Attribut zu werten. Falls eine geeignete CSS-Technik verwendet wurde: Prüfen, ob der Textlink eine äquivalente Textalternative für das Icon darstellt (siehe [2.6 Angemessene Alternativtexte] ). Falls kein Alternativtext über zugänglich versteckten oder mitverlinkten Text vorhanden ist, prüfen, ob die Textalternative über ein title -Attribut oder aria-label bereitgestellt wird. Falls für diese Icons Text ausgegeben wird (z. B. content: \"k\" ), prüfen, ob das Icon mit einer geeigneten Technik für Screenreader versteckt wird (z.B. aria-hidden=\"true\" ). 2.5 Textalternativen für Inline SVGs Prüfung Seite in Firefox aufrufen. Mit den Web Developer Tools des Browsers prüfen, ob es sich um eine direkt in HTML eingebundene SVG handelt (Inline SVG). Prüfen, ob ein title -Element (bei längeren Beschreibungen ein desc -Element) vorhanden ist und die dort hinterlegte Textalternative das Bild in angemessener Weise ersetzt (siehe [2.6 Angemessene Alternativtexte] ). Das title- bzw. `desc-`Element sollte das erste Kindelement des Elternelements sein. Da SVG noch nicht ausreichend in allen Screenreader-Browser-Kombinationen unterstützt werden, prüfen, ob die Zugänglichkeit über WAI ARIA gewährleistet ist: SVG-Grafiken sollten role=\"img\" tragen, sonst wird ggf. ihr title -Element nicht ausgegeben. Wird das SVG title -Element als zugänglicher Name genutzt, sollte das svg -Element mittels aria-labelledby auf das title -Element verweisen. Wenn kein title - oder desc -Element eingesetzt wird, prüfen, ob über aria-label auf dem umschließenden Link eine Textalternative bereitgestellt wird. Als Rolle für SVGs kommt auch role=\"graphics-document\" für in sich gegliederte, komplexere SVG-Grafiken in Frage (das Ausmaß der Unterstützung durch Screenreader ist zur Zeit unklar). 2.6 Textalternativen für Videos Seite in Firefox aufrufen. Mit den Web Developer Tools des Browsers prüfen, ob das Video im HTML-Code über ein video -Element oder über ein iframe -Element eingebunden wurde. Bei Nutzung des Video-Elements kann die Textaltenative mittels der ARIA Attribute aria-label oder aria-labelledby angegeben werden, falls auch das controls -Attribut vorhanden ist. Wird das Video innerhalb eines figure -Elements eingebunden, kann auch ein figcaption -Element genutzt werden. Bei einer Einbindung über iframe (z.B. von Youtube-Videos) erfolgt die Angabe einer Textalternative mittels title -Attribut. 2.7 Angemessene Alternativtexte Entscheidend ist: Die Seite soll benutzbar sein, wenn Grafiken oder Bilder durch die entsprechenden Alternativtexte oder andere geeignete Textalternativen ersetzt sind. In der Regel bedeutet das: Bei Schriftgrafiken soll der Alternativtext den Text der Schriftgrafik wiederholen. Bei Symbolen oder Zeichen (Logos) soll der Alternativtext sagen, dass ein Symbol, Zeichen oder Logo abgebildet ist und die Bedeutung des Symbols oder Zeichens wiedergeben. Bei Gruppen von zusammengehörigen Bildern kann auch eines der Bilder die Bedeutung der Gruppe wiedergeben, die anderen haben ein leeres alt -Attribut. Bei Fotos , Reproduktionen von Gemälden oder anderen Nicht-Text-Elementen, die eine spezifische Sinneserfahrung vermitteln, genügt in der Regel eine knappe Bezeichnung des abgebildeten Gegenstandes. Bei Diagrammen oder technischen Zeichnungen sind unter Umständen ausführlichere Erläuterungen erforderlich. Alternativtexte sind dafür nicht geeignet, sie sollen 80 Zeichen nicht überschreiten. Im Alternativtext steht dann nur, was dargestellt ist und wo (etwa: \"Details im anschließenden Text\"), die Erläuterung steht in Kontext des Bildes. Bei Objekten , die nicht angezeigt werden können, sollen der Alternativtext (ganz gleich ob Fallback-Text des Objekts oder skriptgeneriert) oder Text im unmittelbaren Kontext des Objekts (etwa eine vorangehende Überschrift oder nachfolgende Legende) eine kurze Beschreibung oder Identifizierung bieten und, falls vorhanden, auf eine Medienalternative verweisen. Zusätzlich ist es sinnvoll, dass ein Skript auswertet, ob das Objekt wegen deaktiviertem JavaScript und/oder deaktiviertem Plugin nicht angezeigt werden kann, und eine entsprechende Meldung generiert. Wenn solche Meldungen erzeugt werden, müssen sie den tatsächlichen Browser-Einstellungen entsprechen. Wenn also etwa das Flash-Plugin ausgeschaltet ist, aber JavaScript an, darf nicht die (irreführende) Meldung kommen, dass JavaScript aktiviert werden muss. Generell gilt: Alternativtexte sollen kurz sein. Ausführliche Beschreibungen von Abbildungen sollen nicht im Alternativtext, sondern im Kontext der Abbildung zur Verfügung gestellt werden (siehe 2.5 Textalternativen für Inline SVGs ). 2.6 Angemessenheit von Textalternativen im Kontext Wenn der Alternativtext kein angemessener Ersatz für die Grafik oder das Bild sein kann, muss geprüft werden, ob die über das Bild vermittelte Information im Kontext als Text zur Verfügung steht. Das betrifft zum Beispiel Diagramme technische Zeichnungen Anfahrtspläne Videos Zum Kontext einer Grafik oder eines Bildes gehört: der dazugehörige (vorangehende, folgende) Text sowie eine im unmittelbaren Kontext des Bildes angebotene verlinkte und klar benannte Textalternative (normaler Link und/oder longdesc ). Ein kurzer Alternativtext mit Bezeichnung des Bildes ist auch bei Nutzung von Textalternativen im Kontext erforderlich. Der Alternativtext sagt, dass an dieser Stelle etwas Bestimmtes abgebildet ist, er macht klar, worauf sich die Erläuterung im Kontext bezieht. Zum Kontext eines Videos gehört: der dazugehörige (vorangehende, folgende) Text oder die Überschrift entsprechend beschriftete Schaltfläche, z.B. aria-label=\"Video [Titel des Videos] abspielen\" 3. Hinweise Um die Angemessenheit des Alternativtextes einschätzen zu können, muss der Alternativtext auf die Grafik beziehungsweise das Objekt bezogen werden, zu dem er gehört. Erforderlich ist also die parallele oder wechselnde Darstellung von Grafik/Objekt und zugehörigem Alternativtext. Da SVG noch nicht ausreichend in allen Screenreader-Browser-Kombinationen unterstützt werden, sollte derzeit die Rolle über WAI-ARIA vermittelt werden (siehe Prüfschritt 9.4.1.2 Name, Rolle, Wert verfügbar).",
    "sources": "Anleitungen zm Erstellen von Alternativtexten W3C Web Accessibility Tutorials: Images Concepts WebAIM: Alternative Text HTML 5.1 Spezifikation: Requirements for providing text to act as an alternative for images W3C - Scalable Vector Graphics (SVG) 1.1 The 'desc' and the 'title' elements Zu Rollen wie role=\"graphics-document\" für komplexere SVG-Grafiken: WAI-ARIA Graphics Module (W3C Recommendation 02 October 2018) SVGs zugänglich einbinden Contextually marking up accessible images and SVGs (Scott O’Hara, May 2019) Creating accessible SVGs (Deque blog, January 2019) 7 solutions for creating more accessible SVGs (Simply Accessible, March 2017) Accessible SVGs (CSS-Tricks, updated August 2016)",
    "classification": "Abgrenzung zu anderen Prüfschritten Alternativtexte für verlinkte Grafiken (z. B. Bedienelemente oder Teaser-Bilder) werden in Prüfschritt 9.1.1.1a \"Alternativtexte für Bedienelemente\" geprüft. Einfache Animationen oder Videos ohne synchronisierungsbedürftige Tonspur werden in Prüfschritt 9.1.2.1 \"Alternativen für Audiodateien und stumme Videos\" geprüft. Layoutgrafiken oder dekorative Grafiken mit leeren alt -Attributen werden in Prüfschritt 9.1.1.1c \"Leere alt-Attribute für Layoutgrafiken\" geprüft. CAPTCHAs werden in Prüfschritt 9.1.1.1d \"Alternativen für CAPTCHAs\" geprüft. Die Ausgabe der entsprechenden Rolle von SVGs wird im Prüfschritt 9.4.1.2 \"Name, Rolle, Wert verfügbar\" geprüft (s. o. 3. Hinweise ). Einordnung des Prüfschritts nach WCAG 2.1 Guideline Guideline 1.1 Text Alternatives: Provide text alternatives for any non-text content so that it can be changed into other forms people need, such as large print, braille, speech, symbols or simpler language Success criterion 1.1.1 Non-text Content (Level A) Techniques General Techniques G73: Providing a long description in another location with a link to it that is immediately adjacent to the non-text content G74: Providing a long description in text near the non-text content, with a reference to the location of the long description in the short description G82: Providing a text alternative that identifies the purpose of the non-text content G92: Providing long description for non-text content that serves the same purpose and presents the same information G94: Providing short text alternative for non-text content that serves the same purpose and presents the same information as the non-text content G95: Providing short text alternatives that provide a brief description of the non-text content G100: Providing the accepted name or a descriptive name of the non-text content G196: Using a text alternative on one item within a group of images that describes all items in the group HTML Techniques H37: Using alt attributes on img elements H45: Using longdesc H46: Using noembed with embed H53: Using the body of the object element ARIA Techniques ARIA6 Using aria-label to provide labels for objects ARIA10: Using aria-labelledby to provide a text alternative for non-text content ARIA15: Using aria-describedby to provide descriptions of images Failures F3: Failure of Success Criterion 1.1.1 due to using CSS to include images that convey important information F20: Failure of Success Criterion 1.1.1 and 4.1.2 due to not updating text alternatives when changes to non-text content occur F30: Failure of Success Criterion 1.1.1 and 1.2.1 due to using text alternatives that are not alternatives F65: Failure of Success Criterion 1.1.1 due to omitting the alt attribute on img elements, area elements, and input elements of type 'image' F67: Failure of Success Criterion 1.1.1 and 1.2.1 due to providing long description for non-text content that does not serve the same purpose or does not present the same information",
    "questions": "Was kann der Alternativtext leisten? Zum Beispiel die Explosionszeichnung eines Motors: Sollte der gesamte Aufbau des Motors im Alternativtext beschrieben werden? Die Explosionszeichnung zeigt die Lage verschiedener Teile im Motor. Alternative Vermittlungsformen sind denkbar und möglich. Zum Beispiel könnte die Lage der Teile an einem tastbaren Modell gezeigt werden. Klar ist aber, dass bei einigermaßen komplexen Gebilden die Textform nicht geeignet ist. Die Frage ist daher, was im Alternativtext sinnvoll vermittelt werden kann. Auf jeden Fall kann der Alternativtext darüber informieren, dass eine Explosionszeichnung des Motors dargestellt wird. Der blinde Benutzer weiß dann zumindest, welche Informationen ihm nicht zugänglich sind. Darüber hinaus kann es sein, dass nur ein bestimmtes Detail der gesamten Zeichnung relevant ist. Das geht aus dem Kontext hervor. Das betreffende Detail kann dann in Textform erläutert werden. Für die Bewertung im BITV-Test gilt: wenn der Prüfer selbst nicht sagen kann, ob oder wie der Informationsgehalt des Bildes in Textform vermittelt werden könnte, muss die Bezeichnung des dargestellten Gegenstandes im Alternativtext als hinreichend bewertet werden. Firmenlogos Auf der Website ist das Firmenlogo abgebildet. Reicht es aus, wenn im Alternativtext steht, dass da das Firmenlogo abgebildet ist oder sollte es auch beschrieben werden? Auch für einen blinden Besucher kann das Aussehen des Logos interessant sein. Er unterhält sich mit Sehenden und weiß dann, wovon die Rede ist. Allerdings sollte der Alternativtext kurz sein, der Besucher möchte nicht immer wieder diese Beschreibung hören, wenn er die Seite besucht. Sie kann also in einer separaten, ausführlichen Beschreibung bereitgestellt werden. Im BITV-Test wird eine solche ausführliche Beschreibung des Firmenlogos allerdings nicht gefordert. Abbildungen mit Text Eine Abbildung enthält Text. Muss dieser Text in jedem Fall im Alternativtext bereitgestellt werden? Nein, entscheidend ist die Funktion der Abbildung. Wenn es sich um eine Schriftgrafik handelt, dann ist die Sache meistens klar, die Abbildung ist für die Anzeige des Textes da. Anders verhält es sich, wenn ein Motiv mit Text abgebildet ist. Dann muss (wie bei allen Bildern) überlegt werden, was die Leistung des Bildes ist, ob der abgebildete Text wesentlich ist. Nur dann muss der Text im Alternativtext beachtet werden. Kann für längere Erläuterungen auch das title -Attribut verwendet werden? Das title -Attribut hat eine andere Aufgabe, es soll nicht für das Bild stehen, sondern ergänzende Informationen zum Bild liefern. Zum Beispiel kann es verwendet werden, um die Quelle eines Bildes anzugeben. Die Verwendung des title -Attributs von Bildern ist leider nicht einheitlich geregelt. Auf manchen Webauftritten wird der Inhalt des alt -Attributs durchgängig zusätzlich im title -Attribut wiederholt. Das ist keine gute Lösung, denn es führt dazu, daß blinde Nutzer die Ausgabe des title -Attributs abschalten, um das Vorlesen überflüssiger Informationen zu vermeiden. Auf keinen Fall kann das title -Attribut als Ersatz für die Bereitstellung des Alternativtextes im alt -Attribut akzeptiert werden. Für längere Erläuterungen ist das title -Attribut nicht vorgesehen und auch nicht gut geeignet. Es enthält nur einfachen Fließtext, Änderungen der Schriftgröße haben bei den meisten Browsern keine Auswirkungen auf die Darstellung des title -Attributs. Rolle im Alternativtext Soll im Alternativtext stehen, dass es sich um ein grafisches Element handelt? Nein, das ist nicht erforderlich. Denn Screenreader stellen anhand des Markups fest, auf was für ein Element sich der Alternativtext bezieht. Im BITV-Test wird ein entsprechender Vorsatz im Alternativtext jedoch nicht negativ bewertet, er ist für die Bewertung nicht relevant. Kann die Bedeutung eines Bildes auch im Kontext beschrieben werden? Das ist in vielen Fällen sinnvoll und eine gute Alternative zur Nutzung des longdesc -Attributs. Wichtig ist, dass die Beschreibung dem Bild eindeutig zugeordnet werden kann. Dafür kann (und soll) dann der Alternativtext des Bildes genutzt werden. Er enthält eine kurze Bezeichnung des abgebildeten, im Kontext beschriebenen Gegenstandes. Was sollte im Alternativtext für Landkarten stehen? Der Alternativtext für Landkarten kann kein Äquivalent sein, eine Beschreibung in Textform kann die Karte nicht ersetzen. Nicht-visuelle Äquivalente könnten Routenbeschreibungen sein, wie sie häufig von Reiseplanern angeboten werden. Das geht aber über die Möglichkeiten des Alternativtextes hinaus. Der Alternativtext für Karten muss sich also darauf beschränken, anzugeben, welches Gebiet auf der Karte dargestellt ist."
  },
  {
    "id": "9.1.1.1C",
    "title": "9.1.1.1c Leere alt-Attribute für Layoutgrafiken",
    "whatChecked": "Eine Grafik, die keine informative Funktion hat, benötigt keinen Alternativtext. Grafiken ohne informative Funktion sind zum Beispiel Abstandshalter, Farbflächen, Muster, oder rein dekorative Fotos. Solche Grafiken sollen mit einem leeren alt -Attribut ( alt=\"\" ) ausgezeichnet werden. Thema des Prüfschritts sind auch Icons, die mittels Icon Font eingebunden sind und SVGs.",
    "whyChecked": "Screenreader behandeln Bilder ohne alt -Attribut anders als Bilder mit leerem alt -Attribut. Wenn ein Screenreader auf ein Bild ohne alt -Attribut stößt, liest er normalerweise den Namen der Bilddatei vor. In vielen Fällen muss man für die Benutzung von Seiten unbedingt wissen, was auf Bildern gezeigt wird. Dateinamen können dafür manchmal brauchbare Hinweise liefern. Wenn Bilder nur der Dekoration dienen, ist das Vorlesen des Dateinamens dagegen störend. Bei diesen Bildern wäre es besser, wenn der Screenreader sie einfach übergehen würde. Das leere alt -Attribut informiert den Screenreader darüber, dass das betreffende Bild nur der Dekoration dient und sein Inhalt unbedeutend ist. Der Screenreader ignoriert das Bild dann komplett, er tut so, als sei es nicht vorhanden. Das leere alt -Attribut ist also sehr wichtig. Es stellt sicher, dass der Besucher mit Screenreader nicht durch das dauernde Vorlesen bedeutungsloser Dateinamen an der Nutzung der Seite gehindert wird. Icon Fonts sind Schriftarten, die Symbole statt Buchstaben beinhalten. Sie werden per CSS eingebunden. Manche moderne Browser übergeben an den Screenreader ein Unicode-Äquivalent, was bei dekorativen Icons störend ist.",
    "howChecked": "1. Anwendbarkeit des Prüfschritts Der Prüfschritt ist anwendbar, wenn als img- Element eingebundene Grafiken, Font Icons oder SVGs für Layoutzwecke verwendet werden. 2. Prüfung 2.1 Leere alt -Attribute für Layoutgrafiken Die Seite im Firefox laden. In der Web Developer Toolbar das Menü Images &gt; Display Alt Attributes aufrufen. Alternativ kann auch das Images bookmarklet eingesetzt werden. Prüfen, ob Layoutgrafiken und dekorative Grafiken leere alt -Attribute enthalten. Falls bei solchen Grafiken title -Attribute vergeben sind, müssen auch diese leer sein. Zu bemängeln sind komplett fehlende alt -Attribute (werden durch die Toolbar-Funktion mit \"No Alt!\" gekennzeichnet) und auch Bezeichnungen wie \"Abstandshalter\", \"spacer\", \"leer\" etc. für Layoutgrafiken. 2.2 Dekorative Icon Fonts: Beim Einsatz von Icon Fonts ist es nicht möglich, das leere alt -Attribut einzusetzen. Ein dekoratives Icon wird von assistiven Technologien ignoriert, wenn es mit einem geeigneten Verfahren vor diesen versteckt wird (z. B. aria-hidden=\"true\" ). Prüfung Seite in Firefox aufrufen. Mit den Web Developer Tools prüfen, ob mit der CSS-Eigenschaft content für die Pseudoelemente :before oder :after Inhalt (Font Icons) zu dekorativen Zwecken eingebunden wird. Falls für diese Icons Text ausgegeben wird (z. B. content: \"k\" ), prüfen, ob das Icon mit einer geeigneten Technik für Screenreader versteckt wird (z. B. aria-hidden=\"true\" ). 2.3 Dekorative SVGs Prüfung Seite in Firefox aufrufen. Mit den Web Developer Tools prüfen, ob es sich um eine direkt in HTML eingebundene SVG handelt (Inline SVG). Prüfen, ob die Grafik mit aria-hidden=\"true\" versteckt wird. 3. Hinweise Bei aus mehreren Teilbildern zusammengesetzten Bildern mit Informationsgehalt sollte eines der Teilbilder einen Alternativtext haben, der über den Inhalt des zusammengesetzten Bildes informiert. Die anderen Teilbilder sollten mit leeren alt -Attributen versehen sein. 4. Bewertung Nicht voll erfüllt Layoutgrafiken haben kein alt -Attribut Layoutgrafiken sind mit Alternativtexten wie \"Platzhalter\" oder \"leer\" versehen Layoutgrafiken haben title -Attribute, die nicht leer sind",
    "sources": "Die WCAG 2.0-Technik H67 sieht zusätzlich vor, dass bei Layout-Grafiken auch kein title -Attribut vorhanden sein soll oder dass das title -Attribut leer ist: For each image that should be ignored: Check that title attribute is either absent or empty. Check that alt attribute is present and empty or contains only whitespace (but not ) ( H67: Using null alt text and no title attribute on img elements for images that AT should ignore )",
    "classification": "Einordnung des Prüfschritts nach WCAG 2.1 Guideline Guideline 1.1 Text Alternatives: Provide text alternatives for any non-text content so that it can be changed into other forms people need, such as large print, braille, speech, symbols or simpler language Success criterion 1.1.1 Non-text Content (Level A) Techniques HTML Techniques H67: Using null alt text and no title attribute on img elements for images that AT should ignore CSS Techniques C9: Using CSS to include decorative images Failures F38: Failure of Success Criterion 1.1.1 due to omitting the alt -attribute for non-text content used for decorative purposes only in HTML F39: Failure of Success Criterion 1.1.1 due to providing a text alternative that is not null(e.g. alt='spacer' or alt='image' ) for images that should be ignored by assistive technology",
    "questions": "Grafiken mit informativem Charakter Auf der Seite sind auch Grafiken, die ganz klar informativen Charakter haben, mit leeren alt -Attributen versehen. Vermutlich wird automatisch ein leeres alt -Attribut erzeugt, wenn zu einem Bild kein entsprechender Text eingegeben worden ist. Zu welchem Prüfschritt gehört das? So ist das leere alt -Attribut für dekorative Grafiken ganz sicher nicht gedacht. Das leere alt -Attribut ist ja nicht dasselbe wie ein fehlendes alt -Attribut. Es soll dem Besucher sagen, dass die Grafik keinen wichtigen Inhalt enthält und nur der Dekoration dient. Der Besucher weiß dann, dass er nichts versäumt, wenn er die Grafik nicht sieht. Die automatische Vergabe leerer Alternativtexte für informative Grafiken ist ein Missbrauch des leeren alt -Attributs. Sie sorgt dafür, dass man sich auf dieses Kennzeichen nicht mehr verlassen kann. Dies wird nur in Prüfschritt 9.1.1.1b \"Alternativtexte für Grafiken und Objekte\" bewertet. Aufgabe des Bildes in den Alternativtext? Warum soll man bei Layoutgrafiken nicht die jeweilige Aufgabe des Bildes, also zum Beispiel \"Abstandhalter\" in den Alternativtext schreiben? Wofür sollte das gut sein? Den Abstand herstellen, also die Aufgabe des Bildes übernehmen kann der Alternativtext nicht. Die Information, dass da irgendwo Abstände zwischen Elementen der Seite sind, ist nutzlos. Wie die Elemente auf der Seite angeordnet sind, lässt sich der Tatsache, dass an irgend welchen Stellen Abstandhalter sind, auch nicht entnehmen. Solche Alternativtexte haben also keinen Nutzen. Auf der anderen Seite kann es sehr störend sein, wenn der Screenreader dauernd \"Abstandhalter Abstandhalter Abstandhalter …​\" vorliest. Warum müssen Layoutgrafiken mit leeren alt -Attributen versehen werden? Sie werden ohnehin nicht gebraucht, warum also nicht einfach das alt -Attribut ganz weglassen? Leider ist es noch nicht selbstverständlich, dass informative Grafiken mit Alternativtexten versehen sind. Wenn eine Webseite Grafiken ohne Alternativtext enthält, kann der blinde Besucher also nicht davon ausgehen, dass diese Grafiken nur dem Layout dienen und für ihn nicht relevant sind. Daher die Festlegung, dass der Webdesigner Grafiken durch Zuordnung eines leeren alt -Attributs ausdrücklich als Layoutgrafiken kennzeichnen soll."
  },
  {
    "id": "9.1.1.1D",
    "title": "9.1.1.1d Alternativen für CAPTCHAs",
    "whatChecked": "In bildbasierten CAPTCHAs soll der Alternativtext des Bildes den Zweck des CAPTCHAs beschreiben und angeben, wie eine nicht bildbasierte Alternative zu finden ist. Mindestens eine CAPTCHA-Alternative für ein Grafik-Captcha oder Audio-Captcha muss vorhanden sein.",
    "whyChecked": "In bildbasierten CAPTCHAs werden Bilder von Zeichenfolgen eingesetzt, welche Nutzer als Text eingeben müssen, um bestimmte Bereiche von Webangeboten zu erreichen. Für blinde und sehbehinderte Nutzer sind solche CAPTCHAs nicht zugänglich. Audio-Captchas sind für höreingeschränkte Nutzer nicht zugänglich. Deshalb soll in beiden Fällen mindestens eine CAPTCHA-Alternative angeboten werden. Bei bildbasierten CAPCHAs soll der Alternativtext den Zweck des CAPTCHAs beschreiben und angeben, wie CAPTCHA-Alternativen zu finden sind.",
    "howChecked": "1. Anwendbarkeit des Prüfschritts Der Prüfschritt ist anwendbar, wenn CAPTCHAs vorhanden sind. Die Leserlichkeit der Zeichenfolge in einem bildbasierten CAPTCHA ist nicht Teil der Prüfung und wird nicht bewertet. 2. Prüfung 2.1 Prüfung der Alternativtexte von CAPTCHA-Bildern Die Seite im Firefox laden. In der Web Developer Toolbar das Menü Images &gt; Display Alt Attributes aufrufen. Alternativ kann auch das Images bookmarklet eingesetzt werden. Prüfen, ob beim CAPTCHA-Bild das alt -Attribut vorhanden ist und der dort hinterlegte Alternativtext den Zweck des CAPTCHAs beschreibt (zum Beispiel: \"Geben sie die im Bild dargestellte Zeichenfolge ein\"). 2.2 Vorhandensein von CAPTCHA-Alternativen Prüfen, ob im unmittelbaren Kontext des bildbasierten CAPTCHAs oder Audio-Captchas eine Alternative angeboten wird. 3. Hinweise CAPTCHAs sind generell problematisch, da jede Form von CAPTCHA für manche Nutzer mit Behinderungen unzugänglich ist (siehe die WCAG 2.0 Note on CAPTCHA ). 4. Bewertung Nicht voll erfüllt Alternativtexte nennen nicht den Zweck des CAPTCHAs Alternativ-CAPTCHA ist vorhanden, aber es wird darauf nicht im Alternativtext verwiesen oder es ist nicht im unmittelbaren Kontext zugänglich Nicht erfüllt Eine Alternative zu bildbasierten CAPTCHAs oder Audio-Captchas ist nicht vorhanden.",
    "classification": "Abgrenzung zu anderen Prüfschritten Auch die Texteingabe des Captchas muss zugänglich gestaltet sein, damit es insgesamt zugänglich ist. Die Zugänglichkeit der CAPTCHA-Texteingabe wird im Prüfschritt 9.3.3.2 \"Beschriftungen von Formularelementen vorhanden\""
  },
  {
    "id": "9.1.2.1",
    "title": "9.1.2.1 Alternativen für Audiodateien und stumme Videos",
    "whatChecked": "Audiodateien und stumme Videodateien, die Informationen vermitteln, müssen mit gleichwertigen Medienalternativen versehen werden - es sei denn, es handelt sich bei Ihnen bereits um Medienalternativen für Text.",
    "whyChecked": "Audiodateien (z. B. Audio-Podcasts) sind für hörbehinderte Nutzende nicht oder nur eingeschränkt zugänglich, deshalb brauchen sie eine Transkription. Stumme Videodateien (etwa eine Film- oder Animationssequenz, die ohne Audio-Kommentar zeigt, wie ein Gerät zusammengesetzt wird) sind für blinde und sehbehinderte Nutzende nicht verfügbar. Sie brauchen deshalb eine vollwertige Medienalternative (Text oder Audiodatei).",
    "howChecked": "1. Anwendbarkeit des Prüfschritts Der Prüfschritt ist anwendbar, wenn Audiodateien oder stumme Videodateien auf der Seite eingebunden sind. 2. Prüfung 2.1 Transkription für Audiodateien Im Browser die Audiodatei abspielen. Prüfen, ob Informationen vermittelt werden (z. B. über eine Kommentarstimme). Dann ist eine Transkription erforderlich. Prüfen, ob eine Transkription angeboten wird. Transkription aufrufen und prüfen, ob sie die gleichen Inhalte wie die Audiodatei vermittelt. Bei Audiodateien mit verschiedenen Stimmen gibt es in der Transkription eine Kennzeichnung der sprechenden Person. 2.2 Medienalternative für stumme Film- oder Bildsequenzen Im Browser die stumme Videodatei abspielen. Prüfen, ob Informationen vermittelt werden. Prüfen, ob eine Medienalternative angeboten wird. Dies kann eine Textversion (direkt oder über einen Link), eine alternative Tonspur oder eine zusätzliche Audiodatei sein. Medienalternative aufrufen und prüfen, ob sie die gleichen Inhalte wie die stumme Film- oder Bildsequenz vermittelt. 2.3 Prüfung der Erreichbarkeit der Transkription bzw. Medienalternative Prüfen, ob die Medienalternative im unmittelbaren Kontext der Audio- oder Videodatei angeboten wird. Falls die Medienalternative auf einer anderen Seite steht: gibt es zu ihr einen aussagekräftigen Link im unmittelbaren Kontext der Audio- oder Videodatei? 3. Hinweise Eine Medienalternative ist nicht nötig, wenn Audio- oder Videodateien selbst als ergänzende Medienalternative angeboten werden (etwa eine schriftliche Montageanleitung, die durch eine Bildsequenz der beschriebenen Schritte ergänzt wird). Der Bezug muss dabei klar sein, etwa durch unmittelbare Nachbarschaft der beiden Medienalternativen oder durch einen aussagekräftigen Link. Eine genaue Entsprechung der Audio- oder stummen Videodatei und ihrer Medienalternative ist nicht erforderlich, es sollen aber nachvollziehbar dieselben Inhalte wiedergegeben werden. Bei Transkriptionen von mehreren Stimmen (etwa Dialogen) sollen die sprechenden Personen im Text identifiziert sein. 4. Bewertung Nicht voll erfüllt Es gibt eine Medienalternative, aber der Bezug zu der entsprechenden Audiodatei oder stummen Videodatei ist nicht deutlich. Es gibt eine Medienalternative, aber die Inhalte der Audio- oder stummen Videodatei sind darin nicht vollständig wiedergegeben.",
    "classification": "Abgrenzung zu anderen Prüfschritten im Fall von zeitbasierten Medien geht es im Prüfschritt 9.1.1.1b \"Alternativtexte für Grafiken und Objekte\"."
  },
  {
    "id": "9.1.2.2",
    "title": "9.1.2.2 Aufgezeichnete Videos mit Untertiteln",
    "whatChecked": "Wenn die Tonspur eines aufgezeichneten Videos Informationen enthält, müssen Untertitel als Alternative bereitgestellt werden.",
    "whyChecked": "Filme sind in der Regel ohne den Ton nicht zu verstehen. Daher muss für Menschen mit Hörbehinderung der Inhalt der Tonspur durch Untertitel bereitgestellt werden. Untertitel können auch für andere Nutzende hilfreich sein, zum Beispiel für Personen, die mit der Sprache des Films nicht vertraut sind.",
    "howChecked": "1. Anwendbarkeit des Prüfschritts Der Prüfschritt ist anwendbar, wenn aufgezeichnete Videos mit synchroner Bild- und Tonspur vorhanden sind. Aufgezeichnete Videos ohne Tonspur brauchen keine Untertitel, der Prüfschritt ist für sie nicht anwendbar. Alternativen für Videos ohne Tonspur werden in Prüfschritt 9.1.2.1 \"Alternativen für Audiodateien und stumme Videos\" geprüft. 2. Prüfung 2.1 Prüfung auf Untertitel Das Video im auf der Website eingebundenen Player abspielen. Prüfen, ob parallel zum Video Untertitel automatisch angezeigt werden oder zugeschaltet werden können. Wenn Untertitel vorhanden sind, eine kurze Sequenz des Videos mit Untertiteln ansehen, um stichprobenartig festzustellen, ob die Untertitel dem hörbaren Inhalt entsprechen. Dies betrifft auch akustische Ereignisse, die für das Verständnis des Inhalts wichtig sind. 2.2 Prüfung von Videos als Medienalternative Falls keine Untertitel vorhanden sind: Prüfen, ob das Video als ergänzende Medienalternative zu einem Text angeboten wird. Prüfen, ob die Beschriftung des Videos klar auf eine dazugehörige Textversion verweist und diese entweder in unmittelbarer Nachbarschaft verfügbar ist oder durch einen aussagekräftigen Link erreichbar ist. Prüfen, ob das Video alle wesentlichen Inhalte des Textes über den Ton transportiert. Wenn das Video wichtige über den Textinhalt hinausgehende Informationen trägt, ist das Video keine Medienalternative, es braucht Untertitel und muss auch auf Audiodeskription geprüft werden (siehe auch Prüfschritt 9.1.2.3 \"Audiodeskription oder Volltext-Alternative für Videos\"). 3. Bewertung Erfüllt Aufgezeichnete Videos mit synchroner Bild- und Tonspur haben erweiterte Untertitel, die alle Informationen der Tonspur enthalten. Dazu gehören gegebenenfalls die Anzeige, wer spricht, und bedeutungstragende Tonereignisse (etwa informationstragende Geräusche, Lachen, Applaus). Teilweise erfüllt Aufgezeichnete Videos mit synchroner Bild- und Tonspur haben keine Untertitel, aber folgende Bedingung ist erfüllt: Es gibt im unmittelbaren Kontext des Videos eine vollständige Textalternative (Transkription) oder einen klar bezeichneten Link zu einer vollständigen Textalternative. Wenn das Videobild Inhalte hat, die nicht in der Transkription vorkommen oder nicht adäquat darstellbar sind, kommen die Abstufungen der Bewertung von eher nicht erfüllt bis nicht erfüllt in Betracht. Nicht voll erfüllt Bei Medienalternativen fehlt die direkte Nachbarschaft oder der klar bezeichnete Link auf das primäre Medium, dass die Medienalternative ersetzt. Nicht erfüllt Aufgezeichnete Videos sind ohne Untertitel, eine Textalternative ist ebenfalls nicht vorhanden.",
    "sources": "BIK für Alle: Leitfaden barrierefreie Online-Videos Für Webentwickler: Einbindung in die Internetseite Hinweise zur Wahl von Mediaelementen. Untertitelung 'Sprungmarker' zur Barrierefreiheit von Media-Playern Barrierefreiheit &amp; Media Player: eine Kurzübersicht - Teil 1 Barrierefreiheit &amp; Media Player: Captioning - Teil 2 Zum Stellenwert von Untertiteln und Gebärdensprache Sign languages for the Deaf (I know of three used in english-speaking countries besides \"signed english\") normally have their own grammar and syntax, their own ways of adding emphasis or modifying the \"tone\" of a statement. They are generally recognised as being languages in their own right, and not just a pictorial representation of words in a spoken language. Which brings up all the problems associated with translation - it is not easy, and automatic translators are still quite primitive. This explains why sign language users (not all people who are deaf are sign users) generally prefer sign language interpretation to captioning - with captions they have to read what amounts to a foreign language, and reading text is not a skill that is easy to acquire without hearing (since it is based on an abstract representation of the sound of a language, whereas sign languages tend to be based on an abstract representation of visual experience of the world, and since sign languages generally don’t have a written form). So being able to communicate in their own language, and not required to use a foreign language for chat systems etc is important. Note that typically this applies to the minority who lose their hearing before they learn to speak a language - people who are hearing impaired or lose their hearing later in life, tend to be more (or often only) proficient in a spoken/written language, so captions are indeed necessary. ( http://lists.w3.org/Archives/Public/w3c-wai-ig/2003JulSep/0222.html )",
    "classification": "Abgrenzung zu anderen Prüfschritten Live-Videos Die Untertitelung von Live-Videos wird in Prüfschritt 9.1.2.4 \"Videos (live) mit Untertiteln\" geprüft. Stumme Videodateien Bei diesem Prüfschritt geht es um die synchrone Vermittlung von visuellen und akustischen Informationen. Der Prüfschritt ist relevant, wenn für das Verständnis eines Elements die parallele Wahrnehmung von Bild und Ton erforderlich ist. Ein einfacher Alternativtext oder eine zusammenfassende Beschreibung ist dann nicht (mehr) ausreichend. Stumme Video-Dateien werden im Prüfschritt 9.1.2.1 \"Alternativen für Audiodateien und stumme Videos\" geprüft. Alternativtexte für Objekte Alternativtexte für Multimedia-Objekte, etwa Video- oder Audio-Dateien oder Applets, werden in Prüfschritt 9.1.1.1b \"Alternativtexte für Grafiken und Objekte\" geprüft. Einordnung des Prüfschritts nach WCAG 2.1 Guideline Guideline 1.2 Time-based Media: Provide alternatives for time-based media Success criteria 1.2.2 Captions (Prerecorded) (Level A) Techniques General Techniques G87: Providing closed captions G93: Providing open (always visible) captions HTML Techniques H95: Using the track element to provide captions SMIL Techniques SM11: Providing captions through synchronized text streams in SMIL 1.0 SM12: Providing captions through synchronized text streams in SMIL 2.0 Failures F8: Failure of Success Criterion 1.2.2 due to captions omitting some dialogue or important sound effects F74: Failure of SC1.2.2 and 1.2.8 due to not labeling a synchronized media alternative to text as an alternative F75: Failure of Success Criterion 1.2.2 by providing synchronized media without captions when the synchronized media presents more information than is presented on the page",
    "questions": "Können an Stelle der Untertitel auch Filme mit gebärdensprachlicher Darstellung eingeblendet werden? Solche Filme sind hilfreich für Personen, die über Gebärdensprache kommunizieren. Meist sind das Personen, die gehörlos geboren oder schon früh ertaubt sind. Dagegen können Personen, die erst im Alter ertaubt sind, in der Regel nicht über Gebärdensprache kommunizieren. Sie benötigen Untertitel. Gebärdensprachliche Darstellungen sind also kein Ersatz für die Untertitel."
  },
  {
    "id": "9.1.2.3",
    "title": "9.1.2.3 Audiodeskription oder Volltext-Alternative für Videos",
    "whatChecked": "Für informationstragende visuelle Videoinhalte muss eine Audiodeskription oder Volltext-Alternative bereitgestellt werden.",
    "whyChecked": "Die Handlung von Videos kann oft auch ohne Bild recht gut verfolgt werden. Den Sprecher einer Nachrichtensendung muss man zum Beispiel nicht sehen, um zu verstehen, worum es geht. Spielfilme und Reportagen enthalten dagegen oft Passagen, in denen wenig gesprochen wird und Inhalte über das Bild vermittelt werden. Blinden oder seheingeschränkten Menschen kann der Zugang zu solchen Videos über eine der beiden Umsetzungen ermöglicht werden: Es wird das Verfahren der Audiodeskription eingesetzt: In den vorhandener Dialogpausen werden Passagen beschrieben, die Inhalte nur über Bilder vermitteln und die nicht in der Haupttonspur enthalten sind. Alternativ wird eine Volltext-Alternative angeboten: Alle Informationen werden in Textform bereitgestellt. Im Gegensatz zur Audiodeskription beschränkt sich die Beschreibung des Videoteils nicht nur auf die Pausen im vorhandenen Dialog. Es werden vollständige Beschreibungen aller visuellen Informationen bereitgestellt, einschließlich des visuellen Kontexts, der Handlungen und Ausdrücke der Schauspieler. Darüber hinaus werden nichtsprachliche Geräusche (Lachen, Stimmen aus dem Off usw.) beschrieben, und es werden Transkripte aller Dialoge mitgeliefert.",
    "howChecked": "1. Anwendbarkeit des Prüfschritts Der Prüfschritt ist anwendbar, wenn Videos mit synchroner Bild- und Tonspur vorhanden sind und Informationen über das Bildgeschehen für das Verständnis erforderlich sind. Videos brauchen keine Audiodeskription oder Volltext-Alternative, wenn der Fortgang des Bildgeschehens nicht in Worte gefasst werden kann. Der Prüfschritt ist dann nicht anwendbar. Verzichtbar ist die Audiodeskription oder Volltext-Alternative, wenn die synchrone Wahrnehmung von Bild und Ton für das Verständnis des Videos nicht erforderlich ist oder wenn das Video keine Tonspur hat (siehe Prüfschritt 9.1.2.1 \"Alternativen für Audiodateien und stumme Videos\"). Verzichtbar ist die Audiodeskription oder Volltext-Alternative auch für Videos, die lediglich als Medienalternative zu einem textbasierten Inhalt dienen, das heißt ergänzend zu einem Text angeboten werden, um den Textinhalt zusätzlich in anderer Form zu vermitteln. Dies gilt nur für Videos, die keine über den Textinhalt hinausgehende Informationen bieten und die klar als Medienalternative zum Text erkennbar sind. Gebärdensprachvideos brauchen keine Audiodeskription. 2. Prüfung 2.1 Audiodeskription prüfen Es wird eine Sicht- und Hörprüfung vorgenommen: Art der Einbindung feststellen. Die Audiodeskription kann auf verschiedenem Wege angeboten werden: Die Audiodeskription ist bereits in der normalen Tonspur enthalten. Eine weitere Version des Videos mit Audiodeskription wird angeboten. Diese Version wird geprüft. Ein funktionierender Link zu dieser Version muss im unmittelbaren Kontext des Videos angeboten werden, ebenso wie ein Zurück-Link (oder das Zurückspringen funktioniert über den Zurück-Button des Browsers). Das Video hat eine zuschaltbare Tonspur mit der Audiodeskription. Diese Spur wird zusätzlich geschaltet. Das Video im auf der Website eingebundenen Player abspielen. Wenn eine Audiodeskription vorhanden ist, wird eine kurze Sequenz der Deskription angehört, um stichprobenartig festzustellen, ob sie nutzbar ist. Gibt es wichtige informationstragende Bildinhalte, die nicht in der Tonspur auftauchen und für die es keine zusätzliche Audiodeskription gibt? 2.2 Volltextalternative prüfen Es wird eine Sicht- und Hörprüfung vorgenommen: Das Video im auf der Website eingebundenen Player abspielen. Volltextalternative prüfen, diese sollte folgende Informationen enthalten: Eine fortlaufende Beschreibung des Geschehens Alle visuellen Information, eingeschlossen Beschreibungen des visuellen Kontexts, Aktionen und der Ausdruck der Schauspieler. Geräusche (Gelächter, off-Screen-Stimmen etc.) Transkriptionen aller Dialoge Prüfen, ob die Abfolge der Beschreibung und Dialoge der Abfolge im Video entsprechen. Falls interaktive Elemente vorkommen (z. B. „Aktivieren Sie jetzt, um die Frage zu beantworten“), sollte die Volltextalternative Links oder ähnliches vorsehen, um dieselbe Funktionalität zu gewährleisten. 3. Hinweis Die Anforderung 9.1.2.3 Audiodeskription oder Volltextalternative ist in den WCAG der Konformitätsstufe A zugeordnet. Auf Konformitätstufe AA gibt es ein Erfolgskriterium, das die Volltext-Alternative nicht akzeptiert. Der BITV-Test prüft dieses Erfolgskriterium der Stufe AA im Prüfschritt 9.1.2.5 Audiodeskription für Videos Bietet die Website eine Volltextalternative, so ist zwar 9.1.2.3 (A) erfüllt, nicht aber 9.1.2.5 (AA). Da der BITV-Test Konformität auf Stufe AA prüft, wird dann die Seite in der Auswertung des Tests als \"nicht konform\" bewertet. Eine Audiodeskription ist also für eine konforme Bewertung der Seite im BITV-Test gefordert, sofern der Prüfschritt anwendbar ist. 4. Bewertung Nicht voll erfüllt Es wird keine Audiodeskription angeboten, informationstragende Bildinhalte sind nicht vollständig in der angebotenen Volltextalternative enthalten. Nicht erfüllt Das informationstragende, visuelle Video hat weder eine Audiodeskription noch eine Volltextalternative. Abwertung des Gesamtergebnisses Die Abwertung ist erforderlich, wenn Bildinhalte eines Videos ohne Audiodeskription für die Nutzung des Webauftritts von zentraler Bedeutung sind: der Webauftritt kann wegen Unzugänglichkeit des Videos von blinden oder sehbehinderten Menschen nicht genutzt werden.",
    "sources": "BIK für Alle: Leitfaden barrierefreie Online-Videos Für Webentwickler: Einbindung in die Internetseite Hinweise zur Wahl von Mediaelementen. Audiodeskription Blogartikel von 'Sprungmarker' zur Barrierefreiheit von Media-Playern (Stand 09/2014): Barrierefreiheit &amp; Media Player: eine Kurzübersicht - Teil 1 Blogartikel von Terrill Thompson zu Audio Description (Stand 03/2017): My Audio Description Talk @ CSUN",
    "classification": "Einordnung des Prüfschritts nach WCAG 2.1 Guideline Guideline 1.2 Time-based Media: Provide alternatives for time-based media Success criterion 1.2.3 Audio Description or Media Alternative (Prerecorded) (Level A) Techniques General Techniques G58: Placing a link to the alternative for time-based media immediately next to the non-text content G69: Providing an alternative for time based media G78: Providing a second, user-selectable, audio track that includes audio descriptions G173: Providing a version of a movie with audio descriptions G203: Using a static text alternative to describe a talking head video SMIL Techniques SM1: Adding extended audio description in SMIL 1.0 SM2: Adding extended audio description in SMIL 2.0 SM6: Providing audio description in SMIL 1.0 SM7: Providing audio description in SMIL 2.0",
    "questions": "Was sind \"wichtige informationstragende Bildinhalte\"? Sehr häufig tauchen in Videos eingeblendete Texte auf, die etwa Sprecher oder Sprecherin bzw. deren Rolle benennen. Ohne diese Information ist für nicht-visuelle Nutzer unklar, wer da eigentlich spricht oder interviewt wird. Wenn es eher unwichtig ist, wie die Person heißt, die spricht (z.B. in Passantenbefragungen) sind solche Einblendungen nicht als \"wichtige informationstragende Bildinhalte\" zu betrachten. Oft sind Videos auch über visuelle Zwischentitel oder eingeblendete Fragen strukturiert. Hier ist zu prüfen, inwieweit die Informationen auch ohne Audiodeskription oder Transkription der Bildinhalte sinnvoll und verständlich sind - zum Beispiel weil ein Sprecherton in der Folge ausreichend Kontext liefert."
  },
  {
    "id": "9.1.2.4",
    "title": "9.1.2.4 Videos (live) mit Untertiteln",
    "whatChecked": "Wenn die Tonspur einer Live-Übertragung Informationen enthält, müssen Untertitel als Alternative bereitgestellt werden.",
    "whyChecked": "Filme sind in der Regel ohne den Ton nicht zu verstehen. Dies gilt auch für Live-Übertragungen. Daher muss für Menschen mit Hörbehinderung der Inhalt der Tonspur durch Untertitel bereitgestellt werden. Untertitel können auch für andere Nutzende hilfreich sein, zum Beispiel für Personen, die mit der Sprache des Films nicht vertraut sind.",
    "howChecked": "1. Anwendbarkeit des Prüfschritts Der Prüfschritt ist anwendbar, wenn Live-Übertragungen mit synchroner Bild- und Tonspur vorhanden sind. Live-Videos ohne Tonspur brauchen keine Untertitel, der Prüfschritt ist für sie nicht anwendbar. Alternativen für Videos ohne Tonspur werden in Prüfschritt 9.1.2.1 \"Alternativen für Audiodateien und stumme Videos\" geprüft. 2. Prüfung auf Untertitel Das Video im auf der Website eingebundenen Player abspielen. Prüfen, ob parallel zum Video Untertitel automatisch angezeigt werden oder zugeschaltet werden können. Wenn Untertitel vorhanden sind, eine kurze Sequenz des Videos mit Untertiteln ansehen, um stichprobenartig festzustellen, ob die Untertitel dem hörbaren Inhalt entsprechen. Dies betrifft auch akustische Ereignisse, die für das Verständnis des Inhalts wichtig sind. 3. Bewertung Erfüllt Live-Übertragungen mit synchroner Bild- und Tonspur haben erweiterte Untertitel, die alle Informationen der Tonspur enthalten. Dazu gehört gegebenenfalls die Anzeige, wer spricht, und bedeutungstragende Tonereignisse (etwa informationstragende Geräusche, Lachen, oder Applaus). Nicht erfüllt Live-Übertragungen haben keine Untertitel.",
    "classification": "Abgrenzung zu anderen Prüfschritten Aufgezeichnete Videos Die Untertitelung von aufgezeichneten Videos wird in Prüfschritt 9.1.2.2 \"Aufgezeichnete Videos mit Untertiteln\" geprüft. Stumme Videodateien Bei diesem Prüfschritt geht es um die synchrone Vermittlung von visuellen und akustischen Informationen. Der Prüfschritt ist relevant, wenn für das Verständnis eines Elements die parallele Wahrnehmung von Bild und Ton erforderlich ist. Ein einfacher Alternativtext oder eine zusammenfassende Beschreibung ist dann nicht (mehr) ausreichend. Stumme Video-Dateien werden im Prüfschritt 9.1.2.1 \"Alternativen für Audiodateien und stumme Videos\" geprüft. Alternativtexte für Objekte Alternativtexte für Multimedia-Objekte, etwa Video- oder Audio-Dateien oder Applets, werden in Prüfschritt 9.1.1.1b \"Alternativtexte für Grafiken und Objekte\" geprüft. Einordnung des Prüfschritts nach WCAG 2.1 Guideline Guideline 1.2 Time-based Media: Provide alternatives for time-based media Success criterion 1.2.4 Captions (Live) (Level AA) Techniques General Techniques G9: Creating captions for live synchronized media G87: Providing closed captions G93: Providing open (always visible) captions SMIL Techniques SM11: Providing captions through synchronized text streams in SMIL 1.0 SM12: Providing captions through synchronized text streams in SMIL 2.0"
  },
  {
    "id": "9.1.2.5",
    "title": "9.1.2.5 Audiodeskription für Videos",
    "whatChecked": "Für informationstragende visuelle Videoinhalte muss eine Audiodeskription bereitgestellt werden.",
    "whyChecked": "Die Handlung von Videos kann oft auch ohne Bild recht gut verfolgt werden. Den Sprecher einer Nachrichtensendung muss man zum Beispiel nicht sehen, um zu verstehen, worum es geht. Dagegen enthalten Spielfilme und Reportagen oft Passagen, in denen wenig gesprochen wird und Inhalte über das Bild vermittelt werden. Damit ein blinder Zuschauer den Film verfolgen kann, müssen ihm solche Passagen beschrieben werden. Hierfür wird das Verfahren der Audiodeskription eingesetzt.",
    "howChecked": "1. Anwendbarkeit des Prüfschritts Der Prüfschritt ist anwendbar, wenn Videos mit synchroner Bild- und Tonspur vorhanden sind und Informationen über das Bildgeschehen für das Verständnis erforderlich sind. Videos brauchen keine Audiodeskription, wenn der Fortgang des Bildgeschehens nicht in Worte gefasst werden kann. Der Prüfschritt ist dann nicht anwendbar. Verzichtbar ist die Audiodeskription, wenn die synchrone Wahrnehmung von Bild und Ton für das Verständnis des Videos nicht erforderlich ist oder wenn das Video keine Tonspur hat (siehe Prüfschritt 9.1.2.1 \"Alternativen für Audiodateien und stumme Videos\"). Verzichtbar ist die Audiodeskription auch für Videos, die lediglich als Medienalternative zu einem textbasierten Inhalt dienen, das heißt ergänzend zu einem Text angeboten werden, um den Textinhalt zusätzlich in anderer Form zu vermitteln. Dies gilt nur für Videos, die keine über den Textinhalt hinausgehende Informationen bieten und die klar als Medienalternative zum Text erkennbar sind. Gebärdensprachvideos brauchen keine Audiodeskription. 2. Prüfung Es wird eine Sicht- und Hörprüfung vorgenommen: Art der Einbindung feststellen. Die Audiodeskription kann auf verschiedenem Wege angeboten werden: Die Audiodeskription ist bereits in der normalen Tonspur enthalten. Eine weitere Version des Videos mit Audiodeskription wird angeboten. Diese Version wird geprüft. Ein funktionierender Link zu dieser Version muss im unmittelbaren Kontext des Videos angeboten werden, ebenso wie ein Zurück-Link (oder das Zurückspringen funktioniert über den Zurück-Button des Browsers). Das Video hat eine zuschaltbare Tonspur mit der Audiodeskription. Diese Spur wird zusätzlich geschaltet. Das Video wird im auf der Website eingebundenen Player oder in einem externen, vom Format abhängigen Video-Player abgespielt. Sind im Video wichtige informationstragende Bildinhalte vorhanden, die nicht in der Tonspur bzw. einer zusätzlichen Audiodeskription vorkommen? 3. Bewertung Teilweise erfüllt Die Bildbeschreibungen der Audiodeskription sind nicht aussagekräftig oder nicht vollständig. Nicht erfüllt Das Video enthält wichtige informationstragende Bildinhalte, die weder in der Tonspur noch in einer zusätzlichen Audiodeskription vorkommen.",
    "sources": "BIK für Alle: Leitfaden barrierefreie Online-Videos Für Webentwickler: Einbindung in die Internetseite Hinweise zur Wahl von Mediaelementen. Audiodeskription Blogartikel von 'Sprungmarker' zur Barrierefreiheit von Media-Playern (Stand 09/2014) Barrierefreiheit &amp; Media Player: eine Kurzübersicht - Teil 1 Blogartikel von Terrill Thompson zu Audio Description (Stand 03/2017): My Audio Description Talk @ CSUN",
    "classification": "Abgrenzung zu anderen Prüfschritten In diesem Prüfschritt wird nur geprüft, ob das Video eine Audiodeskription hat. Eine Volltextalternative wird im Prüfschritt 9.1.2.3 \"Audiodeskription oder Volltext-Alternative für Videos\" bewertet. Braucht ein Video eine Audiodeskription und sind weder eine Audiodeskription noch eine Volltextalternative vorhanden, sind sowohl dieser Prüfschritt als auch Prüfschritt 9.1.2.3 \"Audiodeskription oder Volltext-Alternative für Videos\" nicht bzw. nicht voll erfüllt. Einordnung des Prüfschritts nach WCAG 2.1 Guideline Guideline 1.2 Time-based Media: Provide alternatives for time-based media Success criterion 1.2.5 Audio Description (Prerecorded) (Level AA) Techniques General Techniques G78: Providing a second, user-selectable, audio track that includes audio descriptions G173: Providing a version of a movie with audio descriptions G203: Using a static text alternative to describe a talking head video SMIL Techniques SM1: Adding extended audio description in SMIL 1.0 SM2: Adding extended audio description in SMIL 2.0 SM6: Providing audio description in SMIL 1.0 SM7: Providing audio description in SMIL 2.0",
    "questions": "Was sind \"wichtige informationstragende Bildinhalte\"? Sehr häufig tauchen in Videos eingeblendete Texte auf, die etwa Sprecher oder Sprecherin bzw. deren Rolle benennen. Ohne diese Information ist für nicht-visuelle Nutzer unklar, wer da eigentlich spricht oder interviewt wird. Wenn es eher unwichtig ist, wie die Person heißt, die spricht (z.B. in Passantenbefragungen), sind solche Einblendungen nicht als \"wichtige informationstragende Bildinhalte\" zu betrachten. Oft sind Videos auch über visuelle Zwischentitel oder eingeblendete Fragen strukturiert. Hier ist zu prüfen, inwieweit die Informationen auch ohne Audiodeskription oder Transkription der Bildinhalte sinnvoll und verständlich sind - zum Beispiel, weil die Tonspur in der Folge ausreichend Kontext liefert."
  },
  {
    "id": "9.1.3.1A",
    "title": "9.1.3.1a HTML-Strukturelemente für Überschriften",
    "whatChecked": "Überschriften müssen korrekt mit den HTML-Strukturelementen h1 bis h6 oder äquivalenten ARIA-Rollen und Attributen ausgezeichnet sein und die Inhalte der Seite erschließen.",
    "whyChecked": "Visuell werden Webseiten-Inhalte durch Überschriften strukturiert. Dank dieser Strukturierung wissen Nutzende, was zusammengehört, kann die Inhalte der Webseite leicht überblicken und gezielt auf Inhalte zugreifen, die ihn interessieren. Nutzende, die diese visuelle Ordnung nicht nutzen können, zum Beispiel, weil sie blind sind oder nur einen kleinen Ausschnitt der Seite sehen können, sind darauf angewiesen, dass die Struktur unabhängig von der Darstellung auf dem Bildschirm zugänglich und nutzbar ist. Die Verwendung von Überschriften-Elementen ist dafür eine wesentliche Voraussetzung. So können Benutzer die Überschriften-Elemente anwenden: Nur die Überschriften anzeigen lassen – als Inhaltsverzeichnis für die schnelle Orientierung (besonders wichtig für blinde Nutzende) Von Überschrift zu Überschrift springen (blinde Nutzende) Überschriften anders hervorheben, wenn die von den Webautorinnen und -autoren vorgesehene Hervorhebung nicht geeignet ist (zum Beispiel andere Farbe oder Stimme)",
    "howChecked": "1. Anwendbarkeit des Prüfschritts Der Prüfschritt ist anwendbar, wenn es auf der Seite Inhalte gibt, die durch Überschriften strukturiert werden können. Das ist bei informationsorientierten Seiten in der Regel der Fall. 2. Prüfung Seite im Firefox aufrufen. Über die Web Developer Toolbar die Seite ohne Stylesheets anzeigen ( CSS &gt; Stile deaktivieren &gt; Alle Stile deaktivieren wählen), dann das Bookmarklet \"Inhalte gegliedert\" aufrufen. Alternativ das HeadingsMap Browser-Plugin nutzen, um die Überschriften-Hierarchie anzuzeigen. Prüfen, ob Inhalte, die visuell als Überschriften zu erkennen sind, mittels der HTML-Strukturelemente h1 bis h6 als Überschriften ausgezeichnet sind Wenn kein natives Überschriften-Markup eingesetzt wird, prüfen, ob visuelle Überschriften alternativ mit role=\"heading\" und passenden aria-level -Attributen zur Festlegung der Überschriften-Ebene ausgezeichnet sind. Die Hierarchie der eingesetzten HTML-Überschriftselemente soll der Gliederung der Inhalte entsprechen. Prüfen, ob HTML-Strukturelemente h1 bis h6 lediglich zur Erzeugung unterschiedlicher Schriftgrößen eingesetzt werden. 3. Hinweise Es ist nicht die Aufgabe des Prüfschritts zu prüfen, ob Wortwahl oder Stil der Überschriften den jeweiligen Inhalten angemessen sind. Überschriften sollten korrekt geschachtelt sein ( h1 gefolgt von h2 gefolgt von h3 , und so weiter, oder entsprechenden aria-level -Attributen auf Elementen mit role=\"heading\" ), um die Gliederung der Text-Inhalte abzubilden. Das Auslassen von Hierarchie-Ebenen ist aber an sich kein Fehler, solange die hierarchische Abfolge der Überschriften logisch bleibt. Die erste Regel für den Einsatz von WAI-ARIA empfiehlt, wenn möglich native HTML-Elemente einsetzen. Siehe Using of ARIA, First rule of ARIA use . Wenn dies nicht möglich ist, kann mit role=\"heading\" und dem aria-level -Attribut die Semantik zur Verfügung gestellt werden. Die Inhalte von iframes werden ebenso überprüft wie andere Seiteninhalte. Dazu muss unter Umständen der iframe in einem neuen Fenster geladen werden. 4. Bewertung Erfüllt Die visuellen Überschriften der Seite sind mittels semantischem Mark-Up (HTML-Strukturelemente oder ARIA-Rollen und -Attribute) ausgezeichnet und korrekt verschachtelt, und sind somit auch nicht-visuell zugänglich. Teilweise erfüllt Es wird semantisches Mark-Up für Überschriften eingesetzt, die Verschachtelung der Hierarchie-Ebenen ist aber irreführend, entspricht nicht der inhaltlichen Gliederung. Nicht erfüllt Es gibt auf der Seite gegliederte Inhalte, für die Auszeichnung der Überschriften wird kein semantisches Mark-Up verwendet. Auf der Seite stehen klar abgrenzbare Inhalte mit sichtbaren Überschriften, es wurde aber nur pro forma eine Hauptüberschrift ausgezeichnet.",
    "sources": "Überschriften zur Abbildung der Struktur verwenden Long documents are often divided into a variety of chapters, chapters have subtopics and subtopics are divided into various sections, sections into paragraphs, etc. These semantic chunks of information make up the structure of the document. Sections should be introduced with the HTML heading elements (H1-H6)Other markup may complement these elements to improve presentation (e.g., the HR element to create a horizontal dividing line), but visual presentation is not sufficient to identify document sections. ( http://www.w3.org/TR/WCAG10-HTML-TECHS/#document-headers ) Überschriften richtig schachteln To facilitate navigation and understanding of overall document structure, authors should use headings that are properly nested (e.g., h1 followed by h2 , h2 followed by h2 or h3 , h3 followed by h3 or h4 , etc.).. (WCAG 2.0 Technik G141: Organizing a page using headings ) Überschriften-Elemente und CSS-Auszeichnungen nicht missbrauchen Using headings merely to change the appearance of text does not convey the organization of the content, and may confuse users who use headings to perceive structure or rely on them for navigation. Conversely, while applying bold format, or even class=\"heading\" , can result in the visual display of a heading, assistive technologies will not recognize such text as headings. (WCAG 2.0 Technik H42: Using h1-h6 to identify headings )",
    "classification": "Abgrenzung zu anderen Prüfschritten In diesem Prüfschritt geht es um den Einsatz von Überschriften zur Gliederung der Seiten inhalte , damit diese leicht zu erfassen und mit Hilfsmitteln wie Screenreadern zu überspringen sind. Im Prüfschritt 9.2.4.1 \"Bereiche überspringbar\" geht es dagegen um die Strukturierung der Seiten bereiche durch Überschriften, WAI-Aria-Attribute oder Sprunglinks. Einordnung des Prüfschritts nach WCAG 2.1 Guidelines Guideline 1.3 Adaptable: Create content that can be presented in different ways (for example simpler layout) without losing information or structure Success criterion 1.3.1 Info and Relationships (Level A) Techniques General Techniques G115: Using semantic elements to mark up structure G140: Separating information and structure from presentation to enable different presentations HTML Techniques H42: Using h1-h6 to identify headings H69: Providing heading elements at the beginning of each section of content ARIA Techniques ARIA12: Using role=heading to identify headings Failures F43: Failure of Success Criterion 1.3.1 due to using structural markup in a way that does not represent relationships in the content F92: Failure of Success Criterion 1.3.1 due to the use of role presentation on content which conveys semantic information",
    "questions": "Kann es mehrere h1 -Überschriften auf einer Seite geben? Die mit h1 ausgezeichnete Hauptüberschrift sollte sagen, worum es auf der Seite geht. Wenn alle Inhalte der Seite zu einem übergreifenden Thema gehören, dann sollte die Hauptüberschrift dieses Thema angeben. Es gibt dann nur eine mit h1 ausgezeichnete Überschrift. Vielleicht hat die Seite aber auch zwei Themen, die keine große Gemeinsamkeit haben. Wenn es in so einem Fall nur eine Hauptüberschrift gibt, dann ist diese entweder nichtssagend oder sie zählt einfach die beiden Themen auf. Ihr Nutzen ist fraglich, es kann also auch sinnvoll sein, mehrere Überschriften auf derselben Seite mit h1 auszuzeichnen. Warum sind die Anforderungen des Prüfschritts so allgemein gehalten. Es gibt doch klare formale Vorgaben für die richtige Strukturierung durch Überschriften! Formale Regeln für die Strukturierung durch Überschriften sind sinnvoll und sie können nützlich sein. Oft liefert ihre Überprüfung Hinweise auf falsche oder missbräuchliche Anwendung der Überschriften oder anderer Strukturelemente. Die Umkehrung ist aber nicht möglich, formal korrekte Überschriftstrukturen sind nicht unbedingt brauchbar. Entscheidend ist, dass die Überschriften den Inhalt der Seite erschließen. Man muss sich also das aus den Überschriften zusammengesetzte Inhaltsverzeichnis ansehen und überlegen: Ist das Verzeichnis vollständig? Zeigt es mir alle wichtigen Inhalte der Seite? Ist das Verzeichnis brauchbar? Kann ich ohne viel Aufwand auf alle wichtigen Inhalte der Seite zugreifen? Das sind die entscheidenden Fragen, die Struktur muss für die Nutzenden brauchbar sein. Die Einhaltung der verschiedenen technischen Regeln ergibt sich dann von selbst. Muss für die oberste Überschrift immer h1 verwendet werden? Die Frage ist, ob es einen akzeptablen Grund gibt, die h1 -Überschrift zu überspringen. Es kann zum Beispiel sein, dass h2 verwendet worden ist, weil der umsetzenden Person die h1 -Überschrift zu groß war und er nicht wusste, wie man die Größe ändert. Das wäre kein akzeptabler Grund, denn Inhalt und Form soll man trennen. Ein anderer Grund dafür, mit einer niedrigeren Überschrift-Ebene anzufangen: Das Webangebot ist ein zusammengesetztes Dokument, die einzelnen Seiten sind zum Beispiel einzelne Kapitel dieses Dokuments. Das ist ein akzeptabler Grund. Für die Brauchbarkeit von Überschriften kommt es allerdings nicht darauf an, dass eine h1 an oberster Stelle steht. Kann man auch grafische Schriften als Überschriften auszeichnen? Generell ist die Verwendung von Schriftgrafiken für Überschriften problematisch. Denn die Nutzenden können Grafiken nicht so leicht an seine Bedürfnisse anpassen. Sie können jedoch als Überschrift ausgezeichnet werden. Der Prüfschritt 9.1.3.1.A ist erfüllt, wenn grafische Überschriften in angemessener Weise als Überschriften ausgezeichnet sind. Was ist der Unterschied zwischen dem Dokumenttitel und der h1 -Überschrift? Der Dokumenttitel wird als Fenstertitel oder für Bookmarks verwendet. Wenn man mehrere Bookmarks in seiner Liste hat oder mehrere Fenster geöffnet sind, dann soll der Dokumenttitel dabei helfen, die richtige Seite auszuwählen. Was muss im Dokumenttitel stehen, damit das geht? Der Dokumenttitel hat zwei Bestandteile. Der erste Bestandteil sagt einem, worum es auf der Seite geht. Er ist normalerweise für alle Dokumente eines Webangebotes unterschiedlich. Denn man braucht ihn, um unterschiedliche Seiten des selben Webangebotes zu unterscheiden. Der zweite Bestandteil sagt, zu welchem Webangebot die Seite gehört. Er ist normalerweise für alle Dokumente eines Webangebots gleich, man braucht ihn, um die Seite von thematisch ähnlichen Seiten anderer Webangebote zu unterscheiden. Bei der Hauptüberschrift geht es dagegen eher um die interne Strukturierung der Seite. Von außen sehe ich die Hauptüberschrift nicht, sie wird mir erst gezeigt, wenn ich die Seite ausgewählt und geöffnet habe. Die Hauptüberschrift sagt mir dann noch mal das Hauptthema der Seite oder - wenn es mehrere Hauptüberschriften gibt - die zwei oder drei Hauptthemen. Da auch der Dokumenttitel das Hauptthema der Seite angeben soll, kann es also gut sein, dass die Hauptüberschrift einfach den \"individuellen\" Teil des Dokumenttitels wiederholt. Wobei man jetzt sagen kann: Wofür brauche ich dann überhaupt noch die Hauptüberschrift. Was ich über den Dokumenttitel oder über das Navigationssystem des Webangebotes ausgewählt habe, das weiß ich doch. Manche Webseiten verzichten daher auf die Hauptüberschrift und es geht direkt los mit einer Liste von \"Einstiegspunkten\", die auf die Themen der Seite verweisen. Das ist plausibel, aber man kann auch den Standpunkt vertreten, dass die Hauptüberschrift ruhig noch mal auf der Seite selbst stehen soll."
  },
  {
    "id": "9.1.3.1B",
    "title": "9.1.3.1b HTML-Strukturelemente für Listen",
    "whatChecked": "Zur Auszeichnung von Listen auf der Seite sollen HTML-Strukturelemente für Listen ( ul , ol und so weiter) genutzt werden.",
    "whyChecked": "Die Verwendung der HTML-Strukturelemente stellt sicher, dass der Aufbau einer Seite unabhängig von der Präsentation auf einer abstrakten Ebene festgelegt und zugänglich ist. Benutzer, die mit der vorgegebenen visuellen Präsentation der Elemente auf der Seite nichts anfangen können, finden sich dann trotzdem zurecht oder sie können eine eigene, besser passende Präsentation anwenden. Mögliche Anwendungen der Strukturelemente für Listen: Listen oder Listeneinträge überspringen (Screenreader-Nutzer) Listen können hierarchische Strukturen angemessen abbilden",
    "howChecked": "1. Anwendbarkeit des Prüfschritts Der Prüfschritt ist anwendbar, wenn die Seite Elemente enthält, die von ihrem Erscheinungsbild oder ihrer Funktion her Listen sind. Das ist bei informationsorientierten Seiten häufig der Fall. Da auch die missbräuchliche Verwendung der HTML-Elemente für Listen geprüft wird, ist der Prüfschritt darüber hinaus immer anwendbar, wenn die Seite Elemente enthält, die als Listen ausgezeichnet worden sind. 2. Prüfung Seite im Firefox aufrufen. Lists Bookmarklet aufrufen. Listenauszeichnungen, soweit vorhanden, werden nun dargestellt. Prüfen, ob alle Listen inklusive der Menüs mit den vorgesehenen HTML-Strukturelementen für Listen ausgezeichnet sind ( ul , ol , dl ). Prüfen, ob Listen-Markup für Elemente verwendet wird, die nicht Listen sind. 3. Hinweise Es soll nicht beurteilt werden, ob auf der Seite enthaltene Texte vielleicht besser in Listenform dargestellt werden sollten. Es soll nur geprüft werden, ob vorhandene, erkennbare Listen auch entsprechend ausgezeichnet sind. Listen erkennt man normalerweise an ihrer Darstellung auf dem Bildschirm. Sie heben sich deutlich von normalen Textabschnitten ab, oft sind sie eingerückt, meist sind den Listeneinträgen Aufzählungszeichen oder Zahlen vorangestellt. Menüs listen Auswahloptionen auf und sind deshalb von ihrer Aufgabe her immer Listen, egal wie sie gestaltet sind. Sie sollten deshalb auch als Listen ausgezeichnet werden. Definitionslisten dienen hauptsächlich zur Auszeichnung von Glossaren. Ihr Einsatz für andere gemeinhin übliche paarige Informationen, etwa Bild und Bildtext, wird akzeptiert. Es gibt einige Ausnahmen, bei denen eine Auszeichnung als Liste nicht gefordert ist: Die \"Sie-sind-hier\"-Navigation am Seitenanfang (auch breadcrumb trail oder Krümelpfad) Die horizontale Seitenauswahl (Blättermenü) am Kopf- und Fußende, etwa bei mehrseitigen Artikeln Auswahlleisten mit seriellen Einträgen, etwa alphabetische Einträge (A-Z) bei Glossaren, oder eine Auswahlleiste mit Jahreszahlen Gruppen von verschiedenartigen Links am Seitenende mit drei oder weniger Elementen (etwa: \"Copyright-Notiz\" und \"Impressum\") 4. Bewertung Erfüllt Alle Listen inklusive der Menüs sind mit den vorgesehenen HTML-Strukturelementen für Listen ausgezeichnet. Nicht voll erfüllt Menüs sind nicht mit geeigneten HTML-Strukturelementen ausgezeichnet.",
    "classification": "Einordnung des Prüfschritts nach WCAG 2.1 Guidelines Guideline 1.3 Adaptable: Create content that can be presented in different ways (for example simpler layout) without losing information or structure Guideline 2.4 Navigable: Provide ways to help users navigate, find content, and determine where they are Success criterion 1.3.1 Info and Relationships (Level A) Techniques General Techniques G115: Using semantic elements to mark up structure G140: Separating information and structure from presentation to enable different presentations HTML Techniques H48: Using ol, ul and dl for lists H97: Grouping related links using the nav element Client-side Scripting Techniques SCR28: Using an expandable and collapsible menu to bypass block of content Failures F2: Failure of Success Criterion 1.3.1 due to using changes in text presentation to convey information without using the appropriate markup or text F43: Failure of Success Criterion 1.3.1 due to using structural markup in a way that does not represent relationships in the content F92: Failure of Success Criterion 1.3.1 due to the use of role presentation on content which conveys semantic information"
  },
  {
    "id": "9.1.3.1C",
    "title": "9.1.3.1c HTML-Strukturelemente für Zitate",
    "whatChecked": "Zur Auszeichnung von Zitaten, die als eigenständige Textabschnitte gefasst sind, soll das dafür vorgesehene HTML-Strukturelement blockquote genutzt werden.",
    "whyChecked": "Die Verwendung der HTML-Strukturelemente stellt sicher, dass der Aufbau einer Seite unabhängig von der Präsentation auf einer abstrakten Ebene festgelegt und zugänglich ist. Benutzer, die mit der vorgegebenen visuellen Präsentation der Elemente auf der Seite nichts anfangen können, finden sich dann trotzdem zurecht oder sie können eine eigene, besser passende Präsentation anwenden. Mögliche Anwendungen des Strukturelements blockquote : Das Zitat überspringen, im folgenden Text weiterlesen (Tastaturbenutzer) Zitate anders hervorheben, wenn die vom Anbieter vorgesehene Hervorhebung nicht geeignet ist (zum Beispiel andere Farbe oder Stimme)",
    "howChecked": "1. Anwendbarkeit des Prüfschritts Der Prüfschritt ist anwendbar, wenn die Seite eigenständige Abschnitte enthält, die als Zitate verstanden werden können oder wenn die Seite Elemente enthält, die als Zitate ausgezeichnet worden sind. 2. Prüfung Die Seite im Firefox aufrufen. Prüfen, ob Zitate, die als eigenständige Abschnitte gefasst sind, mit dem dafür vorgesehenen HTML-Strukturelement blockquote ausgezeichnet sind. Im Firefox in über F12 die Web Developer Tools öffnen und im Bereich Inspector im Suchfeld nach blockquote suchen. Falls die Auszeichnung vorkommt, überprüfen, ob sie tatsächlich für Zitate und nicht nur für die Formatierung / Einrückung anderer Inhalte eingesetzt wird. 3. Hinweise Nicht geprüft werden soll, ob Inline-Zitate (also Zitate, die nicht als eigenständige Abschnitte gefasst sind) mit dem vorgesehenen HTML-Strukturelement q ausgezeichnet sind. In Bezug auf die Zugänglichkeit ist der Nutzen der Kennzeichnung mit q im Vergleich zur Kennzeichnung mit normalen Anführungszeichen gering. Zudem ist die Unterstützung von q in verschiedenen Browsern nicht einheitlich. 4. Bewertung Erfüllt Als eigenständige Abschnitte gefasste Zitate sind durchgängig mit blockquote ausgezeichnet. Nicht voll erfüllt Auf der Seite sind als eigenständige Abschnitte gefasste Zitate vorhanden, es ist jedoch keines mit blockquote ausgezeichnet. blockquote wird lediglich zu Formatierungszwecken eingesetzt (etwa Einrückung).",
    "classification": "Einordnung des Prüfschritts nach WCAG 2.1 Guidelines Guideline 1.3 Adaptable: Create content that can be presented in different ways (for example simpler layout) without losing information or structure Success criterion 1.3.1 Info and Relationships (Level A) Techniques General Techniques G115: Using semantic elements to mark up structure G140: Separating information and structure from presentation to enable different presentations HTML Techniques H49: Using semantic markup to mark emphasized or special text Failures F92: Failure of Success Criterion 1.3.1 due to the use of role presentation on content which conveys semantic information"
  },
  {
    "id": "9.1.3.1D",
    "title": "9.1.3.1d Inhalt gegliedert",
    "whatChecked": "Absätze sind mit geeigneten Strukturelementen ausgezeichnet, Zeilenumbrüche über doppelte br Elemente werden vermieden. Hervorhebungen in Texten sind mit strong oder em ausgezeichnet.",
    "whyChecked": "Die Unterteilung in kleinere Einheiten erleichtert die Handhabung und das Verständnis. Die Verwendung der vorgesehenen HTML-Strukturelemente stellt sicher, dass die Gliederung der Inhalte auch programmatisch ermittelbar festgelegt und zugänglich ist. So können z.B. Screenreader-Nutzende im Lesemodus die Inhalte Absatz für Absatz durchlaufen. Benutzer, die mit der vorgegebenen visuellen Präsentation der Elemente auf der Seite nichts anfangen können, finden sich dann trotzdem zurecht, oder sie können eine eigene, besser passende Präsentation anwenden. Werden Absatzumbrüche über doppelte br - Elemente geschaffen, entstehen im Lesemodus der Screenreader ggf. leere Fokuspositionen, die irritieren und das Erfassen der Inhalte verlangsamen. Die Auszeichnungen strong und em sind allgemein und nicht darstellungsbezogen (wie b , i oder eine nur mit CSS realisierte visuelle Hervorhebung).",
    "howChecked": "1. Anwendbarkeit des Prüfschritts Der Prüfschritt ist anwendbar, wenn es auf der Seite gegliederte Textinhalte mit Absätzen gibt. 2. Prüfung 2.1 Prüfung mit Bookmarklet Seite in Firefox aufrufen. Das Bookmarklet Inhalte gegliedert aufrufen. Prüfen, ob Absätze mit p oder anderer passender Semantik ausgezeichnet sind. Da die Auszeichnung von Absätzen mit div statt mit p -Elementen für Screenreader-Nutzende im Lesemodus keinen wesentlichen Nachteil mit sich bringt, kann sie in bestimmten Fällen (z. B. wenig Fließtext oder optisch kein richtiger Textabsatz) akzeptiert werden. Werden doppelte br -Elemente für Zeilenumbrüche genutzt? Prüfen, ob Hervorhebungen in Texten mit strong oder em ausgezeichnet sind. 2.2 Missbräuchliche Nutzung von typographischen Zeichen Prüfen, ob Leerzeichen ( &amp;nbsp; ) zur Formatierung von Text benutzt werden (etwa zur Schaffung von Spalten). Prüfen, ob typographische Zeichen, etwa Reihen von Bindestrichen, zur Erzeugung von Trennlinien eingesetzt werden und nicht programmatisch versteckt sind (etwa über aria-hidden=\"true\" ). 3. Hinweise Es soll nicht bewertet werden, ob die vorhandene, sichtbare Gliederung der Seite sinnvoll ist, sondern nur, ob sie mit geeigneten HTML-Elementen umgesetzt wurde. Das für Absätze vorgesehene Element ist grundsätzlich p . Dennoch ist eine Nutzung von div anstelle von p in der programmatischen Ausgabe, etwa durch Screenreader, in der Regel nicht mit Nachteilen verbunden. Die Nutzung von div anstelle von p für Textabsätze sollte deshalb in der Regel nicht zu einer Bewertung des Prüfschritts mit \"teilweise erfüllt\" oder schlechter führen. Die Verwendung von HTML-Strukturelementen für Tabellen, Überschriften, Listen und Zitate ist bereits durch andere Prüfkriterien abgedeckt und wird dort bewertet. Die Inhalte von iframes werden ebenso überprüft wie andere Seiteninhalte. Dazu muss unter Umständen der iframe in einem neuen Fenster geladen werden. Textinhalte mittels CSS-Attribut content werden heute in der Regel von Screenreadern ausgegeben und stellen deshalb meist keine praktische Barriere dar. Der Einsatz von CSS content sollte deshalb nicht zu einer Bewertung als \"teilweise erfüllt\" oder schlechter führen. Im Sinne einer konsequenten Trennung von Semantik und optischer Darstellung (HTML / CSS) ist die Einbringung von Textinhalten über CSS dennoch nicht empfehlenswert, denn in manchen Nutzungsszenarien (eigene Stylesheets, Darstellung ohne CSS) können Inhalte fehlen. 4. Bewertung Erfüllt Textabsätze sind mit geeigneten Absatz-Elementen ausgezeichnet. Auf Umbrüche von Textabsätzen über dppelte br Elemente wird verzichtet. Für semantische Hervorhebungen im Text wird strong oder em verwendet. Nicht voll erfüllt Textabsätze sind nicht mit geeigneten Absatz-Elementen ausgezeichnet. Zur Schaffung von Textabsätzen werden anstelle von Absatz-Elementen doppelte Zeilenumbrüche ( br ) verwendet. Leerzeichen ( &amp;nbsp; ) werden zur Schaffung von Spalten eingesetzt.",
    "classification": "Abgrenzung zu anderen Prüfschritten Andere auf Strukturierung bezogenen Prüfkriterien sind: Prüfschritt 9.1.3.1a \"HTML-Strukturelemente für Überschriften\" Prüfschritt 9.1.3.1b \"HTML-Strukturelemente für Listen\" Prüfschritt 9.1.3.1c \"HTML-Strukturelemente für Zitate\" Prüfschritt 9.1.3.1e \"Datentabellen richtig aufgebaut\" Die Textalternative für Font-Icons wird im Prüfschritt 9.1.1.1a \"Alternativtexte für Bedienelemente\" und 9.1.1.1b \"Alternativtexte für Grafiken und Objekte\" geprüft. Einordnung des Prüfschritts nach WCAG 2.1 Guideline Guideline 1.3 Adaptable: Create content that can be presented in different ways (for example simpler layout) without losing information or structure Success criterion 1.3.1 Info and Relationships (Level A) Techniques General Techniques G115: Using semantic elements to mark up structure G140: Separating information and structure from presentation to enable different presentations HTML Techniques H49: Using semantic markup to mark emphasized or special text Failures F2: Failure of Success Criterion 1.3.1 due to using changes in text presentation to convey information without using the appropriate markup or text F33: Failure of Success Criterion 1.3.1 and 1.3.2 due to using white space characters to create multiple columns in plain text content F43: Failure of Success Criterion 1.3.1 due to using structural markup in a way that does not represent relationships in the content F48: Failure of Success Criterion 1.3.1 due to using the pre element to markup tabular information F87: Failure of Success Criterion 1.3.1 due to inserting non-decorative content by using :before and :after pseudo-elements and the 'content' property in CSS F92: Failure of Success Criterion 1.3.1 due to the use of role presentation on content which conveys semantic information"
  },
  {
    "id": "9.1.3.1E",
    "title": "9.1.3.1e Datentabellen richtig aufgebaut",
    "whatChecked": "Datentabellen sind strukturell richtig aufgebaut, Zeilen- und Spaltenüberschriften sind mit th oder den entsprechenden ARIA-Rollen ausgezeichnet.",
    "whyChecked": "Visuell orientierte Personen nutzen für die Orientierung in einer Datentabelle neben den Überschriften, wenn nötig, auch den Wertebereich. Es ist für sie daher relativ leicht möglich, strukturelle Mängel, zum Beispiel Wechsel in der Bedeutung von Zeilen oder Spalten zu erkennen und mit ihnen umzugehen. Sehbehinderte und blinde Nutzende erschließen sich das Angebot von Datentabellen dagegen eher analytisch. Sie entwickeln ausgehend von den Überschriften und anderen im Kontext verfügbaren Informationen eine Vorstellung vom Aufbau der Tabelle. Diese Vorstellung ist die Grundlage für den Zugriff auf die angebotenen Daten. Damit das möglich ist und funktioniert, müssen zwei Bedingungen erfüllt sein: Die Tabelle muss eine klare Struktur haben, die Bedeutung der Zeilen und Spalten muss fassbar sein und sie muss möglichst gut den Überschriften oder unterstützenden Kontextinformationen zu entnehmen sein. Die Überschriften müssen auffindbar sein und es muss klar sein, auf welche Daten sie sich beziehen, sie müssen also korrekt ausgezeichnet sein. Die klare Struktur ist die Grundlage der Barrierefreiheit von Datentabellen. Es ist nicht möglich, eine mangelhaft strukturierte Datentabelle durch spezielle Auszeichnung barrierefrei zugänglich zu machen. Auf Grundlage einer klaren, nachvollziehbaren Struktur ist die korrekte Auszeichnung aber nützlich und wichtig. Mögliche Anwendungen der Auszeichnung von Tabellenüberschriften: Der Screenreader informiert über die Position und Anzahl der Überschriftenreihen. Der Screenreader liest die (neue) Zeilen- oder Spaltenüberschrift vor, wenn Nutzende die Tabellenzeile oder die Tabellenspalte wechselt. Überschriften werden in einer für Nutzende besser geeigneten Form hervorgehoben.",
    "howChecked": "1. Anwendbarkeit des Prüfschritts Der Prüfschritt ist immer anwendbar, wenn native oder über ARIA-Rollen ausgezeichnete Datentabellen auf der Seite vorhanden sind. Er ist ebenso anwendbar, wenn Inhalte visuell als Datentabelle strukturiert sind. 2. Prüfung 2.1 Tabellen für tabellarische Daten verwendet? Prüfen, ob für tabellarische Daten table oder eine korrekte und vollständige Umsetzung mittels geeigneter ARIA-Rollen wie role=\"table\" , role=\"row\" , role =\"columnheader\" und role=\"rowheader\" genutzt wird. 2.2 Prüfung des Aufbaus von Tabellen: Prüfen, ob die Tabelle bzw. das ARIA-Konstrukt strukturell sinnvoll aufgebaut ist. Schwierigkeiten entstehen oft dadurch, dass die Tabelle auch Layoutzwecken dient, das Tabellengitter also für die Anordnung von Inhalten auf dem Bildschirm genutzt wird. Problematisch können zum Beispiel sein: Eine Spalte mit Daten ist vor der Überschriftenspalte platziert Wechsel der Bedeutung von Zeilen oder Spalten (\"ab hier …​\") Zellen mit Erläuterungen sind in die Tabelle integriert Leere Zeilen werden eingefügt, um die Höhe oder den Abstand von Zeilen festzulegen Verschachtelungen (weitere Tabelle innerhalb einer Tabellenzelle) Woran erkennt man, dass eine Datentabelle sinnvoll aufgebaut ist? Bei einer sinnvoll aufgebauten Tabelle kann man sagen, welche Informationen in den einzelnen Spalten und Zeilen der Tabelle enthalten sind. Man kann diesen Inhalt allgemein fassen, nicht nur als eine Zusammenstellung der in den einzelnen Zellen abgelegten Werte. Die Bedeutung der einzelnen Spalten und Zeilen kann in den Überschriften gefasst sein. Das ist aber nicht zwangsläufig so, auch eine Tabelle ohne Überschriften kann sinnvoll strukturiert sein. Wenn aussagekräftige Überschriften vorhanden sind, sollte man auch prüfen, ob das, was in den zugeordneten Zellen steht, den Überschriften entspricht. Nichtssagende Überschriften können darauf hinweisen, dass die betreffende Zeile oder Spalte keine allgemein fassbare Bedeutung hat, also eher dem Layout dient. Auch komplexe Tabellen sind aus einfachen Spalten und Zeilen zusammengesetzt, die Anforderungen sind soweit die selben. Hinzu kommt allerdings, dass benachbarte Zeilen oder Spalten durch übergreifende Überschriften zusammengefasst sind. Auch den Inhalt dieser zusammengefassten Bereiche muss man allgemein fassen können, wie den Inhalt der einzelnen Spalten und Zeilen. Wie kann man (ohne Screenreader) prüfen, ob eine Datentabelle richtig aufgebaut ist? Man nimmt eine beliebige Zelle und liest sie zusammen mit den zugehörigen Spalten- und Zeilenüberschriften: \"[Überschrift(en) der Spalte] - [Überschrift(en) der Zeile]: [Inhalt der Zelle]\" Ist die Bedeutung der Zelle so verständlich? Gezielt untersucht werden sollen Auffälligkeiten: Ist irgendwo andersartiger Inhalt vorhanden, sind Zellen hervorgehoben? Man prüft, ob auch in diesen Bereichen alle Zellen in gleicher Weise, unabhängig von ihren Nachbarzellen, nur zusammen mit den beiden Überschriften benutzbar sind. Ist das der Fall, Dann ist die Tabelle richtig aufgebaut und (bei richtiger Auszeichnung) auch per Screenreader benutzbar. 2.3 Prüfung der Auszeichnung von nativen Tabellen: Seite im Chrome- oder Firefox-Browser laden. Das Tables bookmarklet aufrufen. Tabellen-Auszeichnungen werden jetzt angezeigt. Prüfen, ob alle Spalten- und Zeilenüberschriften korrekt mit th ausgezeichnet sind. Das summary -Attribut ist in HTML5 für die Beschreibung von Tabellen nicht mehr erlaubt. Falls in HTML5-Dokumenten eine Beschreibung der Tabelle bereitgestellt wird, sollte diese auf anderem Wege umgesetzt werden, wie z. B. innerhalb von caption , mit Hilfe von aria-describedby oder figure und figcaption . Die Mindestanforderung: Offenkundige, unverzichtbare und visuell hervorgehobene Überschriften müssen ausgezeichnet sein (siehe Hinweis 3.2 Woran erkennt man Zeilenüberschriften? ). 2.4 Prüfung von mit ARIA umgesetzten Tabellen Prüfen, ob Inhalte, die sichtbar als Datentabelle umgesetzt sind, aber kein natives Tabellen-Markup nutzen, korrekt mit den entsprechenden ARIA-Rollen ( role=\"table\" , role=\"row\" , role =\"columnheader\" und role=\"rowheader\" ) ausgezeichnet sind. Vergleiche dazu das APG Table pattern . 3. Hinweise 3.1 Auszeichnung von zweideutigen Zellen Die Auszeichnung von Zellen, die zugleich Überschriften und Daten enthalten, mit td und dem scope -Attribut ist in HTML5 nicht mehr erlaubt. 3.2 Woran erkennt man Zeilenüberschriften? Die visuelle Hervorhebung ist ein Erkennungsmerkmal für Überschriften. Wenn die erste Spalte einer Datentabelle visuell hervorgehoben ist, dann kann man davon ausgehen, dass die Inhalte dieser Spalte als Überschriften dienen sollen. Dieser Zusammenhang lässt sich aber nicht umkehren, die visuelle Hervorhebung ist als Kriterium nicht immer ausreichend. Denn auf die Hervorhebung der Zeilenüberschriften wird manchmal aus Gestaltungsgründen verzichtet. Sehende Nutzende brauchen sie nicht unbedingt. Wenn der Inhalt einer Datenzelle nicht für sich aussagekräftig ist, beziehen sie die Zellen am linken Rand der Tabelle ein, die Position reicht ihnen als Hervorhebung. Es ist manchmal schwierig, den Fall, dass auf die visuelle Hervorhebung aus gestalterischen Gründen verzichtet worden ist, abzugrenzen von dem Fall, dass die Inhalte der ersten Spalte tatsächlich als Überschriften nicht geeignet sind. Selbst wenn in der ersten Spalte zum Beispiel Namen von Herstellern oder Produkten stehen, ist das noch kein sicherer Anhaltspunkt für die Eignung als Überschrift. Denn Überschriften sollten eindeutig und geläufig sein, Herstellernamen sind nicht immer eindeutig, Produktnamen oft nicht geläufig. Entwicklerinnen und Entwickler sowie Teams in Web-Redaktionen sollten also überlegen, ob die Inhalte der ersten Spalte als Überschriften tauglich sind, ob es Sinn macht, dass ein Screenreader bei Zeilenwechseln immer den jeweiligen Inhalt der ersten Spalte zusammen mit der gerade angesteuerten Datenzelle vorliest. Wenn das der Fall ist, sollten die Zellen der ersten Spalte unbedingt als Überschriften ausgezeichnet werden. Für die Prüfung gilt: Zellen, die keine Daten enthalten, also nur als Überschriften dienen können , müssen entsprechend ausgezeichnet werden (Beispiel dafür: in der Randspalte steht \"Länge\", Breite\", \"Gewicht\" und so weiter). Muss beim Zugriff auf Daten auf den Inhalt der Zeile oder Spalte Bezug genommen werden, ist es ohne Berücksichtigung der Randspalte nicht möglich, wenigstens einen Teil der unterschiedlichen Werte einer anderen Spalte zu interpretieren. Dann enthält die Randspalte Überschriften, sie muss entsprechend ausgezeichnet werden (Beispiel: im Wertebereich der Tabelle finden sich ausschließlich Preisangaben). Die Randspalte kann abweichend von der visuellen Darstellung als Überschrift ausgezeichnet werden, wenn es Sinn macht, beim Vergleich von Werten anderer Spalten auf sie Bezug zu nehmen (Beispiel: Tabelle mit Produkten, Anbieter und Modellbezeichnung sind als Überschriften ähnlich brauchbar). Ansonsten ist das Kriterium für die Auszeichnung aber nur die visuelle Hervorhebung. Zeilenüberschriften müssen ausgezeichnet sein, wenn sie visuell hervorgehoben sind. Auch wenn die Randspalte möglicherweise aus einem anderen Grund hervorgehoben ist und für die vergleichende Fassung mit den Daten in anderen Spalten eher nicht nützlich ist, soll die Auszeichnung nicht von der Darstellung auf dem Bildschirm abweichen. Gegebenenfalls muss in diesem Fall die Darstellung für den Bildschirm angepasst werden (Beispiel dafür: in der ersten Spalte einer Tabelle mit Produkten wird die Bestellnummer angezeigt). Auch bei Spaltenüberschriften kann auf die visuelle Hervorhebung verzichtet werden. Die vorstehenden Regeln sind dann in der gleichen Weise auf sie anzuwenden. 3.3 Eingesparte Überschriften Überschriften sind überflüssig, wenn in den Zellen neben den Einzelwerten auch deren Bedeutung angegeben ist oder wenn die Bedeutung der Einzelwerte sich von selbst versteht. Ein typisches Beispiel dafür sind Preislisten: in der linken Spalte stehen die meist selbsterklärenden Produktbezeichnungen, in der rechten Spalte steht nicht nur der Betrag, sondern auch das Währungszeichen. Für blinde und sehbehinderte Nutzende kann der Umgang mit solchen Tabellen schwierig sein. Denn mangels Überschriften müssen sie auf den Wertebereich zugreifen, um zu verstehen, was die Tabelle anbietet. Für normal sehende Nutzende ist das leicht, für Nutzende, die sich immer nur einen kleinen Ausschnitt der Tabelle vorlesen oder anzeigen lassen können, aber nicht. Unproblematisch ist der Verzicht auf Überschriften, wenn zwei Bedingungen erfüllt sind: Der Aufbau der Tabelle ist der ersten Zeile zu entnehmen. Die Tabelle listet Daten auf, die zusammen gehören und eine feste Reihenfolge haben. Sie wird also normalerweise linear genutzt, wie ein Buch. Tabellen mit eingesparten Überschriften erfüllen also den Prüfschritt, wenn sie richtig aufgebaut und linear nutzbar sind. 4. Bewertung Nicht voll erfüllt Für tabellarische Daten wird nicht table (oder role=\"table\" ) verwendet, sondern lediglich positionierte div -, span - oder p -Elemente. Spalten- und Zeilenüberschriften sind nicht korrekt mit th (oder entsprechenden ARIA-Rollen) ausgezeichnet.",
    "sources": "W3C Web Accessibility Initiative: Tables Tutorial ARIA Authoring Practices Guide (APG): Table pattern (W3C) Synthetic tables built with ARIA (Birkir Gunnarsson, codepen). Beispiel einer mittels ARIA semantisch korrekt umgesetzten Tabelle. A Responsive Accessible Table (Adrian Roselli, 2017) Table with Expando Rows . (Adrian Roselli, 2019). The article offers an implementation solution for a common pattern where rows are hidden until the user opts to show them.",
    "classification": "Einordnung des Prüfschritts nach WCAG 2.1 Guideline Guideline 1.3 Adaptable: Create content that can be presented in different ways (for example simpler layout) without losing information or structure Success criterion 1.3.1 Info and Relationships (Level A) Techniques General Techniques G115: Using semantic elements to mark up structure G140: Separating information and structure from presentation to enable different presentations HTML Techniques H51: Using table markup to present tabular information H73: Using the summary attribute of the table element to give an overview of data tables Failures F33: Failure of Success Criterion 1.3.1 and 1.3.2 due to using white space characters to create multiple columns in plain text content F34: Failure of Success Criterion 1.3.1 and 1.3.2 due to using white space characters to format tables in plain text content F48: Failure of Success Criterion 1.3.1 due to using the pre element to markup tabular information F91: Failure of Success Criterion 1.3.1 for not correctly marking up table headers F92: Failure of Success Criterion 1.3.1 due to the use of role presentation on content which conveys semantic information",
    "questions": "Warum müssen die Tabellenheader extra ausgezeichnet werden? Kann der Screenreader nicht einfach automatisch die erste Zeile und die linke Spalte als Überschriften behandeln? Wird das nicht auch faktisch so gemacht? Beides ist richtig: Screenreader brauchen die Auszeichnung nicht zwingend, um Spalten- und Zeilenüberschriften vorzulesen - und gängige Screenreader verhalten sich auch genau so: Wenn der Benutzer in eine andere Spalte wechselt, liest zum Beispiel der Screenreader Jaws den Text vor, der in der obersten Zelle dieser Spalte steht, auch wenn diese Zelle nicht als th -Element ausgezeichnet ist. Ebenso beim Wechsel in eine andere Zeile: Der Inhalt der ersten Zelle wird unabhängig von der Auszeichnung immer vorgelesen (zumindest dann, wenn Datenzellen nicht ausdrücklich via &gt;headers und id mit bestimmten Überschriftenzellen verknüpft sind). Warum ist das so? Das beschriebene Verhalten der Screenreader ist bei einfachen Tabellen meistens richtig. Und es gibt natürlich im Web sehr viele Tabellen, bei denen die Überschriften nicht ausgezeichnet sind. Insgesamt werden Nutzende daher am besten bedient, wenn der Screenreader die Zellen der ersten Zeile und der ersten Spalte grundsätzlich wie Überschriftenzellen behandelt. Was folgt daraus? Kann man sich bei einfachen Tabellen den Aufwand für die Auszeichnung von Tabellenüberschriften dann nicht sparen? Zunächst mal: Der Aufwand für die Auszeichnung der Zellen ist in der Regel nicht erheblich. Jedenfalls bei einfachen Tabellen: Es gibt entsprechende Vorlagen oder das CMS kümmert sich darum. Die eigentliche Herausforderung liegt woanders: Man muss dafür sorgen, dass die Tabellen einfach sind , dass die Inhalte der ersten Zeile und Spalte tatsächlich als Überschriften funktionieren und dass alle strukturierenden Inhalte dort untergebracht sind. Und klar ist: nicht jedes Hilfsmittel muß in der beschriebenen Art und Weise mit Tabellen umgehen. Der IBM Homepagereader liest nur ausgezeichnete Überschriften vor, wie künftige Jaws-Versionen funktionieren, kann auch niemand sagen. Oder allgemein gesagt: Die praktische Nutzbarkeit mit gängigen Screenreadern oder Browsern kann nicht der alleinige Maßstab für Barrierefreiheit und BITV-Konformität sein. Denn dann würde es immer bei dem unbefriedigenden Zustand bleiben, dass Screenreader versuchen müssen, aus barrierebehafteten Webangeboten irgend etwas brauchbares herauszuholen. Auf längere Sicht ist es auch wichtig, dass sich Verantwortliche Personen von Webangeboten und Entwicklende von Screenreadern oder Browsern an gemeinsame Standards halten. Der Aufbau von Datentabellen kann unter Umständen nicht einfach verändert werden, wie kann die Barrierefreiheit trotzdem sichergestellt werden? Zwei Fälle sind da zu unterscheiden: Der Aufbau der Tabelle gehört zum Inhalt. Das Dokument ist zum Beispiel historisch, es zeigt, wie die alten Ägypter ihre Erntedaten tabellarisch geordnet haben. In diesem Fall muss geklärt werden, ob die Tabelle nur betrachtet oder auch genutzt werden soll. Wenn sie nur betrachtet werden soll, ist der lineare Zugriff ausreichend. Wenn sie auch genutzt werden soll, wenn sie also zum Beispiel auch über fette und magere Erntejahre Auskunft geben soll, ist die historische Form ungeeignet. Ein anderes Dokument muss dafür erstellt werden. Der häufigere und wichtigere Fall: eine andere Abteilung liefert die mangelhaft aufgebauten Tabellen, in der EDV sollen sie durch unsichtbare Zusätze nachträglich barrierefrei gemacht werden. In diesem Fall muss der Ablauf geändert werden, denn die mangelhafte Struktur kann nicht durch Auszeichnungen repariert werden, die Aufgabe ist nicht erfüllbar. Die Verantwortlichen müssen dafür sorgen, dass die Anforderungen der Barrierefreiheit an der richtigen Stelle, also schon bei der Erstellung der Tabellen beachtet werden."
  },
  {
    "id": "9.1.3.1F",
    "title": "9.1.3.1f Zuordnung von Tabellenzellen",
    "whatChecked": "In komplexen Datentabellen soll der Bezug von Überschriften und Inhalten (über scope oder über id und headers ) definiert sein, ausdrückliche Zuordnungen von Überschriften und Inhalten in einfachen Datentabellen sollen korrekt sein.",
    "whyChecked": "Bei komplexen Tabellen können Screenreader aus dem Tabellengerüst allein nicht schließen, welche Bezüge es zwischen Daten- und Überschriftenzellen gibt. Deshalb müssen diese Verknüpfungen mithilfe der in HTML zur Verfügung stehenden Attribute ausdrücklich definiert werden. In der Praxis sind manchmal auch einfache Datentabellen mit headers - und id -Attributen ausgezeichnet. Screenreader richten sich dann nicht nach allgemeinen Regeln, sondern nach der vorliegenden Auszeichnung. Deshalb muss die Auszeichnung auch dann richtig sein, wenn sie eigentlich nicht nötig wäre. Denn bei falscher direkter Zuordnung von Datenzellen werden die Überschriften nicht oder fehlerhaft ausgegeben. Hinweis: Für Benutzer von Screenreadern sind komplexe Tabellen schwerer zu erfassen als einfache, selbst bei perfekter Auszeichnung. Zu empfehlen ist also die Vermeidung von Tabellen mit mehreren logischen Ebenen (siehe Was sind Tabellen mit mehreren logischen Ebenen? ). In vielen Fällen können komplexe Tabellen geteilt und durch mehrere einfache Tabellen ersetzt werden. Die beste Bewertung für diesen Prüfschritt ist deshalb immer \"nicht anwendbar\".",
    "howChecked": "1. Anwendbarkeit des Prüfschritts Der Prüfschritt ist anwendbar, wenn eine Datentabelle komplex ist, also mehrstufige Zeilen- oder Spaltenüberschriften vorhanden sind oder wenn in einer einfachen Datentabelle Zellen ausdrücklich (per headers und id ) bestimmten Überschriften zugeordnet sind (auch wenn diese Zuordnung eigentlich nicht erforderlich wäre). Einfache Datentabellen haben im Unterschied zu komplexen Datentabellen nur jeweils eine Zeile oder Spalte für Überschriften. Bei solchen Tabellen ist es eigentlich nicht erforderlich, die Zellen \"ihren\" Überschriften zuzuordnen. 2. Prüfung Seite im Firefox laden. Das Tables bookmarklet aufrufen. Tabellen-Auszeichnungen werden jetzt angezeigt. Prüfen, ob der Geltungsbereich der Überschriften korrekt über das scope -Attribut definiert ist oder die einzelnen Zellen mithilfe von headers - und id -Attributen korrekt ihren Überschriften zugeordnet sind. 3. Hinweis Grundlage der Prüfung ist die vorangegangene Überprüfung des Aufbaus der Datentabelle und der Auszeichnung von Überschriften in Prüfschritt 9.1.3.1e \"Datentabellen richtig aufgebaut\". Dieser Prüfschritt 9.1.3.1f beschränkt sich auf die Vollständigkeit und die formale Korrektheit der Zuordnung von Inhalten zu Überschriften.",
    "sources": "Was sind Tabellen mit mehreren logischen Ebenen? (…) the average table of data with a row of headers across the top, and a column of headers down one side or the other (or sometimes the same headers reproduced at either side, to make life easier) has only one logical level of headers. Tables with two or more levels are those where the row of headers \"closest to the content\" itself has headersA trivial example would be months, which have season headers (…) ( http://lists.w3.org/Archives/Public/wai-wcag-editor/2000OctDec/0155.html ) Technique H63: Using the scope attribute to associate header cells and data cells in data tables \"At the current time, those who want to ensure consistent support across Assistive Technologies for tables where the headers are not in the first row/column may want to use the technique for complex tables H43: Using id and headers attributes to associate data cells with header cells in data tables. For simple tables that have headers in the first column or row we recommend the use of the th and td elements.\" ( https://www.w3.org/WAI/WCAG21/Techniques/html/H63.html ) Technique H43: Using id and headers attributes to associate data cells with header cells in data tables \"The objective of this technique is to associate each data cell (in a data table) with the appropriate headers. This technique adds a headers attribute to each data cell (td element)It also adds an id attribute to any cell used as a header for other cells. The headers attribute of a cell contains a list of the id attributes of the associated header cells. If there is more than one id, they are separated by spaces. This technique is used when data cells are associated with more than one row and/or one column header. This allows screen readers to speak the headers associated with each data cell when the relationships are too complex to be identified using the th element alone or the th element with the scope attribute. Using this technique also makes these complex relationships perceivable when the presentation format changes. This technique is not recommended for layout tables since its use implies a relationship between cells that is not meaningful when tables are used for layout.\" ( https://www.w3.org/WAI/WCAG21/Techniques/html/H43.html ) Weiterführende Links: pro-barrierefreiheit: Strukturierung von Tabelleninhalten Roger Hudson, Web Usability: Accessible Data Tables",
    "classification": "Einordnung des Prüfschritts nach WCAG 2.1 Guideline Guideline 1.3 Adaptable: Create content that can be presented in different ways (for example simpler layout) without losing information or structure Success criterion 1.3.1 Info and Relationships (Level A) Techniques General Techniques G115: Using semantic elements to mark up structure G140: Separating information and structure from presentation to enable different presentations HTML Techniques H43 Using id and headers attributes to associate data cells with header cells in data tables H63 Using the scope attribute to associate header cells and data cells in data tables Failures F90: Failure of Success Criterion 1.3.1 for incorrectly associating table headers and content via the headers and id attributes F92: Failure of Success Criterion 1.3.1 due to the use of role presentation on content which conveys semantic information"
  },
  {
    "id": "9.1.3.1G",
    "title": "9.1.3.1g Kein Strukturmarkup für Layouttabellen",
    "whatChecked": "Tabellenstruktur-Mark-up soll nicht für Layouttabellen verwendet werden.",
    "howChecked": "1. Anwendbarkeit des Prüfschritts Der Prüfschritt ist anwendbar, wenn die Seite Tabellen für das Layout verwendet. 2. Prüfung Seite im Firefox aufrufen. Das Tables bookmarklet aufrufen. Tabellen-Auszeichnungen werden jetzt angezeigt. Prüfen, ob strukturelle Auszeichnungen ( th , caption , summary , headers , id ) in Layouttabellen vermieden werden. 3. Hinweis Auch wenn Tabellen mit role=\"presentation\" bzw. role=\"none\" ausgezeichnet sind, sollten semantische Elemente nicht benutzt werden. 4. Bewertung Nicht erfüllt In Layouttabellen werden die Elemente th oder caption oder die Attribute summary , headers oder id verwendet.",
    "sources": "F46: Failure of Success Criterion 1.3.1 due to using th elements, caption elements, or non-empty summary attributes in layout tables Although WCAG 2.1 does not prohibit the use of layout tables, CSS-based layouts are recommended in order to retain the defined semantic meaning of the HTML table elements and to conform to the coding practice of separating presentation from content. When a table is used for layout purposes the th element should not be used. Since the table is not presenting data there is no need to mark any cells as column or row headers. Likewise, there is no need for an additional description of a table which is only used to layout content. Do not include a summary attribute and do not use the summary attribute to describe the table as, for instance, \"layout table\"When spoken, this information does not provide value and will only distract users navigating the content via a screen reader. Empty summary attributes are acceptable on layout tables, but not recommended. ( https://www.w3.org/WAI/WCAG21/Techniques/failures/F46.html )",
    "classification": "Einordnung des Prüfschritts nach WCAG 2.1 Guideline Guideline 1.3 Adaptable: Create content that can be presented in different ways (for example simpler layout) without losing information or structure Success criterion 1.3.1 Info and Relationships (Level A) Techniques General Techniques https://www.w3.org/WAI/WCAG21/Techniques/general/G115.html [ G115: Using semantic elements to mark up structure G140: Separating information and structure from presentation to enable different presentations HTML Techniques H39 Using caption elements to associate data table captions with data tables H73 Using the summary attribute of the table element Failures F46 Failure of Success Criterion 1.3.1 due to using th elements, caption elements, or non-empty summary attributes in layout tables"
  },
  {
    "id": "9.1.3.1H",
    "title": "9.1.3.1h Beschriftung von Formularelementen programmatisch ermittelbar",
    "whatChecked": "Beschriftungen sollen über Markup mit den Formularelementen, die sie beschriften, verknüpft sein. Bei label -Elementen geschieht das über das for -Attribut oder den Einschluss des beschrifteten Formularelements in das label -Element. Sind Beschriftungen nicht mit dem label -Element ausgezeichnet, soll eine Beschriftung des zugehörigen Formularelements auf anderem Weg (etwa über das aria-labelledby -Attribut) sichergestellt sein. Ist bei Gruppen von Formularelementen eine Gruppenbeschriftung für das Verständnis der Beschriftung der einzelnen Formularelemente nötig, sollte die Verfügbarkeit sichergestellt werden (z. B. mit Hilfe von fieldset mit legend ). Visuell voneinander abgesetzte oder logisch miteinander verbundene Gruppen von Formularelementen sollten mit fieldset oder mithilfe von Überschriften sinnvoll strukturiert sein.",
    "whyChecked": "Die Verknüpfung von Beschriftungen mit den zugeordneten Eingabefeldern stellt sicher, dass der Aufbau einer Seite unabhängig von der Präsentation festgelegt und zugänglich ist: Der Screenreader liest die Beschriftungen vor, wenn der Benutzer durch die Formularelemente wandert. Ein Vorteil der Nutzung nativer label -Elemente: Mausnutzer können durch einen Klick auf das Label den Fokus auf das zugeordnete Formularelement setzen.",
    "howChecked": "1. Anwendbarkeit des Prüfschritts Der Prüfschritt ist anwendbar, wenn die Seite Formularelemente enthält. 2. Prüfung 2.1 Sind Beschriftungen und Formular-Elemente verknüpft? Mit der Maus auf die Beschriftung von Formular-Elementen klicken und prüfen, ob der Cursor dadurch auf das Formular-Element gesetzt wird. Ist das nicht der Fall, prüfen, ob Beschriftung und Formular-Element mit aria-labelledby verknüpft sind oder ein Name für das Formular-Element auf andere Weise programmatisch bereitgestellt wird 2.2 Prüfung von Gruppen von Formular-Elementen Prüfen, ob visuell voneinander abgesetzte oder logisch miteinander verbundene Gruppen von Formular-Elementen mithilfe fieldset oder Überschriften sinnvoll strukturiert sind. Falls eine Gruppenbeschriftung für das Verständnis der Beschriftung der einzelnen Formularelemente nötig sind, prüfen, ob die Gruppenbeschriftung mit dem legend -Element eines fieldset oder über eine ausreichend unterstützte Alternative (etwa role=\"group\" ) ausgezeichnet ist. 2.3 Gliederung von Auswahllisten Wenn Auswahllisten ( select ) voneinander abgesetzte Gruppen von Optionen enthalten, sind diese mit optgroup ausgezeichnet (mit der Web Developer Toolbar Informationen &gt; Elementinformationen einblenden &gt; Kindelemente überprüfen) 3. Hinweise 3.1 Ergänzende Beschriftungen (etwa über fieldset / legend ) Auch wenn die Beschriftungen (Labels) der Formularelemente korrekt ausgezeichnet sind, kann es sein, dass diese für sich genommen nicht ausreichen und z. B. eine gemeinsame Überschrift ( legend -Element eines fieldset ) für das Verständnis notwendig ist - etwa bei Radio-Inputs mit den Labels \"Ja\" / \"Nein\" oder bei Adressen, bei denen es unklar ist, ob es sich um eine Rechnungs- oder eine Versandadresse handelt. 3.2 Kombinierte Formular-Elemente (etwa bei Datumseingabe) Bei kombinierten Formular-Elementen hat nicht immer jedes Element eine zugeordnete Beschriftung. In diesem Fall sollen Elemente mit einem erklärenden title -Attribut versehen werden. Beispiel: In einem Formular werden für die Eingabe eines Datums drei Auswahllisten angeboten (Tag, Monat und Jahr). Die drei Auswahllisten haben eine gemeinsame Beschriftung: Datum. Die Auswahllisten für Tag, Monat und Jahr sind mit einem erklärenden title -Attribut versehen. Alternativ kann in diesem Fall die Beschriftung auch mit Hilfe von aria-label oder aria-labelledby zur Verfügung gestellt werden. 3.3 Suchfeld mit nachfolgendem Button bzw. Input Wenn ein einfaches Suchformular nur aus einem Eingabefeld und einem Button besteht, ist oftmals keine sichtbare Beschriftung notwendig. Hier ist es ausreichend, wenn Eingabefeld und Button sichtbar nebeneinander (und im Quellcode nacheinander) positioniert sind, das Eingabefeld eine Textvorbelegung hat oder die Beschriftung des Buttons die Funktion eindeutig kennzeichnet (etwa \"Suchen\" oder Lupen-Icon mit aussagekräftigem Alternativtext). Das unbeschriftete Eingabefeld mit Textvorbelegung muss in solchen Fällen entweder ein aussagekräftiges title -Attribut, ein verknüpftes verstecktes Label oder ein aria-label -Attribut haben, da für Screenreader-Nutzer der nachfolgende Button nicht gleichermaßen als Beschriftung taugt. 3.4 Zusätzliche Beschriftungen Sichtbare zusätzliche erklärende Beschriftungen sollten über aria-describedby mit betreffenden Formular-Elementen verknüpft sein. 4. Bewertung Nicht erfüllt Beschriftungen sind nicht korrekt mit den dazugehörigen Eingabefeldern verknüpft und ein zugänglicher Name ist auch auf andere Weise (etwa über aria-label oder title ) nicht programmatisch ermittelbar. Nicht voll erfüllt Zur Unterscheidung notwendige Gruppenbeschriftungen sind vorhanden, aber nicht programmatisch ermittelbar (etwa über fieldset / legend oder role=\"group\" mit Verknüpfung der Gruppenüberschrift über aria-labelledby ). Zum Verständnis wichtige zusätzliche Beschriftungen sind nicht programmatisch ermittelbar (etwa durch Verknüpfung über aria-describedby ). Hierarchische Auswahllisten sind mit Dummy-Einträgen oder Einrückung durch Leerzeichen oder Bindestriche gegliedert statt mit optgroup .",
    "sources": "W3C Web Accessibility Tutorials: Forms Labeling Controls Grouping Controls",
    "classification": "Abgrenzung zu anderen Prüfschritten Ob die Beschriftungen von Formular-Elementen (auch bei Nutzung von Gruppenüberschriften als Ergänzung der unmittelbaren Beschriftungen) hinreichend aussagekräftig sind, wird in Prüfschritt 9.2.4.6 \"Aussagekräftige Überschriften und Beschriftungen\" geprüft. Hier geht es um die programmatische Ermittelbarkeit. Ob die sichtbare Beschriftung überhaupt vorhanden ist, wird in Prüfschritt 9.3.3.2 \"Beschriftungen von Formularelementen vorhanden\" geprüft. Ob die sichtbare Beschriftung im zugänglichen Namen des Formularelements vorkommt, wird in Prüfschritt 9.2.5.3 \"Sichtbare Beschriftung Teil des zugänglichen Namens\" geprüft. Einordnung des Prüfschritts nach WCAG 2.1 Guidelines Guideline 1.3 Adaptable: Create content that can be presented in different ways (for example simpler layout) without losing information or structure. Success criterion 1.3.1 Info and Relationships (Level A) Techniques General Techniques G162: Positioning labels to maximize predictability of relationships HTML Techniques H44: Using label elements to associate text labels with form controls H65: Using the title attribute to identify form controls when the label element cannot be used H71: Providing a description for groups of form controls using fieldset and legend elements ARIA Techniques ARIA1: Using the aria-describedby property to provide a descriptive label for user interface controls ARIA2: Identifying a required field with the aria-required property ARIA16: Using aria-labelledby to provide a name for user interface controls ARIA17: Using grouping roles to identify related form controls Failures F87: Failure of Success Criterion 1.3.1 due to inserting non-decorative content by using :before and :after pseudo-elements and the 'content' property in CSS"
  },
  {
    "id": "9.1.3.2",
    "title": "9.1.3.2 Sinnvolle Reihenfolge",
    "whatChecked": "Seiteninhalte sollen unabhängig von der Darstellung in einer sinnvollen und brauchbaren Reihenfolge stehen. Was inhaltlich zusammengehört (etwa eine Überschrift und dazugehörige Inhalte darunter), soll nicht auseinandergerissen werden. Mittels CSS versteckte Seiteninhalte sollen deshalb an sinnvoller Stelle im Seitenquelltext erscheinen. Dynamische Inhalte, die im Ausgangszustand visuell versteckt sind, sollen auch für Screenreader verborgen sein, damit sie nicht die Lesereihenfolge stören. Ausschlaggebend bei der Prüfung ist nicht, ob die Seite in der Ansicht ohne CSS visuell eine verständliche Lesereihenfolge hat. Denn häufig sind Seiteninhalte schlecht lesbar, wenn CSS abgeschaltet ist, es kommt zu Überlappungen oder Inhalte erscheinen auseinandergerissen. Ausschlaggebend ist dagegen, ob bei eingeschaltetem CSS die Reihenfolge beim linearen Lesen mit dem Screenreader sinnvoll ist.",
    "whyChecked": "Screenreader lesen die Elemente, die auf dem Bildschirm in der Fläche angeordnet sind, nacheinander vor - und zwar in der Reihenfolge, in der sie im Quellcode stehen. Die Reihenfolge der Elemente muss also gut verständlich und nutzbar sein.",
    "howChecked": "1. Anwendbarkeit des Prüfschritts Der Prüfschritt ist anwendbar, wenn CSS verwendet wird, insbesondere für die Positionierung von Inhalten, und wenn Inhalte dynamisch eingeblendet oder eingefügt werden. 2. Prüfung 2.1 Lesereihenfolge für Screenreader-Nutzende Seite im Browser Chrome oder Firefox aufrufen. Über eine Quellcode-Analyse die Lesereihenfolge der Elemente im DOM prüfen. Gegebenenfalls zusätzlich NVDA aktivieren, die Seiteninhalte im Lesemodus des Screenreaders (mit Abwärts-Pfeiltaste) durchlaufen. Gibt es Linearisierungsprobleme, die bei der Screenreader-Nutzung störend sind? Beispiel: Beschriftungen werden nicht vor dem jeweiligen Eingabefeld ausgegeben. Sind Inhalte wie Ausklappmenüs, Ausklappbereiche, oder Dialoge, die standarmäßig visuell ausgeblendet sind, mit geeigneten Techniken für Screenreader-Nutzende verborgen? 2.2 Prüfung der Linearisierbarkeit von Layouttabellen Wenn Tabellen für das Layout (die Anordnung von Elementen auf der Seite) eingesetzt werden, müssen sie linearisierbar sein. Seite im Firefox anzeigen. Mittels Web Developer Toolbar die Funktion Miscellaneous &gt; Linearize page die Struktur der Seite und damit die der Layouttabelle linearisieren. Prüfen, ob die lineare Reihenfolge der angezeigten Inhalte sinnvoll ist. 3. Hinweise Reihenfolge von Inhalten Die visuelle Anordnung der Seitenelemente kann von der Reihenfolge im Quelltext abweichen. Sichtbare Inhalte sollen in der Regel in der gleichen Reihenfolge wie im Quelltext stehen. Bei der Nutzung von CSS Layout-Technik grid kommt es hier häufiger zu Problemen. In manchen Fällen können bewusste Abweichungen von der visuellen Reihenfolge akzeptabel sein, etwa, wenn bei Meldungen in einem News-Bereich visuell das Datum der Meldung über der Überschrift steht, in der Lesereihenfolge aber auf diese folgt. Ein anderes Beispiel sind Überschriften mit Dachzeilen (etwa Kategorien von Meldungen). Hier kann es sinnvoll sein, dass die Dachzeile erst nach der Überschrift ausgegeben wird. Das Kriterium bei der Beurteilung ist immer: sind die Inhalte in der ausgegebenen Reihenfolge verständlich? Dynamische Elemente Häufig werden dynamische Elementen nur visuell ausgeblendet, sind aber für den Screenreader im Lesemodus noch erreichbar, weil sie nicht mit geeigneten Mitteln wie display:none versteckt wurden. Grundsätzlich besteht für Screenreader-Nutzende das Problem, dass oft umfangreiche Inhalte (etwa Navigationsmenüs) durchlaufen werden müssen. Für sehbehinderte Nutzende, die den Screenreader zusätzlich einsetzen, besteht zusätzlich das Problem, dass visuelle Inhalte und Screenreader-Ausgabe auseinanderklaffen. 4. Bewertung Nicht voll erfüllt Die Lesereihenfolge entspricht nicht der visuellen, die Inhalte werden dadurch unverständlich oder Zuordnungen (etwa von Beschriftungen und Feldern sind in der Screenreade-Ausgabe fehlerhaft. Visuell versteckte Elemente, etwa Ausklappmenüs oder Dialoge, sind nicht für Screenreader-Nutzende verborgen.",
    "sources": "Grid by example (Rachel Andrew)",
    "classification": "Abgrenzung zu anderen Prüfschritten Custom controls, die etwa Benutzerschnittstellen aus positionierten div s mit Hintergrundbildern erzeugen, werden bereits in einer Reihe von bestehenden Prüfkriterien implizit geprüft, etwa 9.2.4.7 \"Aktuelle Position des Fokus deutlich\", und 9.4.1.2 \"Name, Rolle, Wert verfügbar\". Die korrekte Reihenfolge im Quelltext bei dynamisch generierten oder eingeblendeten Elementen ist Gegenstand von Prüfschritt 9.2.4.3 \"Schlüssige Reihenfolge bei der Tastaturbedienung\". Einordnung des Prüfschritts nach WCAG 2.1 Guideline Guideline 1.3 Adaptable: Create content that can be presented in different ways (for example simpler layout) without losing information or structure. Success criterion 1.3.2 Meaningful Sequence (Level A) Techniques General Techniques G57 Ordering the content in a meaningful sequence CSS Techniques C6 Positioning content based on structural markup C8 Using CSS letter-spacing to control spacing within a word C27: Making the DOM order match the visual order Scripting Techniques SCR21: Using functions of the Document Object Model (DOM) to add content to a page SCR28: Using an expandable and collapsible menu to bypass block of content Failures F1: Failure of Success Criterion 1.3.2 due to changing the meaning of content by positioning information with CSS F32: Failure of Success Criterion 1.3.2 due to using white space characters to control spacing within a word F34: Failure of Success Criterion 1.3.1 and 1.3.2 due to using white space characters to format tables in plain text content F49 Failure of Success Criterion 1.3.2 due to using an HTML layout table that does not make sense when linearized"
  },
  {
    "id": "9.1.3.3",
    "title": "9.1.3.3 Ohne Bezug auf sensorische Merkmale nutzbar",
    "whatChecked": "Verweise auf Inhalte der Seite sollen nicht ausschließlich sensorische Merkmale wie Farbe, Form oder Position nutzen, sondern auch ohne bestimmte Sinneswahrnehmungen verständlich sein (etwa durch den Verweis die Überschrift von Inhalten).",
    "whyChecked": "Auch der Bezug auf die Form, Farbe oder Position von bestimmten Seiteninhalten ist für blinde Nutzende und auch Nutzende, die die Seite ohne das mitgelieferte Stylesheet oder auf anderen Ausgabegeräten sehen, nicht brauchbar.",
    "howChecked": "1. Anwendbarkeit des Prüfschritts Der Prüfschritt ist immer anwendbar. 2. Prüfung 2.1 Textliche Bezüge auf Farben und andere sensorische Merkmale Prüfen, ob textliche Verweise auf Seiteninhalte diese nur über die Angabe sensorischer Merkmale wie Farbe, Form, Größe, Position, oder Orientierung identifizieren und nicht auch sinnesunabhängig, etwa durch Nennung einer Überschrift oder eines Labels. Beispiele für Bezugnahmen, die nur sensorische Merkmale nennen: Klicken Sie auf den grünen Knopf, um … Über die runde Taste können Sie… Der rot eingerahmte Kasten enthält Infos zu … Klicken Sie im Menü rechts… In der breiten Spalte steht… Die rechtsbündigen Absätze zeigen… Solche Bezugnahmen sind ohne die Wahrnehmung sensorischer Merkmale nicht nachzuvollziehen. Dies gilt auch für Alternativtexte von Informationsgrafiken: sie sollen alle für das Verständnis relevanten Informationen nicht allein durch Bezug auf sensorische Merkmale vermitteln (vergleiche Failure F13 ).",
    "sources": "Sensory Characteristics: Understanding SC 1.3.3 People who are blind and people who have low vision may not be able to understand information if it is conveyed by shape and/or location. Providing additional information other than shape and/or location will allow them to understand the information conveyed by shape and/or alone. ( https://www.w3.org/WAI/WCAG21/Understanding/sensory-characteristics.html )",
    "classification": "Abgrenzung zu anderen Prüfschritten Prüfschritt 9.1.4.1 \"Ohne Farben nutzbar\" behandelt die Verwendung von Farbe zur Übermittlung von Information, hier dagegen geht es um Form, Position, oder textliche Bezüge. Einordnung des Prüfschritts nach WCAG 2.1 Guidelines Guideline 1.3 Adaptable: Create content that can be presented in different ways (for example simpler layout) without losing information or structure. Success criterion 1.3.3 Sensory Characteristics (Level A) Techniques General Techniques G96 Providing textual identification of items that otherwise rely only on sensory information to be understood Failures F14: Failure of Success Criterion 1.3.3 due to identifying content only by its shape or location F26: Failure of Success Criterion 1.3.3 due to using a graphical symbol alone to convey information"
  },
  {
    "id": "9.1.3.4",
    "title": "9.1.3.4 Keine Beschränkung der Bildschirmausrichtung",
    "whatChecked": "Webinhalte sollen sich an die nutzergewählte Ausrichtung von Ausgabegeräten anpassen. Sie sollten sowohl im Hochformat als auch im Querformat dargestellt werden und nutzbar sein, es sei denn, eine bestimmte Ausrichtung des Inhalts ist unerlässlich. Beispiele für Inhalte, bei denen die Ausrichtung unerlässlich sein können, sind ein Bankcheck, eine Online-Klavier-Tastatur, Präsentationsfolien für einen Projektor oder Bildschirm, oder Inhalte einer Virtual-Reality (VR) Anwendung bei der es keine binäre Ausrichtung gibt (also nicht: entweder Hoch- oder Querformat). Es wird nicht verlangt, dass in beiden Ausrichtungen Inhalte und Funktionen in der gleichen Form angeboten werden. So können in einer anderen Orientierung Inhalte ggf. erst nach Aktivierung von Ausklappbereichen oder mittels Links auf andere Seiten angeboten werden.",
    "whyChecked": "Für Menschen mit Behinderung ist es oft besonders wichtig, ein Ausgabegerät (z. B. ein Smartphone) in einer bestimmten Ausrichtung nutzen zu können. Wenn beispielsweise Text stark vergrößert wird, bietet die Verwendung des Querformats oft ein besseres Leseerlebnis, da mehr Wörter in eine Zeile passen. Außerdem haben einige Benutzer ihre Geräte in einer festen Ausrichtung montiert (z. B. am Arm eines Elektrorollstuhls). Daher sollten Websites und Anwendungen die Darstellung von Inhalten nicht auf lediglich eine Ausrichtung einschränken.",
    "howChecked": "1. Anwendbarkeit des Prüfschritts Die Prüfung des Wechsels der Bildschirmausrichtung sollte immer anwendbar sein, außer es gibt spezielle Inhalte, die nur in einer Ausrichtung funktionieren. 2. Prüfung Ein aktuelles mobiles Gerät (z.B. ein iPhone oder Android-Handy) zur Prüfung verwenden. Sicherstellen, dass auf dem mobilen Prüfgerät die Ausrichtung nicht hardware- oder betriebssystemseitig festgestellt bzw. arretiert ist. Der zu prüfende Inhalt wird im Browser Chrome (Android) oder Safari (iOS) erst in der einen Ausrichtung neu geladen. Prüfen, ob Inhalte dargestellt werden und nutzbar sind. Gerät um 90 Grad drehen. Der zu prüfende Inhalt wird in der anderen Ausrichtung neu geladen. Prüfen, ob Inhalte auch in der anderen Ausrichtung dargestellt werden und nutzbar sind. Treten Beschränkungen beim Wechsel der Ausrichtung auf, etwa Meldungen, welche zur Nutzung der jeweils anderen Ausrichtung auffordern? Wenn nur eine Ausrichtung unterstützt wird und in der anderen Ausrichtung entweder der Inhalt nicht erscheint, um 90 Grad gedreht erscheint, oder aber eine Meldung ausgegeben wird, dass die andere Ausrichtung zu nutzen ist: Prüfen, ob die unterstützte Ausrichtung für den Inhalt unbedingt erforderlich ist, die Inhalte in der nicht unterstützten Ausrichtung also nicht oder nur schlecht dargestellt werden könnten. 3. Hinweise Es wird nicht verlangt, dass eine Änderung der Ausrichtung die Inhalte dynamisch anpasst (obwohl dies wünschenswert und bei responsiven Angeboten meist auch der Fall ist). Der Inhalt muss also ggf. in beiden Ausrichtungen jeweils neu geladen werden. 4. Bewertung Prüfschritt erfüllt Beide Ausrichtungen werden unterstützt. Wenn nur eine Ausrichtung angeboten wird, ist sie für den Inhalt unbedingt erforderlich.",
    "sources": "Understanding Success Criterion 1.3.4: Orientation (zur Zeit nur auf Englisch verfügbar)",
    "classification": "Abgrenzung zu anderen Prüfschritten Gegenstand dieses Prüfschritts ist die Anpassbarkeit der Bildschirm-Ausrichtung, nicht jedoch Änderungen hinsichtlich der Verfügbarkeit von Inhalten oder Funktionalität, die durch den Wechsel hervorgerufen werden. Dies ist Gegenstand von Prüfschritt 9.1.4.4 \"Text auf 200% vergrößerbar\" und 9.1.4.10 \"Inhalte brechen um\". Einordnung des Prüfschritts nach WCAG 2.1 Guideline Guideline 1.3 Adaptable: Create content that can be presented in different ways (for example simpler layout) without losing information or structure. Success criterion 1.3.4 Orientation (Level AA) Sufficient Techniques G214: Using a control to allow access to content in different orientations which is otherwise restricted Failures F97: Failure due to locking the orientation to landscape or portrait view F100: Failure of Success Criterion 1.3.4 due to showing a message asking to reorient device"
  },
  {
    "id": "9.1.3.5",
    "title": "9.1.3.5 Eingabefelder zu Nutzerdaten vermitteln den Zweck",
    "whatChecked": "Eingabefelder, die sich auf den Nutzer selbst beziehen, sollten eine semantisch eindeutige, sprachunabhängige Bestimmung ihres Zweckes ermöglichen. Geeignet dafür ist zur Zeit das HTML autocomplete -Attribut, mit dem sich der Eingabezweck für Felder wie etwa Name, E-Mail oder Telefonnummer ebenso wie für Adress-Daten oder Kreditkarten-Daten definieren lässt. Es wird erwartet, dass andere Taxonomien zur Festlegung des Zwecks von Interface-Komponenten entwickelt werden, welche die Verwendung von autocomplete ersetzen können.",
    "whyChecked": "Die Festlegung des Eingabezwecks erlaubt es neuartigen Hilfsmitteln, bei Formularfeldern, welche sich auf Daten des Nutzers beziehen, zusätzliche Informationen anzuzeigen, und zwar unabhängig vom der jeweils gewählten Beschriftung des Feldes und unabhängig von der natürlichen Sprache des Angebots. Zusätzliche Informationen können etwa Bilder bzw. Icons sein, die über ein Browser-Plugin oder eine externe assistive Technologie bereitgestellt werden und über bzw. vor dem jeweiligen Eingabefeld angezeigt werden, etwa wenn Nutzer eine bestimmte Tastenkombination drücken. Für Menschen, die Schwierigkeiten mit dem Lesen haben oder bevorzugt über Bilder kommunizieren, erleichtert dies eine Identifizierung von nutzerbezogenen Feldern in Formularen. Darüber hinaus bietet autocomplete Eingabevorschläge für das Feld, welche Nutzer einfach übernehmen können. Das erleichtert die Texteingabe.",
    "howChecked": "1. Anwendbarkeit des Prüfschritts Der Prüfschritt ist anwendbar, wenn Formular-Eingabefelder vorhanden sind, die sich auf Nutzerdaten beziehen (etwa Login / Anmeldung, Kontaktformulare, oder Seiten zum Anlegen eines Nutzerprofils). 2. Prüfung Bei Eingabefeldern, die sich auf Daten des Nutzers beziehen, mittels Developer Tools den Code inspizieren. Prüfen, ob autocomplete -Werte definiert sind oder andere unterstützte Taxonomien den Eingabezweck angeben - bei Nutzung von autocomplete vergl. WCAG 2.1, Abschnitt 7 Input Purposes for User Interface Components . Prüfen, ob die korrekten Werte verwendet wurden (das autocomplete -Attribut tel etwa sollte nicht für eine Kreditkartennummer verwendet werden). 3. Hinweis Die Anforderung gilt nur für Felder, die sich auf den Nutzer selbst beziehen. Sie gilt nicht für Seiten, auf denen die Eingabe von persönlichen Daten mehrerer Personen möglich ist und die Felder für den Nutzer selbst nicht besonders gekennzeichnet sind. Ein Beispiel dafür sind Ticketbuchungsseiten von Fluglinien. Hier sind die Eingabefelder für den Nutzer nicht von den Feldern für Mitreisende unterscheidbar. 4. Bewertung Prüfschritt erfüllt Alle Eingabefelder, die sich klar auf den Nutzer selbst beziehen und den dokumentierten Werten in Abschnitt 7 der WCAG 2.1 entsprechen ( Input Purposes for User Interface Components ), vermitteln den Zweck des jeweiligen Feldes über ein sprachunabhängiges Attribut (hinreichend unterstützt wird zur Zeit nur das autocomplete -Attribut).",
    "sources": "Understanding Success Criterion 1.3.5: Identify Input Purpose (zur Zeit nur auf Englisch verfügbar)",
    "classification": "Einordnung des Prüfschritts nach WCAG 2.1 Guideline Guideline 1.3 Adaptable: Create content that can be presented in different ways (for example simpler layout) without losing information or structure. Success criterion 1.3.5 Identify Input Purpose (Level AA) Sufficient Techniques H98: Using HTML 5.2 autocomplete attributes Failures F107: Failure of Success Criterion 1.3.5 due to incorrect autocomplete attribute values"
  },
  {
    "id": "9.1.4.1",
    "title": "9.1.4.1 Ohne Farben nutzbar",
    "whatChecked": "Über Farben vermittelte Informationen sollen auch ohne Wahrnehmung der Farbe verfügbar sein, also zusätzlich durch andere Mittel (etwa Fettung oder Einrückung) hervorgehoben sein.",
    "whyChecked": "Ausschließlich über Farben vermittelte Informationen sind für blinde Nutzende nicht zugänglich. Auch farbfehlsichtige Nutzende, die unter Umständen mit eigenen Farbschemata arbeiten, können Farben nicht oder nur eingeschränkt identifizieren und unterscheiden.",
    "howChecked": "1. Anwendbarkeit des Prüfschritts Der Prüfschritt ist immer anwendbar. 2. Prüfung 2.1 Vermittlung von Informationen über die Farbgebung Prüfen, ob die Webseite Elemente enthält, die durch Farbgebung Informationen vermitteln. Beispiele dafür: Überschriften werden farblich hervorgehoben Ausgewählte Menueinträge werden in einer anderen Farbe dargestellt Links im Fließtext werden in einer anderen Farbe dargestellt Eine Grafik verwendet unterschiedliche Farben für die vergleichende Darstellung des Kursverlaufs verschiedener Aktien Pflichtfelder in Formularen werden farblich gekennzeichnet (die gelb unterlegten Felder müssen immer ausgefüllt werden) Solche Hervorhebungen sind positiv. Die Vermittlung wichtiger Informationen soll sich aber nicht ausschließlich auf einfache Farbänderungen stützen. Zu prüfen ist also, ob die Informationen zusätzlich noch auf einem anderen Weg vermittelt werden. Beispiele für zusätzliche Vermittlung: Überschriften sind zusätzlich eingerückt oder durch eine andere Schriftgröße hervorgehoben (das ist fast immer der Fall). Ausgewählte Menueinträge haben einen Kontrastunterschied von mehr als 3:1 zur Farbe benachbarter Einträge oder sind durch Einrückung, Fettung, Unterstreichung, zusätzliche Elemente für die Hervorhebung, Änderung der Form des Menü-Eintrags oder dergleichen hervorgehoben. Links im Fließtext sind nicht nur farblich abgesetzt, sondern durch ein weiteres visuelles Merkmal unterschieden: z.B. zusätzlich unterstrichen, gefettet oder kursiv, invertiert oder mit einer Markierung versehen. Ausnahme: Das Kontrastverhältnis zwischen Linkfarbe und umgebender Textfarbe ist 3:1 oder besser. In diesem Fall kann im Ausgangszustand auf die zusätzliche Hervorhebung verzichtet werden. Die Links müssen dann aber bei Fokuserhalt zusätzlich hervorgehoben werden. Linien in Schaubildern sind zusätzlich gestrichelt oder durchgezogen, Flächen haben unterscheidbare Muster. Pflichtfelder im Formular sind zusätzlich mit einem Stern mit Bedeutungserklärung am Formularbeginn) oder textlich (\"Pflichtfeld\") gekennzeichnet. 3. Hinweise Es gibt verschiedene Arten, Information nicht nur über Farbe zu vermitteln: Ein Menüeintrag ist farblich hervorgehoben, aber ein Breadcrumb nennt zusätzlich, welche Seite ausgewählt ist Ein Menüeintrag ist farblich hervorgehoben, aber es gibt zusätzlich eine gleichlautende Überschrift, die dem Menüeintrag jeweils entspricht Ein Icon wechselt die Farbe, aber es ändert sich außerdem die nachfolgende Beschriftung ein Bedienelement ändert bei Fokussierung die Farbe, aber es kommt zusätzlich ein äußerer Rahmen hinzu, der ausreichend zum Hintergrund kontrastiert Farbumkehr ausreichend kontrastreicher Elemente: Vorder- und Hintergrundfarbe eines Elements werden bei Fokussierung oder Aktivierung ausgetauscht 4. Bewertung Nicht voll erfüllt Fließtextlinks sind von ihrer Textumgebung nur durch abweichende Farbe mit einem Kontrastunterschied von unter 3:1 unterscheidbar. Nicht erfüllt Informationen (etwa richtig / falsch) werden lediglich über die Farbe (etwa grün=richtig, rot=falsch) vermittelt.",
    "sources": "Use of Color: Understanding SC 1.4.1 The intent of this Success Criterion is to ensure that all users can access information that is conveyed by color differences, that is, by the use of color where each color has a meaning assigned to it. If the information is conveyed through color differences in an image (or other non-text format), the color may not be seen by users with color deficiencies. In this case, providing the information conveyed with color through another visual means ensures users who cannot see color can still perceive the information. Color is an important asset in design of Web content, enhancing its aesthetic appeal, its usability, and its accessibility. However, some users have difficulty perceiving color. People with partial sight often experience limited color vision, and many older users do not see color well. In addition, people using text-only, limited-color or monochrome displays and browsers will be unable to access information that is presented only in color. Examples of information conveyed by color differences: \"required fields are red\", \"error is shown in red\", and \"Mary’s sales are in red, Tom’s are in blue\". Examples of indications of an action include: using color to indicate that a link will open in a new window or that a database entry has been updated successfully. An example of prompting a response would be: using highlighting on form fields to indicate that a required field had been left blank. Note: This should not in any way discourage the use of color on a page, or even color coding if it is redundant with other visual indication. https://www.w3.org/WAI/WCAG21/Understanding/use-of-color.html",
    "classification": "Abgrenzung zu anderen Prüfschritten Abgrenzung zur Prüfung der Kontraste In diesem Prüfschritt geht es nicht um die Prüfung der Kontraste zum Hintergrund. Dies ist Aufgabe der Prüfkriterien 9.1.4.3 \"Kontraste von Texten ausreichend\" und 9.1.4.11 \"Kontraste von Grafiken und grafischen Bedienelementen ausreichend\". Für Fließtext-Links gilt ein deutlicher Kontrast (mindestens 3,0:1) der Linkfarbe zur Farbe des umgebenden Textes ausreichend, um diese Anforderung zu erfüllen. Es ist dann keine zusätzliche Hervorhebung nötig. Für die Erfüllung von 9.1.4.3 Kontraste von Texten ausreichend muss jedoch gewährleistet sein, dass die Linkfarbe zum Hintergrund 4,5:1 erfüllt. Abgrenzung zum Prüfschritt 9.1.3.3. Ohne Bezug auf sensorische Merkmale nutzbar In diesem Prüfschritt geht es nicht um die Prüfung von Verweisen auf Seiteninhalte mit Hilfe der Angabe von Farben. Die sinnesunabhängige Bereitstellung von Verweisen auf Seiteninhalte wird im Prüfschritt 9.1.3.3 \"Ohne Bezug auf sensorische Merkmale nutzbar\" geprüft. Abgrenzung zur Prüfung des Markups In diesem Prüfschritt wird die Auszeichnung von Elementen durch Markup nicht beachtet. Es geht also um die mehrgleisige Vermittlung von Informationen auf dem Bildschirm . Bei den Prüfkriterien zur richtigen Auszeichnung geht es dagegen darum, dass Informationen unabhängig von der Darstellung auf dem Bildschirm verfügbar sind oder dass der Benutzer die Darstellung auf dem Bildschirm anpassen kann. Abgrenzung zu fehlenden Hervorhebungen In diesem Prüfschritt 9.1.4.1 geht es um die Farbunabhängigkeit vorhandener Seitenelemente. Eine negative Bewertung ist also beispielsweise angebracht, wenn Links im Text oder Menü-Elemente nur durch die Farbe (und nicht zusätzlich durch Unterstreichung, Fettung oder andere Markierung) gekennzeichnet sind. Wenn Links im Text überhaupt nicht gekennzeichnet sind, ist dies zwar nicht nutzerfreundlich, aber wird in diesem Prüfschritt nicht negativ bewertet. Kennzeichnung der aktuellen Menüposition: Ein Webangebot, das die aktuelle Position überhaupt nicht anzeigt, verstößt nicht gegen diesen Prüfschritt 9.1.4.1. Einordnung des Prüfschritts nach WCAG 2.1 Guidelines Guideline 1.4 Distinguishable: Make it easier for users to see and hear content including separating foreground from background Success criteria 1.4.1 Use of Color (Level A) 1.4.11 Non-text contrast (Level AA) Techniques General Techniques G14: Ensuring that information conveyed by color differences is also available in text G111: Using color and pattern G182: Ensuring that additional visual cues are available when text color differences are used to convey information G183: Using a contrast ratio of 3:1 with surrounding text and providing additional visual cues on focus for links or controls where color alone is used to identify them G205: Including a text cue for colored form control labels Failures F13: Failure of Success Criterion 1.4.1 due to having a text alternative that does not include information that is conveyed by color differences in the image F73: Failure of Success Criterion 1.4.1 due to creating links that are not visually evident without color vision F81: Failure of Success Criterion 1.4.1 due to identifying required or error fields using color differences only",
    "questions": "Häufig werden besuchte Links in einer anderen Farbe dargestellt Fällt das auch unter diesen Prüfschritt? Die Unterscheidung besuchter und nicht besuchter Links ist hilfreich. Der Benutzer kann gleich sehen, welche Seiten er schon besucht hat. Ideal wäre es daher, wenn besuchte Links zum Beispiel zusätzlich durch eine andere Unterstreichung markiert würden. Aber die verfügbaren Gestaltungsmöglichkeiten sind begrenzt. Und zu viele unterschiedliche Kennzeichnungen von Links können auch Verwirrung stiften. In diesem Prüfschritt des BITV-Tests wird die Kennzeichnung besuchter Links nicht berücksichtigt, sie ist für die Bewertung nicht relevant."
  },
  {
    "id": "9.1.4.10",
    "title": "9.1.4.10 Inhalte brechen um",
    "whatChecked": "Seiten-Inhalte sollen bei einer Browserfensterbreite von 320 CSS-Pixeln (bzw. bei einer Browserfensterbreite von 1280 CSS-Pixeln und 400% Zoomvergrößerung) so umbrechen, dass alle Informationen und Funktionen verfügbar sind, ohne dass Nutzer horizontal scrollen müssen. Es wird dabei nicht verlangt, dass alle Inhalte in gleicher Weise in der responsiven Ansicht verfügbar sind. So sind die sichtbaren Navigationsmenüs einer Standard-Ansicht auf dem Desktop häufig nach dem Hereinzoomen (oder bei Nutzung des Angebots auf einem Smartphone-Bildschirm) nur über eine Ausklappnavigation zugänglich. Inhalte können auch in Ausklappbereichen oder über Links auf andere Seiten oder Ansichten verfügbar sein. Ausnahmen gelten für Inhalte, für deren Nutzung ein zweidimensionales Layout erforderlich ist, z. B. Bilder, Landkarten, Diagramme, Videos, Spiele, Präsentationen, Datentabellen und Anwendungs-Schnittstellen, in denen die Bearbeitung von Inhalten die permanente Verfügbarkeit von Werkzeugleisten erfordert. Hinweis : Dieser Prüfschritt beschränkt sich auf Inhalte, deren primäre Schreibrichtung waagerecht ist, wie bei der für die meisten westlichen Sprachen benutzten lateinischen Schrift. Die zugrunde liegende WCAG-Anforderung gilt in ähnlicher Weise für Inhalte mit vertikaler Schreibrichtung.",
    "whyChecked": "Sehbehinderte Nutzer vergrößern häufig Seiten-Inhalte über die Zoomfunktion, die in gängigen Desktop-Browsern vorhanden ist. Über eine responsive Gestaltung mittels CSS media queries sollen Webseiten die Nutzung mit starkem Zoom durch eine dynamische Anpassung des Seiten-Umbruchs unterstützen. Responsive Seiten-Layouts ordnen die Inhaltsblöcke neu an. Mehrspaltige Inhalte werden dabei meist so umbrochen, dass sie bei starkem Zoom einspaltig untereinander angeordnet sind. Bei Fließtexten entstehen auch neue Zeilenumbrüche mit kürzeren Zeilen. Der Vorteil: Nutzer müssen beim Lesen nur in eine Richtung scrollen (bei westlichen Sprachen: vertikal). Wenn Zeilen bei Zoomvergrößerung nicht umgebrochen werden, sind Nutzer dagegen gezwungen, beim Lesen jeder Zeile horizontal hin- und her zu scrollen, was die Aufnahme der Inhalte sehr stark beeinträchtigt und verlangsamt.",
    "howChecked": "1. Anwendbarkeit des Prüfschritts Der Prüfschritt ist für Webinhalte anwendbar, wenn deren Ausgangsbasis für Zugänglichkeit die üblichen Desktop-Browser mit eingebauter Zoomfunktion einschließt. Er ist nicht anwendbar bei der Nutzung von Browsern mobiler Betriebssysteme, deren eingebaute Zoomvergrößerung (etwa über eine Spreizgeste) in der Regel keine Vergrößerung mit Inhaltsumbruch bieten. 2. Prüfung 2.1 Prüfung mit 320px Viewport-Breite Die Prüfung bezieht sich auf Web-Inhalte mit horizontal verlaufender Schrift. Seite im Chrome Browser öffnen. Die Developer Tools rechts angedockt öffnen (über Funktionstaste F12, über die Tastenkombination Strg + Umschalttaste + I, oder über Menü Einstellungen &gt; Weitere Tools &gt; Entwicklertools ) und die vertikale Abgrenzung zwischen Seiten- und Tool-Bereich ziehen, bis oben rechts im Seiten-Bereich 320px x (Viewporthöhe) angezeigt wird (wird rechts ein Scrollbalken angezeigt, 14px dazuzählen, also 334px x Viewporthöhe einstellen). Seite neu laden. Feststellen, ob Seiten-Inhalte so umbrechen, dass eine Nutzung ohne horizontales Scrollen möglich ist und keine Inhalte und Funktionen verloren gehen. 2.2 Alternative Prüfung mit 1280px Viewport-Breite In einem Browser, der Zoomvergrößerung um 400% unterstützt (z. B. Chrome) das Browserfenster auf eine Breite von 1280 CSS-Pixeln und eine Höhe von 1024 CSS-Pixeln einstellen. Hierzu lässt sich die Resize -Funktion der Web Developer Toolbar nutzen. Die Standard-Einstellung von 100% Zoomvergrößerung und 100% Textvergrößerung sicherstellen. Auf 400% zoomen Die Seite neu laden Feststellen, ob Inhalte so umbrechen, dass eine Nutzung ohne horizontales Scrollen möglich ist und keine Inhalte und Funktionen verloren gehen. 3. Hinweise Inhalte und Funktionen müssen in der Umbruch-Ansicht nicht in der gleichen Weise angeboten werden. Sie können etwa auch in einem Ausklappbereich oder über einen direkten Link erreichbar sein. Bei der alternativen Prüfung mit 1280px Viewport-Breite und 400% Zoom soll nicht negativ bewertet werden, wenn fest positionierte Inhalte (etwa Ausklappmenüs) aufgrund der sehr geringen verfügbaren Höhe des Browser-Fensters nicht voll erreichbar sind. Geprüft wird allein, ob Inhalte erfolgreich in eine Ansicht umbrechen, die nicht horizontal gescrollt werden braucht. Zur Prüfung des Verlusts von Informationen und Funktionalität ist die Prüfung bei 320px Viewport-Breite ausschlaggebend. Ausnahmen für die Anforderung, dass horizontales Scrollen nicht erforderlich ist, sind Inhalte, deren Nutzung ein zweidimensionales Layout voraussetzen, etwa Datentabellen, Bilder, Diagramme, Videos, Spiele oder Benutzerschnittstellen mit Werkzeugleisten. Optionen in geöffneten select -Elementen, die nicht in den Viewport passen, gelten nicht als Fehler im Sinne dieses Prüfschritts. Im Prüfschritt wird nicht geprüft, ob die Zoomvergrößerung auf 400% Textinhalte tatsächlich auf 400% oder einen geringeren Wert vergrößert. Dies ist Gegenstand von Prüfschritt 9.1.4.4 \"Text auf 200% vergrößerbar\". Für Unternehmen, die Bestandssysteme verwenden oder ihre Layoutmethoden aus irgendeinem Grund nicht aktualisieren können, kann eine alternative, konforme Version eine mobile Website mit einem festen, 320px breiten Layout sein. Der Benutzer sollte in der Lage sein, diese Version von der Standardwebsite aus zu finden. 4. Bewertung Prüfschritt erfüllt Inhalte und Funktionen sind bei einer Browserfenster-Breite von 1280px nach Zoom auf 400% (oder bei ungezoomter Ansicht bei einer Browserfenster-Breite von 320px) ohne horizontales Scrollen vollständig erreichbar.",
    "sources": "Understanding Reflow (zur Zeit nur auf Englisch verfügbar)",
    "classification": "Abgrenzung von anderen Prüfschritten In diesem Prüfschritt geht es darum, ob Inhalte beim Reinzoomen oder in schmalen Viewports ohne Verlust von Information in eine einspaltige Ansicht umbrechen. Die Vergrößerbarkeit von Schrift wird dagegen in Prüfschritt 9.1.4.4 \"Text auf 200% vergrößerbar\" bewertet. Einordnung des Prüfschritts nach WCAG 2.1 Guideline Guideline 1.4 Distinguishable: Make it easier for users to see and hear content including separating foreground from background Success criterion 1.4.10 Reflow (Level AA) Sufficient Techniques C32: Using media queries and grid CSS to reflow columns C31: Using CSS Flexbox to reflow content C33: Allowing for Reflow with Long URLs and Strings of Text C38: Using CSS width, max-width and flexbox to fit labels and inputs SCR34: Calculating size and position in a way that scales with text size G206: Providing options within the content to switch to a layout that does not require the user to scroll horizontally to read a line of text Failures F102: Failure of Success Criterion 1.4.10 due to content disappearing and not being available when content has reflowed"
  },
  {
    "id": "9.1.4.11",
    "title": "9.1.4.11 Kontraste von Grafiken und grafischen Bedienelementen ausreichend",
    "whatChecked": "Die für die Identifizierung notwendige visuelle Information von informationstragenden Grafiken und grafischen Bedienelementen sowie deren Zuständen soll einen Kontrast von mindestens 3:1 zu angrenzenden Farben haben. In vielen Fällen, wie etwa bei einfarbigen Icons, bedeutet das einfach, dass der Kontrast zwischen der Farbe des Elements und der Hintergrundfarbe gemessen wird. Bei mehrfarbigen oder abgetönten Elementen gilt die Kontrastanforderung für jene visuelle Information, über die das Element (oder dessen Zustand) hinreichend klar identifizierbar ist. Es müssen also nicht sämtliche Bereiche einer Grafik die Kontrastanforderung erfüllen. Wenn grafische Elemente zusätzlich eingesetzt werden, ein Text also das Bedienelement bzw. dessen Zustand hinreichend kennzeichnet, müssen grafische Elemente die Kontrastanforderung nicht erfüllen.",
    "whyChecked": "Viele Menschen mit Sehbehinderungen brauchen gute Kontraste, um grafische Bedienelemente bzw. deren Zustände oder Elemente in informationstragenden Grafiken, etwa statistischen Diagrammen oder Schaubildern, wahrnehmen zu können. Die Forderung nach einem Minimalkontrast für informationstragende Grafiken hilft diesen Menschen.",
    "howChecked": "1. Anwendbarkeit des Prüfschritts Der Prüfschritt ist anwendbar, wenn informationstragende grafische Bedienelemente, die nicht lediglich ergänzend (etwa zu Text) eingesetzt werden, oder informationstragende Grafiken vorhanden sind. Nicht anwendbar ist der Prüfschritt auf Fotos, Logos, Flaggen, Screenshots, Diagramme mit Farben, die nicht geändert werden dürfen, und Datenvisualisierungen mit Farbabstufungen wie etwa Heatmaps. Ebenfalls nicht anwendbar ist der Prüfschritt auf native grafische Bedienelemente, die in ihrem Erscheinungsbild nicht durch den Autor beeinflusst wurden, etwa native HTML-Checkboxen, sowie auf inaktive Bedienelemente, also solche, die zustandsabhängig für die Interaktion nicht zur Verfügung stehen. 2. Prüfung Hinweis: Für die aufgeführten Prüfungen 2.2 bis 2.4 ist eine Sichtprüfung ausreichend, wenn der Kontrast sehr deutlich über 3:1 liegt. Im Zweifelsfall immer den Color Contrast Analyzer einsetzen. 2.1 Prüfung nicht festgelegter Farben Prüfung, ob für Grafiken oder Bedienelemente (etwa Icon Fonts), für die über CSS eine Vordergrundfarbe festgelegt wurde, auch eine Hintergrundfarbe festgelegt ist (und umgekehrt). Das Bookmarklet Vorder-und Hintergrundfarbe definiert oder ein User Stylesheet ( html {background-color:black;color:white} ) aktivieren. Prüfen, ob Grafiken oder Bedienelemente nun verschwinden oder schlecht zu erkennen sind. In diesen Fällen fehlt entweder die Festlegung der Farbe oder die der Hintergrundfarbe. 2.2 Prüfung von Bedienelementen in der Ausgangsansicht Grafische Bedienelemente (etwa Icons) auf der Seite identifizieren, die keinen nebenstehenden Text haben, der dessen Bedeutung und ggf. auch wechselnde Zustände nach Interaktion identifiziert. Sind die Kontraste zu angrenzenden Farben klar ausreichend (3:1 oder besser)? Bedienelemente mit Rahmen (etwa Schaltflächen oder Texteingabefelder) identifizieren. Wenn das Bedienelement nur über den Rahmen (oder einen Teil des Rahmens) identifizierbar ist (der Rahmen also keinen Text oder Symbol umschließt), muss der Rahmen einen Kontrast von mindestens 3:1 haben. 2.3 Prüfung von Bedienelement-Zuständen nach Fokussierung oder Aktivierung Bedienelemente mit der Tastatur und der Maus fokussieren. Ist der Kontrast der Fokushervorhebung zu angrenzenden Farben klar ausreichend (3:1 oder besser)? Bei Bedienelementen, die verschiedene funktionale Zustände haben (etwa Checkboxen, Radio-Buttons, Reiter in Registerbereichen) die verfügbaren anderen Zustände aufrufen. Ist der Kontrast der informationstragenden Teile der Bedienelemente zu angrenzenden Farben klar ausreichend (3:1 oder besser). Hinweis: Ausgenommen von der Anforderung sind native, also vom Autor nicht gestylte, Bedienelemente. 2.4 Prüfung von Informationsgrafiken Informationstragende Grafiken identifizieren, bei denen die Information nur über die Grafik und nicht (oder nicht ausreichend) über beigefügten Text vermittelt wird. Wenn es in Bereichen der Grafik Farbverläufe gibt, Anteile mit einem Kontrast von weniger als 3:1 ignorieren und bewerten, ob die Information immer noch ausreichend vom kontrastreicheren Teil der Grafik vermittelt wird. 2.5 Styleswitcher-Prüfung, Prüfung der Grafikkontraste der alternativen Ansicht Wenn die Kontraste der Standardversion nicht die Sollwerte erfüllen und die Seite eine kontrastreichere Ansicht über einen Styleswitcher anbietet: Grafikkontrast des Styleswitcher-Schaltelements prüfen. Das Kontrastverhältnis muss 4,5:1 oder besser sein, sofern der Schalter mit Hilfe von Text beschriftet ist (bei grafischen Schaltern gilt ein Mindestkontrast von 3,0:1, vergl. Prüfschritt 9.1.4.11). Auch alle anderen Anforderungen müssen erfüllt sein (zum Beispiel Tastaturbedienbarkeit), ansonsten Prüfung der alternativen Ansicht abbrechen. Alternative kontrastreichere Ansicht über den Styleswitcher aufrufen. Grafikkontraste der alternativen Ansicht prüfen (wie oben in 2.2. und 2.4 beschrieben). Bestehen nach Aktivierung der alternativen Ansicht weiter irgendwelche Kontrastmängel bei Grafiken oder bei Text, wird diese Ansicht bei der Bewertung der Kontraste nicht berücksichtigt. 3. Hinweise 3.1 Zur Identifizierung notwendiger Teile von Bedienelementen Bei den zur Identifizierung notwendigen Teile von Bedienelementen handelt es sich um visuell sichtbare Elemente (z. B. Element-Rahmen, aktivierter Zustand eines Elements, informationstragender Teil eines Icons) die wichtige Informationen enthalten, also etwa den Umriss, den Wert, oder den Zustand eines Bedienelements anzeigen. Beispiele: Die Fokushervorhebung eines Bedienelements Der Aktivierungszustand einer Registerkarte Die Ränder eines Eingabefelds oder eines Buttons Der Haken einer Custom-Checkbox Visuelle Beispiele dazu finden sich im Dokument Understanding Success Criterion 1.4.11: Non-text Contrast . 3.2 Vernachlässigbare Rahmen und Umrisslinien Wenn die Farbe eines Elements (etwa die innere Hintergrundfarbe eines Schalters oder das Segment eines Kuchendiagramms) ausreichend Kontrast zu Hintergrund hat, auf dem sich das Element befindet, können Rahmen bzw. Umrisslinien bei der Kontrastprüfung vernachlässigt werden. 3.3 Kontrast-Differenz bei Zuständen Nicht verlangt wird ein Kontrast von 3:1 für die Differenz zwischen verschiedenen funktionalen Zuständen des gleichen Bedienelements (etwa Umschalter aktiviert/ nicht aktiviert). Ebenfalls nicht verlangt wird hier ein Kontrast von 3:1 für die Differenz zwischen verschiedenen Interaktions -Zuständen des gleichen Bedienelements (etwa fokussiert / nicht fokussiert). Wenn jedoch der Interaktions-Zustand lediglich über einen Farbwechsel angezeigt wird (also nicht auch anders, etwa durch eine Änderung der Form, Wechsel von beigestelltem Text, Umrandung oder ähnlich) dann sollte der Kontrast der einen Farbe zur anderen mindestens 3:1 betragen. Dies ist Gegenstand der Prüfung in Prüfschritt 9.2.4.7 \"Aktuelle Position des Fokus deutlich\" Verlangt wird der Kontrast dagegen für jeden einzelnen Zustand zur jeweils angrenzenden Farbe.",
    "sources": "Understanding Success Criterion 1.4.11: Non-text Contrast (zur Zeit nur auf Englisch verfügbar)",
    "classification": "Abgrenzung von anderen Prüfschritten In diesem Prüfschritt geht es um die Kontraste von Grafiken und grafischen Attributen wie Umrisslinien. Der Kontrast von Schrift, einschließlich der von Schriftgrafiken, wird in Prüfschritt 9.1.4.3 \"Kontraste von Texten ausreichend\" bewertet. Einordnung des Prüfschritts nach WCAG 2.1 Guideline Guideline 1.4 Distinguishable: Make it easier for users to see and hear content including separating foreground from background Success criterion 1.4.11 Non-Text Contrast (Level AA) Sufficient Techniques G174: Providing a control with a sufficient contrast ratio that allows users to switch to a presentation that uses sufficient contrast G195: Using an author-supplied, highly visible focus indicator G207: Ensuring that a contrast ratio of 3:1 is provided for icons G209: Provide sufficient contrast at the boundaries between adjoining colors Failures F78: Failure of Success Criterion 2.4.7 due to styling element outlines and borders in a way that removes or renders non-visible the visual focus indicator"
  },
  {
    "id": "9.1.4.12",
    "title": "9.1.4.12 Textabstände anpassbar",
    "whatChecked": "Die Anpassung der Zeilenhöhe auf das 1,5-fache der Textgröße, des Abstands nach Absätzen auf das 2-fache der Textgröße, von Buchstabenabständen auf das 0,12-fache der Textgröße und von Wortabständen auf das 0,16-fache der Textgröße führt nicht zu einem Verlust an Inhalten oder Funktionalitäten, zum Beispiel durch das Abschneiden von Inhalten in Elementen, deren Größe sich bei Einstellung größerer Textabstände und dadurch erfolgender Textspreizungen oder Umbrüche nicht dynamisch anpasst. Anmerkung: Die Anforderung verlangt nicht von Autoren, die genannten Werte bei Ihren Inhalten umzusetzen, sondern lediglich, dass von Nutzern vorgenommene Anpassungen nicht zum Abschneiden von Text oder Verlust von Funktionalitäten führt.",
    "whyChecked": "Menschen mit Sehbehinderungen können die Lesbarkeit von Texten verbessern, wenn sie über Werkzeuge wie Bookmarklets oder über eigene Stylesheets die Abstände zwische Zeilen, Absätzen, Zeichen und Worten anpassen können. Solche Anpassungen führen dazu, das Texte ggf. mehr Platz brauchen und Inhalts-Container dementsprechend dynamisch angelegt sein müssen, um den längeren Text ohne Verlust zu zeigen.",
    "howChecked": "1. Anwendbarkeit des Prüfschritts Der Prüfschritt ist anwendbar, wenn die Seite echten Text enthält (also Text, der nicht über eine Grafik bereitgestellt wird). 2. Prüfung Textabstände mit dem Bookmarklet Textabstände oder mit einer Browser-Erweiterung setzen. Die Werte für Zeilenhöhe, Abstand nach Absätzen, Buchstabenabstand und Wortabstand werden auf die maximal geforderten Werte gesetzt. Prüfen, ob es durch die neuen Werte zum Abschneiden oder Überlappen von Text oder den Verlust von Funktionalität kommt. 3. Hinweise Die Anforderung ist nicht anwendbar ist auf Elemente wie input type=\"file\" , auf die CSS-Anpassungen keine Auswirkung haben. 4. Bewertung Erfüllt: Nach Anwendung des Bookmarklets sind alle Texte, auch in Ausklappbereichen und Menüs, vollständig lesbar, Sie sind nicht abgeschnitten und überlagern keine anderen Inhalte.",
    "sources": "Understanding Success Criterion 1.4.12: Text Spacing (zur Zeit nur auf Englisch verfügbar) Stylus Browsererweiterung Text Spacing Bookmarklet",
    "classification": "Einordnung des Prüfschritts nach WCAG 2.1 Guideline Guideline 1.4 Distinguishable: Make it easier for users to see and hear content including separating foreground from background Success criterion 1.4.12 Text Spacing (Level AA) Sufficient Techniques C36: Allowing for text spacing override C35: Allowing for text spacing without wrapping Failures F104: Failure of Success Criterion 1.4.12 due to clipped or overlapped content when text spacing is adjusted"
  },
  {
    "id": "9.1.4.13",
    "title": "9.1.4.13 Eingeblendete Inhalte bedienbar",
    "whatChecked": "Zusätzliche Inhalte, die angezeigt werden, wenn Elemente den Zeiger- oder Tastaturfokus erhalten, z. B. benutzerdefinierte Tooltips oder Ausklapp-Menüs, sollten drei Anforderungen erfüllen: Wenn zusätzliche Inhalte durch Darüberfahren mit dem Zeiger erscheinen, können Benutzer den Zeiger über diesen Inhalt bewegen, ohne dass er verschwindet. Es gibt die Möglichkeit, einen eingeblendeten Inhalt zu schließen, ohne den Fokus zu verschieben (z. B. durch Drücken der Escape-Taste oder durch Aktivieren des Elements, dessen Fokussierung den Inhalt einblendet). Der Inhalt schließt nicht selbsttätig nach einer gewissen Zeitspanne. Hinweis: Die Anforderung gilt nicht für eingeblendete Inhalte, deren Verhalten durch den Nutzer-Agenten bestimmt wird (etwa native title -Attribute).",
    "whyChecked": "Für sehbehinderte Nutzer, die mit starker Zoomvergrößerung arbeiten, sind zusätzliche Inhalte, die bei Zeiger- oder Tastatur-Fokussierung eingeblendet werden, aus mehreren Gründen problematisch: Inhalte sind wegen des starken Zoomfaktors oft nur teilweise sichtbar. Nutzer müssen in der Lage sein, den Zeiger von dem auslösenden Element über den eingeblendeten Inhalt zu bewegen (was meist den sichtbaren Ausschnitt verschiebt), ohne dass der eingeblendete Inhalt schließt. Eingeblendete Inhalte verdecken häufig andere Inhalte. Nutzer müssen in der Lage sein, den eingeblendeten Inhalt wieder zu schließen, ohne den Fokus zu bewegen (was passieren würde, wenn etwa nach einem Schließen-Element gesucht werden müsste). Die Escape-Taste oder ein Aktivieren des auslösenden Elements, das zur Zeit den Fokus hat, sollte den eingeblendeten Inhalt schließen. Sehbehinderte Nutzer brauchen ggf. mehr Zeit, Inhalte zu lesen. Eingeblendete Inhalte sollten deshalb solange zur Verfügung stehen, bis sie vom Nutzer geschlossen werden (etwa über Weiter-Tabben, Wegbewegen des Zeigers von auslösenden Element und eingeblendetem Inhalt, oder explizites Schließen über die Tastatur).",
    "howChecked": "1. Anwendbarkeit des Prüfschritts Der Prüfschritt ist anwendbar, wenn die Seite zusätzliche Inhalte enthält, die bei Fokussierung mittels Tastatur oder Zeiger eingeblendet werden, etwa Custom-Tooltips oder Ausklapp-Menüs, die bereits bei Fokussierung ausklappen. 2. Prüfung 2.1 Zeiger-Hover-Prüfung Wenn sich zusätzliche Inhalte sich durch Hinüberbewegen des Zeigers (z. B. Maus-Hover) über ein Element einblenden lassen: Inhalt durch Hover über dem Element einblenden Abwarten, ob der eingeblendete Inhalt sichtbar bleibt, also nicht nach kurzer Zeit selbsttätig schließt. Ausgenommen sind Fälle, bei denen der eingeblendete Inhalt nicht länger gültig ist. Prüfen, ob sich der eingeblendete Inhalt durch die Escape-Taste oder ein Aktivieren des Einblendung auslösenden Elements (Klicken, Tippen) schließen lässt. Ausgenommen sind hier Fälle, bei denen der eingeblendete Inhalt eine Fehlermeldung ist oder keine anderen Inhalte verdeckt oder ersetzt. Inhalt erneut über Hover einblenden und den Zeiger über den neu eingeblendeten Inhalt bewegen. Der Inhalt sollte weiter sichtbar sein. 2.2 Tastaturfokus-Prüfung Wenn sich zusätzliche Inhalte durch die Tastaturfokussierung von Elementen einblenden lassen: Inhalt durch Tastaturfokussierung des Elements einblenden. Prüfen, ob der eingeblendete Inhalt sichtbar bleibt, also nicht nach kurzer Zeit selbsttätig schließt. Ausgenommen sind Fällebei denen der eingeblendete Inhalt nicht länger gültig ist. Prüfen, ob sich der eingeblendete Inhalt über die Escape-Taste oder ein Aktivieren des Einblendung auslösenden Elements (Enter) schließen lässt. Ausgenommen sind hier Fälle, bei denen der eingeblendete Inhalt eine Fehlermeldung ist oder keine anderen Inhalte verdeckt oder ersetzt. 3. Hinweise Bei Inhalten, die durch Tastaturfokussierung von Elementen eingeblendet werden, wird nicht verlangt, dass hier Mauszeiger über die eingeblendeten Inhalte bewegt werden kann, ohne dass diese sich schließen. Wenn Aktivierung des Elements, dass den Inhalt einblendet, zum Schließen des eingeblendeten Inhalts benutzt wird, soll der Nutzer-Kontext bestehen bleiben (also nicht eine weitere Aktion, die den Kontext ändert, ausgelöst werden, etwa das Aktivieren eines Links). Wenn Inhalte durch Hover eingeblendet werden, sollten sie in der Regel auch bei Tastaturfokus eingeblendet werden, falls sie nicht alternativ zur Verfügung gestellt werden. Dies wird in Prüfschritt 9.2.1.1 \"Ohne Maus nutzbar\" geprüft.",
    "sources": "Understanding Success Criterion 1.4.13: Content on Hover or Focus (zur Zeit nur auf Englisch verfügbar)",
    "classification": "Einordnung des Prüfschritts nach WCAG 2.1 Guideline Guideline 1.4 Distinguishable: Make it easier for users to see and hear content including separating foreground from background Success criterion 1.4.13 Content on Hover or Focus (Level AA) Sufficient Techniques SCR39: Making content on focus or hover hoverable, dismissible, and persistent Failures F95: Failure of Success Criterion 1.4.13 due to content shown on hover not being hoverable"
  },
  {
    "id": "9.1.4.2",
    "title": "9.1.4.2 Ton abschaltbar",
    "whatChecked": "Automatisch abgespielte Töne, die nicht nach drei Sekunden enden, sollen abschaltbar sein.",
    "whyChecked": "Automatisch abgespielte Töne stören Nutzer, die sich auf einer Seite mittels Sprachausgabe orientieren. Falls ein Tonelement nach dem Laden einer Seite automatisch startet, ist es deshalb wichtig, dass es sich über einen am Seitenbeginn befindlichen barrierefreien Mechanismus abschalten, anhalten oder herunter regeln lässt.",
    "howChecked": "1. Anwendbarkeit des Prüfschritts Der Prüfschritt ist anwendbar, wenn nach dem Laden einer Seite Tonelemente auf einer Webseite automatisch länger als drei Sekunden abgespielt werden. 2. Prüfung Wenn nach Laden der Seite ein Tonelement automatisch abgespielt wird: Prüfen, ob der Ton länger als 3 Sekunden dauert. Wenn das der Fall ist: Prüfen, ob sich am Seitenbeginn ein Mechanismus (Button, Link, oder Lautstärke-Regler) befindet, mit dem sich der Ton abschalten oder unabhängig von der Systemlautstärke herunter regeln lässt. Den Mechanismus bedienen und den Ton abschalten. Wenn sich die Lautstärke regeln lässt: Das Kontrollelement \"Sound\" aufrufen: Windows-Menü _Start &gt; Alle Apps &gt; Windows System &gt; Systemsteuerung (&gt; Kategorie Hardware und Sound) &gt; Sound_In der Registerkarte \"Wiedergabe\" die Eigenschaften des Lautsprechers aufrufen und den \"Pegel\" (in gleichnamiger Registerkarte) anzeigen. Ton wieder anschalten oder Seite neu laden, dann die Lautstärke ganz herunterregeln. Ist der Ton verschwunden? Prüfen, ob der Lautstärkeregelung durch den Mechanismus unabhängig von der Systemtonlautstärke ist (Die Lautstärkeeinstellung in \"Sound\" soll unverändert bleiben). Alternativ kann die Systemlautstärke auch über den das Lautsprechersymbol im einblendbaren Infobereich der Taskleiste geprüft werden. 3. Hinweise Töne, die nicht nach kurzer Zeit enden, können auch die Verständlichkeit der Sprachausgabe des Abschaltmechanismus stören. Deshalb wird auch berücksichtigt, wie störend sich der Ton auswirkt. Sprache oder laute Geräusche etwa stören mehr als eine gleichmäßige Hintergrundmusik. Der Mechanismus zum Herunterregeln des Tones darf nicht die Systemtonlautstärke ändern, da dies auch die Tonausgabe von Hilfsmitteln mit Sprachausgabe beeinträchtigen würde. Der Mechanismus zum Abschalten oder Herunterregeln des Tons muss sich am Seitenbeginn befinden und soll selbst alle Anforderungen an Barrierefreiheit erfüllen, also etwa ausreichende Kontraste haben und tastaturbedienbar sein. Wenn sich der Ton herunterregeln lässt, soll er auf der niedrigsten Stellung des Reglers nicht mehr hörbar sein. Es reicht zur Erfüllung dieses Prüfschritts nicht aus, wenn sich der Ton über Tastaturbefehle (etwa die Escape -Taste) abschalten lässt. Diese Funktion kann sinnvoll sein, wird aber von vielen Nutzern nicht vermutet. 4. Bewertung Erfüllt Automatisch abgespielte Töne dauern nicht länger als drei Sekunden oder sind über einen barrierefreien Mechanismus am Seitenbeginn abschaltbar. Nicht voll erfüllt Automatisch abgespielter Ton enthält von Beginn an längere Sprachpassagen oder andere laute und störende Ton-Ereignisse. Die Sprachausgabe des Abschaltmechanismus kann deshalb nur schlecht wahrgenommen werden. Der Mechanismus zum Abschalten des Tons befindet sich nicht unmittelbar am Seitenbeginn. Es gibt am Seitenbeginn lediglich eine Erklärung, wie der Ton mittels Tastatur abschaltbar ist.",
    "sources": "Bedeutung der Tonabschaltung nach WCAG 2.1 Individuals who use screen reading software can find it hard to hear the speech output if there is other audio playing at the same time. This difficulty is exacerbated when the screen reader’s speech output is software based (as most are today ) and is controlled via the same volume control as the sound. Therefore, it is important that the user be able to turn off the background sound. Note: Having control of the volume includes being able to reduce its volume to zero. Note: Playing audio automatically when landing on a page may affect a screen reader user’s ability to find the mechanism to stop it because they navigate by listening and automatically started sounds might interfere with that navigation. Therefore, we discourage the practice of automatically starting sounds (especially if they last more than 3 seconds), and encourage that the sound be started by an action initiated by the user after they reach the page, rather than requiring that the sound be stopped by an action of the user after they land on the page. ( Audio Control: Understanding SC 1.4.2 )",
    "classification": "Einordnung des Prüfschritts nach WCAG 2.1 Guideline Guideline 1.4 Distinguishable: Make it easier for users to see and hear content including separating foreground from background. Success criterion 1.4.2 Audio Control (Level A) Techniques General Techniques G60: Playing a sound that turns off automatically within three seconds G170: Providing a control near the beginning of the Web page that turns off sounds that play automatically G171: Playing sounds only on user request Failures F23: Failure of 1.4.2 due to playing a sound longer than 3 seconds where there is no mechanism to turn it off F93: Failure of Success Criterion 1.4.2 for absence of a way to pause or stop an HTML5 media element that autoplays"
  },
  {
    "id": "9.1.4.3",
    "title": "9.1.4.3 Kontraste von Texten ausreichend",
    "whatChecked": "Alle Texte der Seite sollen in allen Zuständen ausreichende Helligkeitskontraste haben.",
    "whyChecked": "Wenn Vordergrund- und Hintergrundfarbe sich in der Helligkeit ähneln, haben Texte unter Umständen zu wenig Kontrast. Gute Kontraste sorgen dafür, dass Nutzende Texte leichter lesen können. Insbesondere Menschen, die aufgrund einer verringerten Sehschärfe, einer Farbfehlsichtigkeit oder aufgrund des Alters eine verminderte Kontrastempfindlichkeit haben, profitieren von guten Kontrasten.",
    "howChecked": "1. Anwendbarkeit des Prüfschritts Der Prüfschritt ist anwendbar, wenn die Seite Text enthält. Grafische Schriften sind ebenfalls Gegenstand des Prüfschritts. 2. Prüfung 2.1 Prüfung der Textkontraste der Standardversion Prüfung nicht festgelegter Farben Über das Bookmarklet \"Vorder-und Hintergrundfarbe definiert\" oder ein User Stylesheet ( html {background-color:black;color:white} ) prüfen, ob für jedes Element, für das eine Vordergrundfarbe festgelegt wurde, auch eine Hintergrundfarbe festgelegt ist und umgekehrt. Sichtprüfung Sind die Schriftkontraste stark genug? Im Zweifel den Contrast Analyser öffnen. Im Bereich Vordergrund mit der Pipette die Vordergrundfarbe auswählen, dann im Bereich Hintergrund die Hintergrundfarbe. Falls unklar ist, ob für Schrift der Wert für große Schrift (3:1) oder für kleine Schrift (4,5:1) gilt: In der Web Developer Toolbar die Funktion Informationen &gt; Elementinformationen einblenden aktivieren. Text, der überprüft werden soll, anklicken. Im eingeblendeten Fenster \"Elementinformationen\" im Bereich \"Text\" wird die jeweilige Schriftgröße in Pixeln angegeben. Alternativ über die Firefox Web Developer Tools mit dem Cursor das fragliche Element aktivieren und unterm Reiter Inspektor im Bereich CSS im Tab Berechnet die tatsächliche Schriftgröße (font-size) ablesen. Für Schriftgrößen unter 24 px (beziehungsweise 18,7 px bei fetter Schrift) prüfen, ob das Kontrastverhältnis bei 4,5:1 oder größer liegt. Für große Schriften prüfen, ob das Kontrastverhältnis bei 3:1 oder größer liegt. 2.2 Styleswitcher-Prüfung, Prüfung der Textkontraste der alternativen Ansicht Wenn die Kontraste der Standardversion nicht die Sollwerte erfüllen und die Seite eine kontrastreichere Ansicht über einen Styleswitcher anbietet: Textkontrast des Styleswitcher-Schaltelements prüfen. Das Kontrastverhältnis muss 4,5:1 oder besser sein, sofern der Schalter mit Hilfe von Text beschriftet ist (bei grafischen Schaltern gilt ein Mindestkontrast von 3,0:1, vergl. Prüfschritt 9.1.4.11). Auch alle anderen Anforderungen müssen erfüllt sein (zum Beispiel Tastaturbedienbarkeit), sonst Prüfung der alternativen Ansicht abbrechen. Alternative kontrastreichere Ansicht über den Styleswitcher aufrufen. Textkontraste der alternativen Ansicht prüfen (wie in 2.1 Prüfung der Textkontraste der Standardversion ). 3. Hinweise 3.1 Allgemeine Hinweise Elemente, die unterschiedliche Zustände haben können, sollen in allen Zuständen immer ausreichend Kontrast zum Hintergrund haben. So muss auch die Hervorhebung des Maus- bzw. des Tastaturfokus den allgemeinen Kontrast-Grenzwert von 4,5:1 (bei großen Schriften 3,0:1) erfüllen. Schwache Kontraste können zweckmäßig sein, sie können den Umgang mit einer Webseite erleichtern. Ein Beispiel dafür: Funktionen, die prinzipiell vorgesehen, aktuell aber nicht verfügbar sind, werden schwach kontrastierend dargestellt. Das ist akzeptabel, wenn das ausgeblendete Element für die Orientierung und Bedienung nicht erforderlich ist. Der Prüfschritt ist daher auf die Beschriftungen ausgeblendeter, deaktivierter Bedienelemente in der Regel nicht anwendbar Bei Bereichen, die mit Farbwechseln auf den Mauszeiger reagieren, kann ein Screenshot helfen, den Farbwert im \"Ruhezustand\" zu ermitteln. Alternativ kann man den Fokuszustand über Tastaturbedienung erzeugen und dann den Kontrast mit der Pipette des Contrast Analyzers messen. Wenn Kontraste dünner Schriften zu prüfen sind, gegebenenfalls Schrift vergrößern und die Schriftenglättung ausschalten. Sollen die Farbwerte sehr kleiner Bereiche (feine Schriften oder kleine Icons) ermittelt werden, ist es unter Umständen einfacher, ein Screenshot zu machen und die leistungsfähigeren Zoom- und Pipettenwerkzeuge eines Bildbearbeitungsprogramms zu nutzen. Der Farbkontrast von Textvorbelegungen von Formularfeldern muss die Mindest-Anforderung von 4,5:1 erfüllen. Ausgenommen sind Textvorbelegungen, wenn eine redundante sichtbare Beschriftung die Kontrastanforderung erfüllt. Als Beschriftung zählt bei Suchfeldern auch ein konventionelles Icon, das die Anforderung für Grafikkontraste erfüllt (vergl. Prüfschritt 9.1.4.11). Wenn zusätzliche Informationen (etwa Datumsformat) im Platzhalter-Text stehen, gilt diese Ausnahme nicht, der Platzhalter-Text muss dann den Kontrast von 4,5:1 erfüllen. 3.2 Hinweise zur Prüfung von Seiten mit Styleswitcher Die Kontrastprüfung auf durch Styleswitcher aufgerufenen kontrastreicheren Ansicht erfolgt nur unter folgenden Bedingungen: Das Styleswitcher-Schaltelement (oder der direkte Link zu einer Styleswitcher-Seite) ist deutlich sichtbar am Seitenbeginn platziert. Das Schaltelement hat ein Kontrastverhältnis von mindestens 4.5:1 sofern mit Text beschriftet (bei grafischen Schaltern gilt ein Mindestkontrast von 3,0:1, vergl. Prüfschritt 9.1.4.11). Es erfüllt auch alle anderen Anforderungen an Barrierefreiheit (z. B. Tastaturbedienbarkeit) Die alternative kontrastreichere Ansicht muss dieselben Informationen und dieselbe Funktionalität aufweisen wie die Ausgangsansicht. 3.3 Hinweise zur Messung des Kontrastverhältnisses Für die Bewertung zählt das Kontrastverhältnis ( relative luminosity ) nach einer in den WCAG 2.1 definierten Formel. Die Prüfung der Kontraste für normalen Text und großen Text orientiert sich an den gemessenen Werten der Schriftgröße in Pixel ( Web Developer Toolbar , Funktion Elementinformationen einblenden ), denn eine Messung der tatsächlich dargestellten Punktgröße auf dem Bildschirm mit einem Typometer ist nicht praktikabel. Bei einer Bildschirmauflösung von 96 dpi entsprechen 18 Punkt etwa 24 Pixeln, 14 Punkt entsprechen etwa 18,7 Pixeln. Die Messung des Pixel-Äquivalents ist dadurch gerechtfertigt, dass die bisher getesteten User Agents die Auszeichnung in Pixel und Punkt analog behandeln (im Verhältnis 4:3), also unabhängig von der Bildschirmauflösung, unter der der Text angezeigt wird. Richtiger wäre es, wenn User Agents die Bildschirmauflösung auswerten würden, um die Ausgabegröße zu berechnen (also mehr Pixel pro Punkt bei höher auflösenden Bildschirmen). Für die Prüfung maßgeblich ist der Referenzwert von 96 dpi Bildschirmauflösung, für den die Entsprechung auf jeden Fall gilt. 3.4 Hinweise zu mangelnden Text-Kontrasten nativer Elemente in Browsern (z.B. select , datepicker widgets) Abhängig vom genutzten Browser sind in manchen Zuständen die Kontrastwerte nicht ausreichend. So wird etwa bei select -Elementen in der Darstellung im Chrome-Browser die jeweils ausgewählte Option durch weiße Schrift auf blauem Hintergrund mit einem Kontrast von nur 3,2:1 dargestellt. Formal gesehen wäre deshalb bei der Verwendung nativer Elemente mit Kontrastmängeln dieser Prüfschritt in manchen Browsern nicht erfüllt. Autoren haben auf die Darstellung von manchen nativen Elementen und Widgets zurzeit keine ausreichenden Einflussmöglichkeiten, um für guten Kontrast in allen Zuständen zu sorgen. Würden sie deshalb native Elemente durch kontrastreichere Custom-Elemente ersetzen, entstünden ggf. andere Probleme: die korrekte Darstellung ist von JavaScript abhängig, es treten umgebungsabhängig Probleme bei der Nutzung mit Screenreadern auf, der Code ist umfangreicher und dadurch fehleranfälliger, usw. Da die Nutzung nativer Elemente große Vorteile gegenüber dem Einsatz von Custom-Elementen bietet, gilt dieser Prüfschritt deshalb trotzdem als erfüllt, wenn die Kontrast-Mängel ausschließlich auf die Darstellung von nativen Elementen durch den jeweiligen Browser zurückzuführen sind. 4. Bewertung Erfüllt Das Kontrastverhältnis ( contrast ratio ) zwischen Vorder- und Hintergrundfarbe liegt für Texte unter 18 Punkt (beziehungsweise für fette Texte unter 14 Punkt) bei mindestens 4,5:1. Das Kontrastverhältnis ( contrast ratio ) zwischen Vorder- und Hintergrundfarbe liegt bei Texten in großer Schriftgröße (18 Punkt und größer, 14 Punkt und größer bei fetter Schrift) bei mindestens 3:1. Wenn die Anforderung nur über eine alternative Ansicht erfüllt wird, erfüllt der Styleswicher selbst die Kontrastforderung von 4,5:1 und andere Anforderungen an Barrierefreiheit.",
    "sources": "W3C zum Zusammenhang zwischen px und pt CSS Values and Units Module Level 3: 5.2 Absolute Lengths",
    "classification": "Abgrenzung zu anderen Prüfschritten Prüfschritt 9.1.4.11 \"Kontraste von Grafiken und grafischen Bedienelementen ausreichend\" behandelt den Kontrast von Grafiken Schriftgrafiken (zur Definition vergleiche auch Prüfschritt 9.1.4.5 \"Verzicht auf Schriftgrafiken\" Einordnung des Prüfschritts nach WCAG 2.1 Guideline Guideline 1.4 Distinguishable: Make it easier for users to see and hear content including separating foreground from background Success criterion 1.4.3 Contrast (Minimum) (Level AA) Techniques General Techniques G18: Ensuring that a contrast ratio of at least 4.5:1 exists between text (and images of text) and background behind the text G145: Ensuring that a contrast ratio of at least 3:1 exists between text (and images of text) and background behind the text G148: Not specifying background color, not specifying text color, and not using technology features that change those defaults G174: Providing a control with a sufficient contrast ratio that allows users to switch to a presentation that uses sufficient contrast Failures F83: Failure of Success Criterion 1.4.3 and 1.4.6 due to using background images that do not provide sufficient contrast with foreground text (or images of text) F24: Failure of Success Criterion 1.4.3, 1.4.6 and 1.4.8 due to specifying foreground colors without specifying background colors or vice versa",
    "questions": "Subjektiver Eindruck bei Kontrastmessungen Das Ergebnis der WCAG 2.1 Formel zur Messung des Kontrastverhältnisses entspricht oft nicht dem subjektiven Eindruck. Wie zuverlässig ist es? Zwei Punkte sind hier zu beachten: Der Helligkeitskontrast ist nur einer von drei Einflussgrößen für den Gesamtkontrast. Insofern ist klar, dass das Ergebnis für den Helligkeitskontrast nicht dem subjektiven Eindruck entspricht. Es soll gar nicht dem subjektiven Gesamteindruck entsprechen, denn schließlich geht es darum, ob die Helligkeitsunterschiede der Farben für sich genommen ausreichend kontrastieren. Wenn man normalsichtig ist, entspricht der subjektive Eindruck der Graustufenansicht dagegen schon eher dem Formelergebnis. Farben benachbarter Flächen beeinflussen die Wahrnehmung, kleine und dünne Schriften erscheinen kontrastärmer, es gibt Überstrahleffekte, möglicherweise werden die Kontraste durch Schriftenglättung abgeschwächt. Die Formel berücksichtigt all diese Faktoren nicht. Zumindest wenn es um Texte geht, ist dies auch angemessen. Denn die genannten Einflüsse stehen nicht fest, sie hängen zum Beispiel von der gewählten Schriftgröße ab. Für die Prüfung bedeutet das: Wer mit der formelbasierten Bewertung von Helligkeitskontrasten noch keine Erfahrungen hat, kann sich nicht auf seinen subjektiven Eindruck verlassen. Er muss die Formel fast auf alle Farbkombinationen anwenden."
  },
  {
    "id": "9.1.4.4",
    "title": "9.1.4.4 Text auf 200% vergrößerbar",
    "whatChecked": "Text soll um bis zu 200 Prozent vergrößert werden können, ohne dass dabei Inhalt oder Funktionalität verloren geht. Mindestens eine der folgenden Voraussetzungen soll erfüllt sein: Mit der Zoom-Funktion des Browsers kann die Schrift auf 200% vergrößert werden (dabei bricht die Seite häufig in ein neues Layout um) Über ein Bedienelement oben auf der Seite kann die Schriftgröße vergrößert werden",
    "whyChecked": "Benutzer sollen die Schriftgröße nach ihren Bedürfnissen einstellen können. Die gängigen Desktop-Browser bieten heutezutage die Zoom-Vergrößerung des gesamte Layouts, bei der die Seite häufig in eine responsive Ansicht umbricht.",
    "howChecked": "1. Anwendbarkeit des Prüfschritts Der Prüfschritt ist anwendbar, wenn die Seite Text enthält. 2. Prüfung 2.1 Prüfung der Zoomvergrößerung über Browser-Einstellungen Seite in Firefox aufrufen. Falls nötig unter Ansicht &gt; Zoom die Option Nur Text zoomen deaktivieren. Mithilfe der Web Developer Toolbar die Browserfenstergröße auf 1280x768 einstellen ( Größe ändern &gt; … ). Sechs Mal die Tastenkombination Strg + + drücken, um das Layout auf 200% zu zoomen (alternativ sechs mal Ansicht &gt; Zoom &gt; Vergrößern wählen). Prüfen, ob weiterhin alle Inhalte ohne Überlagerungen dargestellt werden und alle Funktionalitäten bedienbar bleiben. Seite im Chrome Browser aufrufen. Die Browserfenstergröße auf 1280x768 einstellen (entsprechend Firefox-Browserfenster). Über des Einstellungs-Menü und die Option Zoomen 200% auswählen. Prüfen, ob weiterhin alle Inhalte ohne Überlagerungen dargestellt werden und alle Funktionalitäten bedienbar bleiben. 2.2 Prüfung der Schriftvergrößerung durch Bedienelemente auf der Seite Wenn die Seite eigene Bedienelemente bereithält, um die Schriftgröße zu vergrößern: Prüfen, ob die Bedienelemente für Schriftvergrößerung deutlich sichtbar im oberen Bereich der Seite angeboten werden. Prüfen, ob die Schrift mit Hilfe der auf der Seite angebotenen Bedienelemente schrittweise vergrößert werden kann. In der Regel wird durch diese Vergrößerungsoption keine Vergrößerung auf 200% erreicht. Eigene Bedienelemente erfüllen diesen Prüfschritt dann nicht, eine andere Vergrößerungsmöglichkeit muss 200% erreichen. Prüfen, ob sich über die angebotenen Bedienelemente die Ausgangsschriftgröße wiederherstellen lässt. 3. Hinweise 3.1 Hinweise zur Prüfung der Zoomvergrößerung über Browser-Einstellungen Wenn bei Nutzung der Zoom-Funktion am Desktop das Layout für mobile Geräte ausgeliefert wird, sollten auch in diesem Layout alle Anforderungen der Barrierefreiheit erfüllt sein Probleme in dieser Ansicht werden bei den jeweils relevanten Prüfschritten bewertet. 3.2 Hinweise zur Prüfung der Schriftvergrößerung durch Bedienelemente auf der Seite Die Prüfung der Schriftvergrößerung durch Bedienelemente erfolgt nur unter folgenden Bedingungen: Das Bedienelement erfüllt alle Anforderungen an Barrierefreiheit (es ist zum Beispiel tastaturbedienbar, erfüllt die Kontrastanforderungne etc.) 4. Bewertung Erfüllt Der Text lässt sich mit mindestens einer Technik auf 200 % vergrößern, ohne dass es zu Überlappungen oder abgeschnittenen Inhalten kommt und ohne dass Funktionalitäten beeinträchtigt werden. Nicht voll erfüllt Bedienelemente für die Schriftvergrößerung werden auf der Seite angeboten und können den Text auf 200% vergrößern, aber sie sind nicht oben auf der Seite platziert, es kommt bei der Nutzung zu Überlappungen von Text, oder Inhalte werden abgeschnitten.",
    "sources": "WCAG 2.1 über die Skalierung von Text The scaling of content is primarily a user agent responsibility. User agents that satisfy UAAG 1.0 Checkpoint 4.1 allow users to configure text scale. The author’s responsibility is to create Web content that does not prevent the user agent from scaling the content effectively. Authors may satisfy this Success Criterion by verifying that content does not interfere with user agent support for resizing text, including text-based controls, or by providing direct support for resizing text or changing the layout. An example of direct support might be via server-side script that can be used to assign different style sheets. ( Resize text: Understanding SC 1.4.4 ) Die WCAG 2.1 zur Nutzung absoluter und relativer Maßeinheiten für Text (…) specify text font size in em units so that user agents can scale content effectively. Since the em is a property of the font, it scales as the font changes size. If a font-size is specified for the body element, all other elements inherit that value, unless overridden by a more specific selector. When font size is given in absolute units of measurement, such as points or pixels, the Text Size menu commands in Internet Explorer 7 and earlier do not resize the text. Internet Explorer 7 only changes the text size when the CSS is defined in a style element (…)When using inline style with the style attribute, the text size change is not supported. (WCAG 2.1 Technik C14: Using em units for font sizes )",
    "classification": "Abgrenzung zu anderen Prüfschritten Mangelnde Vergrößerbarkeit von Schriftgrafiken: siehe Prüfschritt 9.1.4.5 \"Verzicht auf Schriftgrafiken\" Einordnung des Prüfschritts nach WCAG 2.1 Guideline Guideline 1.4 Distinguishable: Make it easier for users to see and hear content including separating foreground from background Success criterion 1.4.4 Resize text (Level AA) Techniques General Techniques G146: Using liquid layout G178: Providing controls on the Web page that allow users to incrementally change the size of all text on the page up to 200 percent G179: Ensuring that there is no loss of content or functionality when the text resizes and text containers do not change their width CSS-Techniques C12: Using percent for font sizes C13: Using named font sizes C14: Using em units for font sizes C20: Using relative measurements to set column widths so that lines can average 80 characters or less when the browser is resized C28: Specifying the size of text containers using em units C29: Using a style switcher to provide a conforming alternate version Client-side Scripting Techniques SCR34: Calculating size and position in a way that scales with text size Failures F69: Failure of Success Criterion 1.4.4 when resizing visually rendered tex up to 200 percent causes the text, image or controls to be clipped, truncated or obscured F80: Failure of Success Criterion 1.4.4 when text-based form controls do not resize when visually rendered text is resized up to 200%",
    "questions": "Die Vergrößerung der Schrift ist weniger wichtig, wenn die Ausgangsschriftgrößen der Webseite bereits groß genug sind, sollte das nicht berücksichtigt werden? Der BITV-Test berücksichtigt die tatsächlichen Schriftgrößen nicht, geprüft wird nur die Änderbarkeit. Für Seiten mit großen Ausgangsschriften (oder für Seiten, die in großen Schritten vergrößern) ist die Prüfanforderung also nicht so leicht zu erfüllen. Die Begründung: Die BITV verlangt keine Mindestgröße für Schriften. Und was wichtiger ist: es gibt unterschiedliche Auffassungen zur der Frage, wie groß Ausgangsschriftgrößen sein sollen: Idealerweise wären die Ausgangsschriftgrößen aller Webangebote ähnlich. Denn dann könnte jeder Benutzer in seinem Browser die für ihn passende Schriftgröße einstellen. Diese Einstellung müsste nicht geändert werden, sie wäre für alle Webangebote passend. Sehr große Ausgangsschriften sind unter Umständen nicht gut zu nutzen. Und zwar auch für Benutzer, die große Schriften brauchen. Denn diese Benutzer haben ihren Computer oder ihren Browser meist schon so eingerichtet, daß Schriften größer dargestellt werden. Die extrem große Ausgangsschrift ist dann zu viel des Guten. Die Orientierung an im Web üblichen Schriftgrößen ist also sinnvoll. Aber auch große Ausgangsschriften sind vorteilhaft. Auch für Besucher, die nicht wissen, wie man die Schrift vergrößert, sind sie groß genug. Am besten ist es also, wenn sich Webangebote an der Obergrenze der im Web üblichen Schriftgrößen orientieren."
  },
  {
    "id": "9.1.4.5",
    "title": "9.1.4.5 Schriftgrafiken",
    "whatChecked": "Grafiken sollen nicht für die Darstellung von Schriften verwendet werden. Logos sind hiervon ausgenommen.",
    "whyChecked": "Schriftgrafiken, die als Bitmap-Grafik eingebunden werden (z. B. als JPEG, PNG, oder GIF), können nicht oder nur eingeschränkt an Benutzeranforderungen angepasst werden. Ihre Farben können nicht individuell eingestellt werden, auch die individuelle Anpassung der Schriftgröße wirkt nicht auf grafische Schriften. Und bei Zoomvergrößerung werden die Schriftkanten unscharf.",
    "howChecked": "1. Anwendbarkeit des Prüfschritts Der Prüfschritt ist anwendbar, wenn das Webangebot Schriftgrafiken enthält. 2. Prüfung Die Seite im Firefox aufrufen. In der Web Developer Toolbar die Funktion Bilder &gt; Bilder deaktivieren &gt; Alle Bilder deaktivieren aufrufen, um alle Grafiken auszublenden (oder alternativ Bilder &gt; Bilder mit ALT-Attributen ersetzen ). Prüfen, ob dadurch Schrift verschwindet. 3. Hinweise In der Regel nicht negativ bewertet werden grafische Schriften auf Logos oder in Fotos . Ebenfalls nicht negativ bewertet wird, wenn das SVG text -Element in Inline-SVGs verwendet wird. Bei Schriftgrafiken, die den Informationsinhalt im Kontext auch als Text wiedergeben, kann dieser Text als konforme Alternativversion der Schriftgrafik gelten. Das ist zum Beispiel der Fall, wenn Abbildungen von Broschüren, Plakaten oder ähnlichen Dokumenten, die Text im Bild enthalten, als Teaser-Bild verwendet werden und der Titel der Broschüre ebenfalls unmittelbar darunter, darüber oder daneben als Text zu lesen steht. 4. Bewertung Nicht voll erfüllt Für Schalter oder Schaltflächen werden Schriftgrafiken verwendet. Nicht erfüllt Für wichtige Texte, zum Beispiel Überschriften, Menüoptionen oder für Schaltflächen, deren Beschriftung gelesen werden muss, werden Schriftgrafiken verwendet.",
    "sources": "Does SVG text pass WCAG 1.4.5 (Images of Text)? (Léonie Watson, The Paciello Group blog, Dezember 2015) Accessible SVGs in High Contrast Mode (Eric Bailey, CSS-Tricks, June 2017)",
    "classification": "Abgrenzung zu anderen Prüfschritten Die Bereitstellung von Alternativtexten für Schriftgrafiken ist Gegenstand der Prüfschritte 9.1.1.1a \"Alternativtexte für Bedienelemente\" und 9.1.1.1b \"Alternativtexte für Grafiken und Objekte\". Einordnung des Prüfschritts nach WCAG 2.1 Guideline Guideline 1.4 Distinguishable: Make it easier for users to see and hear content including separating foreground from background Success criterion 1.4.5 Images of Text (Level AA) Techniques General Techniques G140: Separating information and structure from presentation to enable different presentations CSS Techniques C22: Using CSS to control visual presentation of text C30: Using CSS to replace text with images of text and providing user interface controls to switch",
    "questions": "Wie ist es mit der Darstellung von Schriftzeichen, die nicht auf allen Computern zur Verfügung stehen? Also zum Beispiel arabische Schriftzeichen: sollten dafür nicht besser Grafiken verwendet werden? Moderne Betriebssysteme stellen die Schriftzeichen aller verbreiteten Sprachen zur Verfügung. In aller Regel sind Schriftzeichen, mit denen ein möglicher Nutzer etwas anfangen könnte, auch installiert. Die grafische Darstellung von Schriftzeichen ist daher nur als zusätzliches Angebot sinnvoll. Im BITV-Test wird nur geprüft, ob Text in Form von Text verfügbar ist. Zusätzliche grafische Angebote werden nicht berücksichtigt. Was ist mit auf Fotos abgebildeten Schriften? Schriftgrafiken sollen nicht verwendet werden, weil die Darstellung des Textes dann nicht mehr flexibel ist. Bei abgebildeten Schriften, also zum Beispiel bei Fotos mit Ladenschildern sind Inhalt und Darstellung zusammengehörig. Dieser Prüfschritt ist also nicht anwendbar. Davon ausgenommen sind allerdings Abbildungen, die wie Schriftgrafiken verwendet werden, also zum Beispiel als Überschriften dienen. Oft ist es nicht möglich, auf Schriftgrafiken zu verzichten, denn das Corporate Design gilt auch für den Webauftritt, und die für Texte verfügbaren Schrifttypen passen nicht. Sicher gibt es gute Gründe für den Einsatz von Schriftgrafiken. Der Einsatz von Schriftgrafiken ist aber auf der anderen Seite aus Sicht der Barrierefreiheit problematisch. Es muss also entschieden werden, ob das einheitliche Corporate Design wichtiger ist, als die barrierefreie Zugänglichkeit des Webauftritts. Wenn die barrierefreie Zugänglichkeit der im Webauftritt bereitgestellten Inhalte Priorität haben soll, wird es erforderlich sein, das Corporate Design anzupassen oder auf seinen durchgängigen Einsatz zu verzichten. Wie wird Text in Firmenlogos bewertet? In diesem Prüfschritt geht es um die Verwendung von grafischen Schriften für Texte, Überschriften und Bedienelemente. Das Firmenlogo ist nicht relevant, so lange es nicht (oder nur zusätzlich) als Überschrift oder Bedienelement eingesetzt wird."
  },
  {
    "id": "9.2.1.1",
    "title": "9.2.1.1 Ohne Maus nutzbar",
    "whatChecked": "Die Webseite soll auch ohne Maus - also ausschließlich mit der Tastatur - zu benutzen sein.",
    "whyChecked": "Die Bedienung soll geräteunabhängig möglich sein. Das bedeutet: Sie muss sowohl mit der Maus als auch mit der Tastatur möglich sein. Denn auch andere Spezialgeräte verhalten sich so wie eine Maus oder wie eine Tastatur. Probleme gibt es meistens mit der Tastaturbedienung, denn die Mehrzahl der Webnutzer arbeitet mit der Maus, daher wird oft nur an die gedacht. Auf die Tastaturbedienbarkeit angewiesen sind zum Beispiel viele motorisch eingeschränkte Menschen oder Blinde.",
    "howChecked": "1. Anwendbarkeit des Prüfschritts Der Prüfschritt ist anwendbar, wenn der Webauftritt interaktive Elemente enthält. 2. Prüfung Seite im Firefox Browser aufrufen. Mit der Tabulatortaste die Links und Formularelemente durchgehen. Prüfen, ob alle wesentlichen Links und Formularelemente erreicht und benutzt werden können Falls die Seite Elemente enthält, die wie Bedienelemente aussehen, jedoch nicht mit der Tabulatortaste angesteuert werden, prüfen, ob diese Elemente auf die Maus reagieren (zum Beispiel mit Bewegung, Vergrößerung, Einblenden von weiteren Inhalten). Falls die Seite scrollbare Bereiche enthält, sollen nicht sichtbare Inhalte dieser Bereiche auch über die Tastatur erreichbar sein. Seite im Chrome Browser aufrufen und Schritte 2 bis 5 wiederholen. 3. Hinweise 3.1 Allgemeine Hinweise Prüfende müssen mit der Funktionsweise der eingesetzten Browser vertraut sein, sie müssen wissen, welche Tasten und Tastenkombinationen für die Tastaturbedienung vorgesehen sind. Probleme bei der Bedienung werden in der Regel durch die Verwendung von JavaScript verursacht. Die Prüfung erfolgt also bei eingeschaltetem JavaScript. Unwesentlich können zum Beispiel Funktionen sein, die schon vom Browser selbst angeboten werden (beispielsweise \"Fenster schließen\"). Auch die Tastaturbedienbarkeit von Elementen ohne Fokushervorhebung wird geprüft. Zur Anzeige des Fokus kann ein geignetes Bookmarklet wie Force Show Keyboard Focus genutzt werden. Wichtig in diesem Zusammenhang: Wenn das Browserfenster nicht den Fokus hat, darf man nicht einfach hinein klicken und dann erst mit der Tastaturbedienung anfangen. Der Fokus muss vielmehr per Tastatur (F6) zum Browserfenster bewegt werden. Auswahllisten ohne Submit-Button, die auf “onchange” reagieren, können ggf. mit den Pfeiltasten allein nicht bedient werden, da immer schon die erste Listenoption ausgelöst wird. Um solche Auswahllisten durchzublättern, muss man sie ggf. zunächst mit der Tastenkombination \"Alt + Pfeil nach unten\" öffnen. Dann kann man mit den Pfeiltasten nach oben und unten durch die Optionen blättern und mit der Eingabetaste eine Option auswählen. Die Nutzung per Tastatur muss nicht genau der Nutzung per Maus entsprechen. Es ist beispielsweise kein Mangel, wenn per Maus über Ausklappmenüs in einem Schritt tiefe Links aufgerufen werden können, per Tastatur aber für den Aufruf der betreffenden Seiten mehrere Schritte erforderlich sind. Manche Elemente lassen sich ggf. bei eingeschaltetem Screenreader NVDA nicht aktivieren (oder nur bei zusätzlichem Drücken der alt -Taste). Dies ist in der Regel auf fehlerhafte ARIA-Auszeichnung zurückzuführen und wird in Prüfschritt 9.4.1.2 \"Name, Rolle, Wert verfügbar\" bewertet. 3.2 Hinweis zu Drag-and-Drop-Funktionen Für wichtige Bedienfunktionen, die mittels Drag-and-Drop bedienbar sind, müssen auch tastaturnutzbare Alternativen angeboten werden. 4. Bewertung Erfüllt Alle wesentlichen Inhalte und Funktionen sind in Firefox und Chrome im Prinzip erreichbar und bedienbar. Nicht erfüllt Wesentliche Inhalte und Funktionen sind in Firefox oder Chrome mit der Tastatur nicht erreichbar oder nicht bedienbar.",
    "sources": "Die WCAG 2.1 zur Tastaturbedienbarkeit If all functionality can be achieved using the keyboard, it can be accomplished by keyboard users, by speech input (which creates keyboard input), by mouse (using on-screen keyboards), and by a wide variety of assistive technologies that create simulated keystrokes as their output. No other input form has this flexibility or is universally supported and operable by people with different disabilities, as long as the keyboard input is not time-dependent. Note that providing universal keyboard input does not mean that other types of input should not be supported. Optimized speech input, optimized mouse/pointer input, etc., are also good. The key is to provide keyboard input and control as well. Some devices do not have native keyboards? for example, a PDA or cell phone. If these devices have a Web browsing capability, however, they will have some means of generating text or \"keystrokes.\" This guideline uses the term \"keyboard interface\" to acknowledge that Web content should be controlled from keystrokes that may come from a keyboard, keyboard emulator, or other hardware or software that generates keyboard or text input. ( Keyboard Accessible: Understanding Guideline 2.1 )",
    "classification": "Abgrenzung zu anderen Prüfschritten Dieser Prüfschritt betrifft die Auslösbarkeit von Funktionen und Links auch über die Tastatur. Tastaturfallen sind Gegenstand von Prüfschritt 9.2.1.2 \"Keine Tastaturfalle\" Bei skriptgenerierten oder über Skripts eingeblendeten Elementen (etwa ausklappenden Texten oder Lightboxen) ist die sinnvolle Reihenfolge im Quellcode Gegenstand von Prüfschritt 9.1.3.2 \"Sinnvolle Reihenfolge\". Die Fokus hervorhebung ist Gegenstand von Prüfschritt 9.2.4.7 \"Aktuelle Position des Fokus deutlich\". In diesen Prüfschritt spielt die Fokus-Reihenfolge, in der Links und Formularelemente angesteuert werden, keine Rolle. Die Sinnvolle Fokus reihenfolge wird in 9.2.4.3 \"Schlüssige Reihenfolge bei der Tastaturbedienung\" bewertet. Einordnung des Prüfschritts nach WCAG 2.1 Guideline Guideline 2.1 Keyboard Accessible: Make all functionality available from a keyboard. Success criteria 2.1.1 Keyboard (Level A) Techniques General Techniques G90: Providing keyboard-triggered event handlers G202: Ensuring keyboard control for all functionality HTML Techniques H91: Using HTML form controls and links Scripting Techniques SCR2: Using redundant keyboard and mouse event handlers SCR20: Using both keyboard and other device-specific functions SCR27: Reordering page sections using the Document Object Model SCR29: Adding keyboard-accessible actions to static HTML elements SCR35: Making actions keyboard accessible by using the onclick event of anchors and buttons Failures F42: Failure of Success Criterion 1.3.1 and 2.1.1 due to using scripting events to emulate links in a way that is not programmatically determinable F54: Failure of Success Criterion 2.1.1 due to using only pointing-device-specific event handlers (including gesture) for a function F55: Failure of Success Criteria 2.1.1, 2.4.7, and 3.2.1 due to using script to remove focus when focus is received"
  },
  {
    "id": "9.2.1.2",
    "title": "9.2.1.2 Keine Tastaturfalle",
    "whatChecked": "Kann der Tastaturfokus auf ein Element der Seite bewegt werden, muss er auch von diesem Element wieder wegbewegt werden können. Der Inhalt darf keine Tastaturfalle erzeugen.",
    "whyChecked": "Die Bedienung soll geräteunabhängig möglich sein. Das bedeutet: Sie muss sowohl mit der Maus als auch mit der Tastatur möglich sein. Auf die Tastaturbedienbarkeit angewiesen sind zum Beispiel viele motorisch eingeschränkte Menschen oder Blinde.",
    "howChecked": "1. Anwendbarkeit des Prüfschritts Der Prüfschritt ist immer anwendbar. 2. Prüfung Seite im Firefox Browser aufrufen. Mit der Tabulatortaste die Links und Formularelemente durchgehen. Prüfen, ob alle Links und Formularelemente erreicht und wieder verlassen werden können. Seite in Chrome aufrufen und Schritte 1 bis 2 wiederholen. 3. Hinweise 3.1 Allgemeine Hinweise Probleme bei der Bedienung werden in der Regel durch die Verwendung von JavaScript verursacht. Die Prüfung erfolgt also bei eingeschaltetem JavaScript. 3.2 Hinweise zu Tastaturfallen Wenn die Tastaturfalle verhindert, dass man Inhalte nach der Tastaturfalle erreicht, dann ist eventuell auch Prüfschritt 9.2.1.1 \"Ohne Maus nutzbar\" nicht erfüllt! 4. Bewertung Erfüllt Es gibt keine Tastaturfallen. Nicht erfüllt Wesentliche Inhalte und Funktionen sind in Chrome oder in Firefox aufgrund einer Tastaturfalle mit der Tastatur nicht erreichbar oder nicht bedienbar.",
    "classification": "Einordnung des Prüfschritts nach WCAG 2.1 Guideline Guideline 2.1 Keyboard Accessible: Make all functionality available from a keyboard. Success criteria 2.1.2 No Keyboard Trap (Level A) Techniques General Techniques G21: Ensuring that users are not trapped in content Flash Techniques FLASH17: Providing keyboard access to a Flash object and avoiding a keyboard trap Failures F10: Failure of Success Criterion 2.1.2 and Conformance Requirement 5 due to combining multiple content formats in a way that traps users inside one format type"
  },
  {
    "id": "9.2.1.4",
    "title": "9.2.1.4 Tastatur-Kurzbefehle abschaltbar oder anpassbar",
    "whatChecked": "Wenn Webseiten Tastaturkurzbefehle über Einzeltasten (Buchstaben, Zahlen, Satzzeichen oder Symbole) implementieren, können diese entweder abgeschaltet oder auf eine Tastenkombination mit Modifikator-Tasten umgestellt werden, oder sie sind nur aktiv für bestimmte Schnittstellen-Elemente, wenn diese den Fokus haben.",
    "whyChecked": "Tastaturkurzbefehle sind für Menschen, die am Computer oder einem mobilen Gerät die Spracheingabe benutzen, häufig problematisch. Spracheingaben können unerwartet Befehle für Funktionen auslösen, der Nutzungskontext geht dadurch verloren.",
    "howChecked": "1. Anwendbarkeit des Prüfschritts Der Prüfschritt ist immer anwendbar. 2. Prüfung Seite neu laden. Wenn dies den Fokus auf ein Interface-Element setzt (z. B. auf ein Eingabefeld), auf einen leeren Bereich der Seite klicken, um sicherzustellen, dass keine Interface-Elemente fokussiert sind. Mit Ausnahme der Modifikator- und Steuertasten wie STR, ALT, ENTER, Tab, Pfeiltasten und Funktionstasten F1-F12, nacheinander auf alle Tastaturtasten drücken, d. h. auf alle Nummern- Buchstaben-, Symbol- und Zeichensetzungs-Tasten. Die Umschalttaste halten und die gleichen Tasten erneut betätigen. Falls einzelne Tasten Funktionen auslösen, prüfen, ob die Website oder App Einstellungen bereithält, um diese Tastaturkurzbefehle über Einzeltasten abzuschalten oder auf Tastaturkurzbefehle mit einer Modifikator-Taste zu mappen. 3. Hinweise Die Anforderung gilt nicht, wenn die Tastaturkurzbefehle nur aktiv sind, sobald bestimmte Interface-Elemente den Fokus haben, etwa ein Auswahllisten-Element bzw. `select`Hier dient z. B. das Drücken einer Buchstabentaste zur schnellen Navigation innerhalb der Auswahllisten-Optionen. Über das Anzeigen von Seitenskripten und das Suchen nach typischen Tastatur-Event-Handlern wie document.addEventListener oder das Vorhandensein der .keycode -Eigenschaft lässt sich ggf. das Vorhandensein von Skripten überprüfen, welche auf Tasteneingaben reagieren, bei denen nicht Modifikator-Tasten wie ALT oder STR gleichzeitig gedrückt werden. Da es mehrere Möglichkeiten gibt, Tastatur-Events zu implementieren, ist diese Methode aber nicht als zuverlässig zu betrachten. Einige Browser verwenden Tastenkombinationen mit der Umschalttaste. So öffnet Firefox eine Seitensuche, wenn man Umschalttaste + / drückt, und eine Suche in Seitenlinks, wenn man Umschalttaste + ' drückt. In diesen Fällen ist es notwendig, die ESC-Taste zu drücken oder auf einen leeren Teil der Seite zu klicken, um den Fokus aus der Browser-Sucheingabe zu entfernen. 4. Bewertung Prüfschritt erfüllt Durch das Drücken der Tasten geschehen keinerlei Änderungen des Inhalts oder des Kontexts. Es gibt Tastatur-Kurzbefehle über Einzeltasten, aber diese sind über Einstellungen der Website oder App abschaltbar oder auf Tastenkombinationen mit Modifikator-Tasten umstellbar. Tastaturkurzbefehle über Einzeltasten sind nur wirksam, wenn bestimmte interaktive Elemente den Fokus haben (z.B. Auswahllisten).",
    "sources": "Bookmarklet \"Tastatur-Kurzbefehle auslösen\" von Prüfstelle T-Systems MMS kann ggf. zusätzlich eingesetzt werden, um der Reihe nach alle erforderlichen Tasten auszulösen. Dabei muss die Seite genau beobachtet werden, ob sich etwas ändert bzw. geändert hat. Die Konsole der Entwickler-Tools zeigt die simulierten Eingaben. Understanding Success Criterion 2.1.4: Character Key Shortcuts (zur Zeit nur auf Englisch verfügbar)",
    "classification": "Einordnung des Prüfschritts nach WCAG 2.1 Guideline Guideline 2.1 Keyboard Accessible: Make all functionality available from a keyboard Success criterion 2.1.4 Character Key Shortcuts (Level A) Sufficient Techniques G217: Providing a mechanism to allow users to remap or turn off character key shortcuts Failures F99: Failure of Success Criterion 2.1.4 due to implementing character key shortcuts that cannot be turned off or remapped",
    "questions": "Das eingebundene Video reagiert auf Tastaturkurzbefehle über Einzeltasten, z.B: \"k\" zum Pausieren/Abspielen und \"m\" zum Stummschalten. Ist das als Verstoß gegen 2.1.4 \"Tastatur-Kurzbefehle abschaltbar oder anpassbar\" zu werten? Diese Tastaturkurzbefehle sind für Tastaturnutzer zweifellos hilfreich. Ob dadurch Nachteile für Spracheingabenutzer entstehen, versuchen wir zur Zeit zu klären. Noch offen ist, ob ein Video als User Interface Component im Sinne der normativen Anforderung interpretiert werden kann. Es gibt dazu eine längere Diskussion in dem Github-Issue der Accessibility Guidelines Working Group . Solange diese Frage nicht klar entschieden ist, sollten Tastaturkurzbefehle auf fokussierten Videos nicht als Fehler bewertet werden."
  },
  {
    "id": "9.2.2.1",
    "title": "9.2.2.1 Zeitbegrenzungen anpassbar",
    "whatChecked": "Seiteninhalte werden ohne Zeitbegrenzung angezeigt, die Zeitbegrenzung ist abschaltbar, oder sie kann verlängert werden. Dies betrifft etwa: zeitbegrenzte Dialoge, welche Nutzer zu Entscheidungen auffordern Online-Transaktionen mit begrenzter Session-Dauer und automatischem Ausloggen bei längerer Inaktivität das automatische Neu-Laden von Seiten oder die zeitverzögerte Weiterleitung zu einer anderen Seite Wichtige Statusmeldungen, die nach kurzer Zeit automatisch schließen",
    "whyChecked": "Die Auto-Aktualisierung durch das Neu-Laden einer Seite kann bei Screenreader-Nutzern das Vorlesen der Seiteninhalte unterbrechen und unvermittelt von vorne beginnen. Bei zeitverzögerten Weiterleitungen sollen Nutzer etwas lesen, bevor sie auf eine andere Seite weitergeleitet werden. Die Zeitbegrenzung macht die zwischendurch angezeigte Seite für viele nicht zugänglich. Wenn Zeitbegrenzungen sich nicht abschalten oder verlängern lassen, können Nutzer, die mehr Zeit für Eingaben brauchen, Online-Transaktionen oft nicht rechtzeitig abschließen.",
    "howChecked": "1. Anwendbarkeit des Prüfschritts Die Prüfung auf Auto-Aktualisierung und Weiterleitung (Abschnitt 2.1 Prüfung auf Auto-Aktualisierung durch Neu-Laden der Seite und Weiterleitung auf andere URL ) ist immer anwendbar. Die Prüfung auf Abschaltbarkeit oder Verlängerbarkeit von Zeitbegrenzungen (Abschnitt [2.2Prüfung auf Abschaltbarkeit oder Verlängerbarkeit von Zeitbegrenzungen] ) ist nur anwendbar auf Seiten mit Transaktionen, welche üblicherweise aus datenschutzrechtlichen oder sicherheitsrelevanten Gründen Zeitbegrenzungen unterliegen (etwa beim Online-Banking oder Online-Shops). Die Prüfung von Zeitbegrenzungen bei wichtigen Statusmeldungen ist immer anwendbar, wenn (oft als Ergebnis einer Interaktion) Meldungen erscheinen und nach einer Zeitspanne (meist nach wenigen Sekunden) automatisch wieder verschwinden. 2. Prüfung 2.1 Prüfung auf Auto-Aktualisierung durch Neu-Laden der Seite und Weiterleitung auf andere URL Quelltextanalyse: Vorhandensein des Markups prüfen. Taucht http-equiv=\"refresh\" im Kopfbereich der Seite auf, dann muss content=\"0\" sein (also eine Weiterleitung ohne Zeitverzögerung auslösen bzw. keine Aktualisierung auslösen). 2.2 Prüfung auf Abschaltbarkeit oder Verlängerbarkeit von Zeitbegrenzungen 2.2.1 Zeitbegrenzung wird angezeigt Seiten können Zeitbegrenzungen auf verschiedene Weise anzeigen: Die verbleibende Zeitspanne (Session-Dauer) einer Transaktion wird angezeigt. Jede Interaktion setzt die Session-Dauer automatisch zurück. Rechtzeitig vor Ablauf der Zeit erscheint ein Dialog zum Verlängern der Zeitbegrenzung. Ein Kontrollelement erlaubt das Abschalten oder Verlängern der Zeitbegrenzung. Nutzer haben genügend Zeit, das Kontrollelement vor dem Ablauf der Zeit zu finden. 2.2.2 Nicht unmittelbar sichtbare Zeitbegrenzungen Wenn zu erwarten ist, dass eine Seite eine Zeitbegrenzung hat, aber weder eine laufende Anzeige der Session-Dauer noch ein Kontrollelement zum Abschalten oder Verlängern angeboten werden: Seiten, die üblicherweise eine begrenzte Session-Dauer haben (z. B. Online-Banking, Bezahlvorgänge von Shops) in dem gerade nicht zur Prüfung genutzten Browser aufrufen und Daten eingeben. Den Browser für 20 Minuten nicht nutzen. Nach Ablauf der 20 Minuten prüfen, ob die Seite noch verfügbar ist und Daten erfolgreich abgeschickt werden können. Wenn die nach 20 Minuten sichtbare Seite mitteilt, dass die Zeit abgelaufen und die Session beendet worden ist, Seite erneut laden und abwarten, ob auf der Seite ein Dialog erscheint, der rechtzeitig (mindestens 20 Sekunden vor Ablaufen der Zeit) eine Verlängerungsmöglichkeit der Zeitbegrenzung anbietet. 2.3 Prüfung von Zeitbegrenzungen bei wichtigen Statusmeldungen Bieten Statusmeldungen für Nutzende wesentliche Informationen, die nicht auf andere Wesie verfügbar sind, und schließen automatisch nach kurzer Zeit? Für den Nutzer nicht wesentliche Statusmeldungen sind solche, die ein erwartetes Ergebnis einer Interaktion zusätzlich vermitteln, etwa, nach Aktivieren eines Schalters \"Sichern\" die Meldung \"Ihr Dokument wurde gespeichert\", oder, nach dem Abschicken eines Formulars, die Meldung \"Ihre Angaben wurden übermittelt\" oder ähnlich. Das automatische Schließen solcher nicht wesentlichen Meldungen sollte nicht negativ bewertet werden (siehe 3. Hinweise, 3.1 Zeitbegrenzte Stuatusmeldungen). 3. Hinweise 3.1 Zeitbegrenzte Stuatusmeldungen Zeitbegrenzte Statusmeldungen müssen nicht zeitlich einstellbar sein, wenn es eine alternative Informationsmöglichkeit ohne Zeitbegrenzung gibt. Beispiel: Eine webbasierter E-Mail-Client benachrichtigt über den Eingang einer neuen E-Mail mit einer temporären Meldung (Toast-Meldung). Die Benutzer können den Eingang von E-Mails auch auf andere Weise feststellen, z. B. durch Abrufen des Posteingangs. Wenn Nutzende keine andere Möglichkeit haben, die gleichen Informationen zu finden (oder die gleiche Funktion auszuführen), dann müssen Meldungen dieses Erfolgskriterium erfüllen, damit die Benutzer genügend Zeit haben, um auf die Informationen zuzugreifen. 3.2 Externe Zeitbegrenzungen Dieser Prüfschritt bezieht sich nur auf vom Inhalt hervorgerufene Zeitbegrenzungen (sowohl serverseitig als auch clientseitig). Externe Zeitbegrenzungen, etwa des User Agents, sind nicht im Einflussbereich des Autors und damit nicht Gegenstand der BITV. Ob auf einer Seite eine Zeitbegrenzung tatsächlich vorliegt, ist aus dem Quelltext der Seite oft nicht zu entnehmen, denn die Zeitbegrenzung kann auch serverseitig gesetzt werden. 4. Bewertung Nicht erfüllt Die Seite wird über Reload ( http-equiv=\"refresh\" ) periodisch aktualisiert. Es gibt eine verzögerte Weiterleitung auf eine andere Seite. Der Ablauf einer Zeitbegrenzung wird nicht angezeigt. Erst mit dem Abschicken des Formulars wird darüber informiert, dass die Sessiondauer überschritten wurde. Nicht voll erfüllt Die Zeitbefristung der Session wird angezeigt und Nutzer-Aktivitäten setzen die Frist zurück, es gibt jedoch spätestens 20 Sekunden vor Ablauf der Frist keinen Dialog, der darüber informiert und Möglichkeiten zur Verlängerung bietet. Für das Auffinden des Kontrollelements zum Abschalten der Zeitbegrenzung steht nicht genug Zeit zur Verfügung.",
    "classification": "Abgrenzung von anderen Prüfschritten Dieser Prüfschritt 9.2.2.1 betrifft Zeitbegrenzungen, welche die ganze Seite betreffen, unabhängig davon, ob die zeitbegrenzten Inhalte bewegt sind (also ablenken) oder nicht. Geprüft wird, ob solche Zeitbegrenzungen abschaltbar oder verlängerbar sind. Der Prüfschritt 9.2.2.2 \"Bewegte Inhalte abschaltbar\" betrifft dagegen bewegte oder autoaktualisierte Inhalte, die Nutzer ablenken oder durch ihren vorgegebenen zeitlichen Ablauf für bestimmte Nutzer schwierig wahrnehmbar sind. Hier wird geprüft, ob Nutzer die Möglichkeit haben, bewegte oder autoaktualisierte Inhalte anzuhalten oder auszublenden. Wenn es ein Kontrollelement oder einen dokumentierten Tastaturbefehl gibt, um Zeitbegrenzungen abzuschalten oder zu verlängern, wird in diesem Prüfschritt lediglich geprüft, ob Nutzer genügend Zeit haben, diesen Mechanismus zu finden und zu nutzen. In anderen Prüfkriterien wird geprüft, ob der Mechanismus selbst zugänglich und verständlich ist (etwa in 9.2.1.1 \"Ohne Maus nutzbar\" oder 9.1.3.1h \"Beschriftung von Formularelementen programmatisch ermittelbar\"). Einordnung des Prüfschritts nach WCAG 2.1 Guideline Guideline 2.2 Enough Time: Provide users enough time to read and use content. Success criteria 2.2.1 Timing Adjustable (Level A) Techniques General Techniques G133: Providing a checkbox on the first page of a multipart form that allows users to ask for longer session time limit or no session time limit G180: Providing the user with a means to set the time limit to 10 times the default time limit G198: Providing a way for the user to turn the time limit off Client-side Scripting Techniques SCR16: Providing a script that warns the user a time limit is about to expire AND SCR1: Allowing the user to extend the default time limit Failures F40: Failure of Success Criterion 2.2.1 and 2.2.4 due to using meta redirect with a time limit F41: Failure of Success Criterion 2.2.1, 2.2.4, and 3.2.5 due to using meta refresh with a time-out F58: Failure of Success Criterion 2.2.1 due to using server-side techniques to automatically redirect pages after a time-out",
    "questions": "Wie kann durch ein Kontrollelement auf der Webseite sichergestellt werden, dass der Benutzer eine Zeitbegrenzung oder Autoaktualisierung auf Wunsch abschalten kann? Wichtig ist, dass die Autoaktualisierung oder das Ende der Zeitbegrenzung nicht erfolgt, bevor der Benutzer auf ein entsprechendes Kontrollelement zum Abschalten gestoßen ist. Daher sollte die Schaltfläche oder der Link zum Abschalten oder Verlängern am Seitenbeginn oder nahe am Seitenbeginn angezeigt werden, damit er von Menschen mit verschiedensten Behinderungen auch gefunden und aktiviert werden kann. Dennoch ist nicht sicher, dass Benutzer die Option zum Abschalten der Autoaktualisierung oder Zeitbegrenzung finden und verstehen."
  },
  {
    "id": "9.2.2.2",
    "title": "9.2.2.2 Bewegte Inhalte abschaltbar",
    "whatChecked": "Ablenkung durch blinkende oder sich bewegende Elemente soll vermieden werden, auf 5 Sekunden begrenzt sein oder abschaltbar sein. Bewegte oder automatisch aktualisierte Inhalte, z. B. periodisch wechselnde Nachrichten-Aufmacher (Teaser) sollen zum Lesen anhaltbar sein.",
    "whyChecked": "Viele Benutzer haben Schwierigkeiten, Seiten zu nutzen, die mit blinkenden oder sich bewegenden Elementen (zum Beispiel Werbung) ausgestattet sind. Solche Elemente lenken ab. Der Benutzer kann sich möglicherweise nicht auf andere Elemente des Webauftritts konzentrieren. Viele Benutzer haben außerdem Schwierigkeiten, blinkende oder bewegte Inhalte zu lesen, etwa bei Newstickern. Interaktive bewegte Inhalte können für Benutzer mit motorischen Einschränkungen problematisch sein. Automatisch aktualisierte Nachrichten-Aufmacher (Teaser) ändern unangekündigt die angezeigten Inhalte und stören dadurch die Wahrnehmung und Orientierung. Das beeinträchtigt besonders Nutzer von Bildschirmvergrößerungssoftware und solche, die mehr Zeit zum Lesen brauchen. Bei Screenreader-Nutzern kann es zu unvermittelten Fokus-Verschiebungen kommen. Einige Bewegungen (etwa von animated gifs) lassen sich über die esc-Taste beenden, aber die meisten Nutzer kennen diese Funktion nicht. Auch das Deaktivieren von JavaScript führt in manchen Fällen zum Beenden der Bewegung, etwa von skriptgesteuerten Tickern oder wechselnden Teasern. Dieses Deaktivieren ist aber zunehmend problematisch, da sich immer mehr Websites auf aktiviertes JavaScript verlassen. Selbst wenn die Website dann noch funktioniert, wissen Nutzer nicht, was ihnen ohne JavaScript entgeht. Schaltflächen zum Beenden der Bewegung sind problematisch. Sie müssen erst einmal gefunden werden, bevor Benutzer mit ihnen die Bewegung stoppen können. Da sie zur Zeit sehr selten eingesetzt werden, erwarten und erkennen Benutzer sie häufig nicht.",
    "howChecked": "1. Anwendbarkeit des Prüfschritts Der Prüfschritt ist immer anwendbar, wenn bewegte Inhalte gleichzeitig mit anderen nicht bewegten Inhalten (etwa die Navigation oder statische Inhalte) dargestellt werden. Nicht anwendbar ist der Prüfschritt auf essenziell wichtige Aktualisierungen von Inhalten, zum Beispiel, wenn die verbleibende Zeit einer Session heruntergezählt wird oder die Höhe eines Auktionsgebots dynamisch aktualisiert wird. 2. Prüfung Falls die Seite blinkende, bewegte oder automatisch aktualisierte Inhalte enthält, zum Beispiel Nachrichten-Aufmacher (Teaser), laufende Texte, oder animierte Werbung: Prüfen, ob die Bewegung innerhalb von 5 Sekunden nach Anzeige der Seite von selbst aufhört. Falls das nicht der Fall ist: Feststellen, ob sich auf der Seite eine Schaltfläche befindet, mit der man die Bewegung stoppen kann, eine gleichwertige nicht-animierte Version der Seite laden kann, oder ob es eine klare Anweisung gibt, wie die Bewegung mit der Tastatur angehalten werden kann. Prüfen, ob das Aktivieren der Schaltfläche oder des Tastatur-Shortcuts die Bewegung tatsächlich anhält und sie auch nicht wieder von allein erneut beginnt. Zusätzlich sollte geprüft werden, ob das erneute Aktivieren der Schaltfläche die Bewegung wieder in Gang setzt, und zwar (bei Videos oder Animationen) von dem Punkt aus, der beim letztem Anhalten erreicht wurde. Ist das nicht der Fall, sollte dies angemerkt werden. Dieser Mangel ist aber nicht als Verstoß gegen die Anforderung dieses Prüfschritts zu verstehen. 3. Hinweise Die Schaltfläche oder die Anweisung, mit der man die Bewegung anhalten kann, muss eindeutig sein und deutlich sichtbar am Seitenbeginn oder im direkten Kontext des bewegten Inhalts platziert sein. Alle Inhalte müssen nach dem Anhalten der Bewegung verfügbar bleiben. Es spielt keine Rolle, ob es sich bei den blinkenden oder sich bewegenden Inhalten um Werbung oder um redaktionelle Inhalte handelt. 4. Bewertung Nicht voll erfüllt Bewegung endet nicht von allein, bewegte und automatisch aktualisierte Inhalte können nicht angehalten, ausgeblendet oder in ihrer Aktualisierungsfrequenz angepasst werden. Das Element zum Anhalten der Bewegung befindet sich nicht im unmittelbaren Kontext des sich bewegenden Elements oder am Beginn der Ansicht, oder erfüllt nicht alle Anforderungen der Barrierefreiheit.",
    "sources": "Die WCAG 2.1 zum Anhalten und Fortsetzen bei aufgezeichneten Inhalten und Echtzeit-Inhalten Content that is paused can either resume in real-time or continue playing from the point in the presentation where the user left off. Pausing and resuming where the user left off is best for users who want to pause to read content and works best when the content is not associated with a real-time event or status. Note : See Understanding Success Criterion 2.2.1 Timing Adjustable for additional requirements related to time-limits for reading. Pausing and jumping to current display (when pause is released) is better for information that is real-time or \"status\" in nature. For example, weather radar, a stock ticker, a traffic camera, or an auction timer, would present misleading information if a pause caused it to display old information when the content was restarted. Note : Hiding content would have the same result as pausing and jumping to current display (when pause is released). ( Pause, Stop, Hide: Understanding SC 2.2.2 )",
    "classification": "Abgrenzung der Prüfschritte 9.2.2.1 und 9.2.2.2 Dieser Prüfschritt 9.2.2.2 betrifft bewegte Inhalte, die Benutzer ablenken oder durch ihren vorgegebenen zeitlichen Ablauf für bestimmte Benutzer schwierig wahrnehmbar sind. Hier wird geprüft, ob Benutzer die Möglichkeit haben, bewegte Inhalte anzuhalten oder auszublenden. Der Prüfschritt 9.2.2.1 \"Zeitbegrenzungen anpassbar\" betrifft Zeitbegrenzungen, welche die ganze Seite betreffen, unabhängig davon, ob die zeitbegrenzten Inhalte bewegt sind (also ablenken) oder nicht. Geprüft wird, ob solche Zeitbegrenzungen abschaltbar oder verlängerbar sind. Zur Abgrenzung von Blinken und Flackern siehe Abschnitt \"Quellen\" bei Prüfschritt 9.2.3.1 \"Verzicht auf Flackern\". Einordnung des Prüfschritts nach WCAG 2.1 Guideline Guideline 2.2 Enough Time: Provide users enough time to read and use content. Success criterion 2.2.2 Pause, Stop, Hide (Level A) Techniques General Techniques G4: Allowing the content to be paused and restarted from where it was paused G11: Creating content that blinks for less than 5 seconds G152: Setting animated gif images to stop blinking after n cycles (within 5 seconds) G186: Using a control in the Web page that stops moving, blinking, or auto-updating content G191: Providing a link, button, or other mechanism that reloads the page without any blinking content Scripting Techniques SCR22: Using scripts to control blinking and stop it in five seconds or less SCR33: Using script to scroll content, and providing a mechanism to pause it Failures F4: Failure of Success Criterion 2.2.2 due to using text-decoration:blink without a mechanism to stop it in less than five seconds F7: Failure of Success Criterion 2.2.2 due to an object or applet , such as Java or Flash, that has blinking content without a mechanism to pause the content that blinks for more than five seconds F16: Failure of Success Criterion 2.2.2 due to including scrolling content where movement is not essential to the activity without also including a mechanism to pause and restart the content F47: Failure of Success Criterion 2.2.2 due to using the blink element F50: Failure of Success Criterion 2.2.2 due to a script that causes a blink effect without a mechanism to stop the blinking at 5 seconds or less"
  },
  {
    "id": "9.2.3.1",
    "title": "9.2.3.1 Verzicht auf Flackern",
    "whatChecked": "Die Seite enthält keine Elemente, die in einem Zeitraum von einer Sekunde häufiger als dreimal aufblitzen.",
    "whyChecked": "Bei Menschen mit Epilepsie kann längeres Flackern in bestimmten Frequenzen einen Anfall auslösen.",
    "howChecked": "1. Anwendbarkeit des Prüfschritts Der Prüfschritt ist immer anwendbar. 2. Prüfung Gibt es auf der Webseite flackernde Inhalte, die nicht spätestens nach dreimaligem Flackern in einem Zeitraum von einer Sekunde aufhören? Zur Einschätzung der Größe des flackernden Bereichs kann, wenn nötig, die WCAG 2.1 Formel 1 herangezogen werden. 3. Hinweis zur Abwertung Wenn die Seite größere flackernde Elemente enthält, wird das Gesamtergebnis der Prüfung abgewertet. Flackern wird dadurch hervorgerufen, dass die Farbe oder das Muster einer Fläche pro Sekunde mindestens 4 mal wechselt.",
    "sources": "Die WCAG 2.1 zu General flash and red flash thresholds A flash or rapidly changing image sequence is below the threshold (i.e., content passes) if any of the following are true: there are no more than three general flashes and / or no more than three red flashes within any one-second period; or the combined area of flashes occurring concurrently occupies no more than a total of .006 steradians within any 10 degree visual field on the screen (25% of any 10 degree visual field on the screen) at typical viewing distance where: A general flash is defined as a pair of opposing changes in relative luminance of 10% or more of the maximum relative luminance where the relative luminance of the darker image is below 0.80; and where \"a pair of opposing changes\" is an increase followed by a decrease, or a decrease followed by an increase, and A red flash is defined as any pair of opposing transitions involving a saturated red. ( Three Flashes or Below Threshold: Understanding SC 2.3.1 ) Die WCAG 2.1 zur Abgrenzung von Blinken und Flackern Note: The terms \"blinking\" and \"flashing\" can sometimes refer to the same content. \"Blinking\" refers to content that causes a distraction problem. Blinking can be allowed for a short time as long as it stops (or can be stopped) \"Flashing\" refers to content that can trigger a seizure (if it is more than 3 per second and large and bright enough). This cannot be allowed even for a second or it could cause a seizure. And turning the flash off is also not an option since the seizure could occur faster than most users could turn it off. Blinking usually does not occur at speeds of 3 per second or more, but it can. If blinking occurs faster than 3 per second, it would also be considered a flash. ( Pause, Stop, Hide: Understanding SC 2.2.2 )",
    "classification": "Einordnung des Prüfschritts nach WCAG 2.1 Guidelines Guideline 2.3 Do not design content in a way that is known to cause seizures Success criteria 2.3.1 Three Flashes or Below Threshold Techniques General Techniques G15: Using a tool to ensure that content does not violate the general flash threshold or red flash threshold G176: Keeping the flashing area small enough"
  },
  {
    "id": "9.2.4.1",
    "title": "9.2.4.1 Bereiche überspringbar",
    "whatChecked": "Verschiedene Inhaltsbereiche wie Navigation, Suche oder Seiteninhalt können von Nutzern assistiver Technologien übersprungen werden. Der Seitenaufbau soll unabhängig von der Darstellung deutlich werden. Eine der folgenden Voraussetzungen soll erfüllt sein: Es werden sinnvolle Bereichsüberschriften (HTML-Strukturelemente h1 bis h6 ) eingesetzt Es sind Sprunglinks vorhanden. HTML5 Elemente zur Auszeichnung von Bereichen ( header, nav, main, aside, footer ) erschließen den Seitenaufbau sinnvoll. WAI-ARIA document landmarks strukturieren die Seitenbereiche sinnvoll. Frames und iframes brauchen ein sinnvolles title -Attribut.",
    "whyChecked": "Visuell werden Webseiten mit Mitteln wie Überschriften, Spalten oder Kästen strukturiert. Dank dieser Strukturierung weiß der Benutzer, was zusammengehört, kann das Angebot der Webseite leicht überblicken und gezielt auf die Inhalte zugreifen, die ihn interessieren. Benutzer, die diese visuelle Ordnung nicht nutzen können – zum Beispiel, weil sie blind sind oder nur einen kleinen Ausschnitt der Seite sehen können – sind darauf angewiesen, dass die Struktur unabhängig von der Darstellung auf dem Bildschirm zugänglich und nutzbar ist. Die Verwendung von (oft unsichtbaren) Bereichsüberschriften, Sprunglinks oder HTML5 Elementen zur Auszeichnung von Regionen ist dafür eine wesentliche Voraussetzung. Bei Frames ist ein sinnvoller Titel wichtig für die Orientierung mit Screenreadern. Gängige Screenreader werten das title - und das in der Programmierung gebräuchliche name -Attribut aus. Dabei wird das title -Attribut vorrangig ausgegeben. Sie sprechen beim Umschalten zwischen den Frames mit den Tastenkürzeln den Titel des aktiven Frames aus. Der Einsatz von HTML5-Elementen für Regionen wird inzwischen gut von assistiven Technologien unterstützt. Die zusätzliche Berücksichtigung eines role-Attributs (WAI ARIA document landmarks) kann die Unterstützung von Regionen jedoch verbessern. So können Benutzer die Bereichsüberschriften, Sprunglinks, HTML5-Elemente für Regionen bzw. WAI-ARIA document landmarks anwenden: Konstante Bereiche am Seitenbeginn, etwa Navigation oder Seitenkopf, überspringen, um direkt zum Inhalt zu gelangen Zwischen Bereichen hin- und her wechseln",
    "howChecked": "1. Anwendbarkeit des Prüfschritts Der Prüfschritt ist anwendbar, wenn es auf der Seite deutlich voneinander abgegrenzte Bereiche gibt, etwa Navigation und Inhalt. Das ist bei informationsorientierten Seiten meist der Fall. 2. Prüfung 2.1 Prüfung der Bereichsüberschriften Seite im Firefox aufrufen. Über die Web Developer Toolbar die Seite ohne Stylesheets anzeigen (über CSS &gt; Styles deaktivieren &gt; Alle Styles deaktivieren Stylesheets deaktivieren). Das Bookmarklet \"Inhalte gegliedert\" aufrufen. Die Bereichsüberschriften im Zusammenhang mit den durch sie strukturierten Inhalten ansehen und prüfen, ob sie aussagekräftig sind, die Strukturelemente für Überschriften nutzen, und die Inhaltsbereiche der Seite vollständig und korrekt gliedern. 2.2 Sprunglink-Prüfung Wenn Sprunglinks vorhanden sind, prüfen, ob die folgenden Anforderungen erfüllt sind: Sprunglinks verschieben beim Auslösen den Tastaturfokus zum angegebenen Bereich (bzw. beim Überspringen von Inhaltsblöcken auf den Inhalt direkt nach dem zu überspringenden Bereich) Sprunglinks sind entweder permanent sichtbar oder werden bei Fokuserhalt eingeblendet Sprunglinks am Seitenbeginn sind die ersten fokussierbaren Elemente der Tabreihenfolge Sprunglinks zum Überspringen von Inhaltsblöcken sind das letzte fokussierbare Element vor dem zu überspringenden Inhaltsblock oder dessen erster Link 2.3 Prüfung der HTML5 Elemente für Regionen und WAI-ARIA document landmarks Seite im Firefox aufrufen. Quelltextanalyse: Prüfen, ob die verschiedenen Seitenbereiche durch die Auszeichnung mit header, nav, main, aside, footer sinnvoll erschlossen werden. Das Landmarks bookmarklet aufrufen. Die document landmarks werden nun, wenn vorhanden, hervorgehoben. Wenn document landmarks eingesetzt werden, prüfen, ob die Zuordnung der Rollen (z. B. navigation, main ) korrekt ist und dem Aufbau der Seite entspricht. Sind mehrere Navigationsbereiche nur mit nav oder role=\"navigation\" ausgezeichnet, dann prüfen, ob sie mit aria-label oder aria-labelledby sinnvoll bezeichnet sind. 2.4 Prüfung von Frame-Titeln Seite im Firefox aufrufen. In der Web Developer Toolbar die Funktion Outline &gt; Outline Frames aufrufen. Dann ebenfalls in der Web Developer Toolbar die Funktion Information &gt; Display Element Information aufrufen. Der Cursor wird nun als Fadenkreuz angezeigt. Mit dem Fadenkreuz die Kante der hervorgehobenen Frames anklicken und prüfen, ob für alle Frames ein aussagekräftiger title -Text vorhanden ist. 3. Hinweise Eigenständige Bereiche Eigenständige Bereiche sind zum Beispiel: Navigation und Inhalt Spalten mit unterschiedlichen Inhalten Bereiche, die durch Umrahmung als zusammengehörig gekennzeichnet sind Frames oder iframes Der Fußbereich wird nicht als eigenständiger Bereich gewertet, wenn dort lediglich redundante Links, Copyright-Hinweise oder Angaben zum Erstellungs- oder Änderungsdatum stehen. Hinweis zu Sprunglinks und Document Landmarks Das Fehlen von Sprunglinks und die Nichtverwendung von WAI-ARIA Document Landmarks werden nicht negativ bewertet. Hinweis zu mehrfach verwendeten Landmarks bzwHTML5-Elemente für Bereiche Wird eine WAI-ARIA document landmark bzw. ein HTML5-Element für Bereiche mehrfach verwendet (z. B. role=\"navigation\" oder nav ), sollte sie mit Hilfe von aria-label oder aria-labelledby aussagekräftig benannt werden. Hinweis zu Sie-sind-hier\"-Navigationen Gemeint ist die \"Sie-sind-hier\"-Navigation am Seitenanfang (auch breadcrumb trail oder Krümelpfad). Wenn Breadcrumbs als Listen ausgezeichnet sind, brauchen sie einen (eventuell versteckten) vorangestellten Hinweis wie \"Seitenpfad\", \"Sie sind hier\", oder \"Navigationspfad\" um so für Screenreader-Nutzer von anderen Menüs unterscheidbar zu sein. Hinweis zu Frames und iframes Im title -Attribut soll der Zweck oder Inhalt, nicht aber die Lage des Frames auf dem Bildschirm angegeben werden (siehe 9.2.4.2 \"Sinnvolle Dokumenttitel\"). Angemessene title -Attribute sind zum Beispiel \"Navigation\" und \"Inhalt\", nicht jedoch \"top\" oder \"rechts\". Oft werden in Framesets auch leere Frames eingebunden, die ausschließlich zu Layoutzwecken verwendet werden. Bei solchen Frames sollte als Bezeichnung \"Leer\" gewählt werden. 4. Bewertung Erfüllt Alle Bereiche der Seite können über Überschriften, Sprunglinks, HTML5 Elemente für Regionen und/oder WAI ARIA document landmarks erreicht und übersprungen werden Frames und iframes haben sinnvolle Titel Nicht voll erfüllt Bereichsüberschriften sind nicht aussagekräftig oder irreführend Der Einsatz von HTML5 Elementen für Regionen erschließt die Seitenbereiche nicht vollständig Die Zuordnung von WAI-ARIA document landmarks ist falsch oder irreführend Bereichsüberschriften oder Sprunglinks sind mittels display:none versteckt Der Seitenpfad (Breadcrumb) ist als Liste ausgezeichnet, hat aber keinen vorangestellten Hinweis (z. B. Überschrift) Mehrere wichtige Navigationsbereiche sind mit WAI-ARIA document landmarks oder HTML5-Elementen für Bereiche ausgezeichnet und sind nicht mit aria-label oder aria-labelledby unterschieden. Nicht erfüllt Es gibt auf der Seite verschiedene Bereiche mit für sich nutzbaren Inhalten, diese werden jedoch weder mit Überschriften, noch mit Sprunglinks oder HTML5 Elementen erschlossen Auf der Seite werden mehrere klar abgrenzbare Themen behandelt, es wurde aber nur pro forma eine Hauptüberschrift ausgezeichnet",
    "sources": "WCAG 2.1 Hinweis zum Unterschied von name und title The title attribute is not interchangeable with the name attribute. The title labels the frame for users; the name labels it for scripting and window targeting. The name is not presented to the user, only the title is. ( H64: Using the title attribute of the frame and iframe elements ) WCAG 2.1 Verknüpfung von WAI ARIA document landmarks und Text The purpose of this technique is to provide names for regions of a page that can be read by assistive technology. The aria-labelledby attribute provides a way to associate an section of the page marked up as a region or landmarks with text that is on the page that labels it. ( ARIA13: Using aria-labelledby to name regions and landmarks ) Ergänzung von HTML5 Elementen mit WAI ARIA Script, das bei HTML5 Elementen automatisch ARIA-Rollen ergänzt: Polyfill accessifyhtml5.js von Yatil",
    "classification": "Abgrenzung zu anderen Prüfschritten In diesem Prüfschritt geht es um die Auszeichnung der Seitenbereiche mit Überschriften, Sprunglinks und WAI-ARIA-Attributen (landmarks). Die inhaltliche Strukturierung von Seiteninhalten wird in Prüfschritt 9.1.3.1a \"HTML-Strukturelemente für Überschriften\" geprüft. In diesem Prüfschritt wird geprüft, ob Frames und iframes (wenn vorhanden) vernünftige Titel haben. Die Inhalte von iframes werden ebenso geprüft wie andere Seiteninhalte, etwa in Prüfschritt 9.1.3.1d \"Inhalt gegliedert\". Einordnung des Prüfschritts nach WCAG 2.1 Guidelines Guideline 2.4 Navigable: Provide ways to help users navigate, find content, and determine where they are Success criteria 2.4.1 Bypass Blocks (Level A) Techniques General Techniques G1: Adding a link at the top of each page that goes directly to the main content area G115: Using semantic elements to mark up structure G123: Adding a link at the beginning of a block of repeated content to go to the end of the block G124: Adding links at the top of the page to each area of the content G130: Providing descriptive headings G140: Separating information and structure from presentation to enable different presentations HTML Techniques H42: Using h1-h6 to identify headings H64: Using the title attribute of the frame and iframe elements H69: Providing heading elements at the beginning of each section of content H97: Grouping related links using the nav element ARIA Techniques ARIA11: Using ARIA landmarks to identify regions of a page ARIA13: Using aria-labelledby to name regions and landmarks",
    "questions": "Müssen die Bereiche der Webseite durch h1 -Überschriften ausgezeichnet werden? Bei den meisten Webangeboten sind bestimmte Bereiche durchgängig für die Navigation reserviert. Andere wiederkehrende Bereich können etwa die Suche oder der Seitenkopf sein. Diese Bereiche sind auf allen Seiten des Angebots gleich aufgebaut und gestaltet. Sie haben keinen engen Bezug zum besonderen Seiteninhalt, sind eigentlich nicht den einzelnen Seiten, sondern eher dem Webauftritt als ganzen zuzurechnen. Es liegt daher nahe, die Navigation, den Inhaltsbereich und weitere klar abgegrenzte Bereiche der Seite jeweils mit einer h1 -Hauptüberschrift zu versehen. Es gibt jedoch auch andere Möglichkeiten, Seitenbereiche auszuzeichnen, etwa durch h5 - oder h6 -Überschriften, falls diese in der Gliederung der Seiteninhalte nicht verwendet werden (vergleiche den Artikel auf einfach-für-alle: \"Passende Überschrift hier einsetzen\" ) Vom BITV-Test werden unterschiedliche Herangehensweisen akzeptiert. Es muss in jedem Fall geprüft werden, ob Überschriften konsistent eingesetzt werden, um die Seiten-Bereiche und deren Inhalte zu erschließen."
  },
  {
    "id": "9.2.4.2",
    "title": "9.2.4.2 Sinnvolle Dokumenttitel",
    "whatChecked": "Dokumenttitel bezeichnen den Inhalt der individuellen Seiten und das Webangebot. Sie können für die Unterscheidung und Auswahl von Seiten genutzt werden.",
    "whyChecked": "Dokumenttitel vertreten die Seiten, zum Beispiel in Listen mit Bookmarks. Sie sind wichtig für die Navigation und Orientierung in Webangeboten. Wenn das Angebot oder der Inhalt der Seite nicht bezeichnet sind, ist die Orientierung beeinträchtigt. Typographische Schmuckelemente werden Screenreader-Nutzern unter Umständen vorgelesen und stören dadurch.",
    "howChecked": "1. Anwendbarkeit des Prüfschritts Der Prüfschritt ist immer anwendbar. 2. Prüfung Dokumenttitel in der Browserleiste ansehen. Bezeichnet der Titel den Inhalt der individuellen Seite und ggf. auch das Webangebot? Ist er für die Unterscheidung und Auswahl von Seiten geeignet? Falls Seiten Frames haben: Einzelne Frames in neuem Tab oder Fenster öffnen. Dokumenttitel in der Browserleiste ansehen. Haben die Frame-Seiten sinnvolle Titel, die Zweck oder Inhalt des Frames kennzeichnen? 3. Hinweise Der Dokumenttitel muss nicht den Pfad von der Startseite zur aktuellen Seite wiedergeben. Ein guter Dokumenttitel \"vertritt\" die Seite zum Beispiel in einer Bookmarks-Liste. Es ist daher sinnvoll, nicht nur den Inhalt der Seite, sondern auch das Webangebot selbst zu nennen. Die Nennung des Angebots ist in der Regel an zweiter Stelle sinnvoll: Der erste Teil benennt die Seite selbst, der zweite das Angebot und damit den Kontext der Seite. 4. Bewertung Erfüllt Der Dokumenttitel enthält zwei Bestandteile: eine unterscheidende, individuelle Bezeichnung der jeweiligen Seite und eine immer gleiche, allgemeine Bezeichnung des Webauftritts Eher erfüllt Der Dokumenttitel enthält eine unterscheidende, individuelle Bezeichnung der jeweiligen Seite, nennt jedoch nicht das Angebot. Nicht voll erfüllt Die individuelle Bezeichnung der Seite ist nicht sinnvoll, er bezeichnet den Inhalt nicht aussagekräftig. Frame-Seiten haben keine sinnvollen Dokumenttitel Dokumenttitel enthalten typographischen Schmuck (etwa , ~ ~, ====)",
    "sources": "Bedeutung von Dokumenttiteln nach WCAG 2.1 Specific Benefits of Success Criterion 2.4.2: This criterion benefits all users in allowing users to quickly and easily identify whether the information contained in the Web page is relevant to their needs. People with visual disabilities will benefit from being able to differentiate content when multiple Web pages are open. People with cognitive disabilities, limited short-term memory and reading disabilities also benefit from the ability to identify content by its title. This criterion also benefits people with severe mobility impairments whose mode of operation relies on audio when navigating between Web pages. ( Page Titled: Understanding SC 2.4.2 )",
    "classification": "Einordnung des Prüfschritts nach WCAG 2.1 Guideline Guideline 2.4 Navigable: Provide ways to help users navigate, find content, and determine where they are Success criteria 2.4.2 Page Titled: Web pages have titles that describe topic or purpose. (Level A) Techniques General Techniques G88: Providing descriptive titles for Web pages G127: Identifying a Web page’s relationship to a larger collection of Web pages HTML Techniques H25: Providing a title using the title element H86: Providing text alternatives for ASCII art, emoticons, and leetspeak Failures F25: Failure of Success Criterion 2.4.2 due to the title of a Web page not identifying the contents"
  },
  {
    "id": "9.2.4.3",
    "title": "9.2.4.3 Schlüssige Reihenfolge bei der Tastaturbedienung",
    "whatChecked": "Wenn die Webseite mit der Tastatur bedient wird, soll die Reihenfolge, in der Links, Formularelemente und Objekte angesteuert werden, schlüssig und nachvollziehbar sein.",
    "whyChecked": "Die Bedienung soll geräteunabhängig möglich sein. Das bedeutet: Sie muss sowohl mit einem Zeiger (Maus, Touch-Geste) als auch mit der Tastatur möglich sein. Auch andere Eingabeformen, etwa die Spracheingabe oder Schaltersteuerung, sind auf eine gute Tastaturbedienbarkeit und eine sinnvolle Fokusreihenfolge angewiesen. Probleme gibt es meistens mit der Tastaturbedienung, denn die Mehrzahl der Webnutzenden arbeitet mit der Maus, daher wird oft nur an sie gedacht. Auf die Tastaturbedienbarkeit angewiesen sind zum Beispiel viele motorisch eingeschränkte Menschen oder Blinde. Bei einer nicht nachvollziehbaren Fokusreihenfolge laufen Nutzende Gefahr, die Orientierung zu verlieren, die Tastaturbedienbarkeit kann dadurch erheblich beeinträchtigt sein. Manche Seiten präsentieren mittels JavaScript dynamische Inhalte. Rückmeldungen bei fehlerhaften Formular-Eingaben werden beispielsweise dynamisch unter dem Feld angezeigt oder Dialoge werden eingeblendet. Während diese Änderungen der Seite für sehende Nutzende unmittelbar wahrnehmbar sind, werden sie von Screenreader-Nutzenden gar nicht oder erst mit Verzögerung wahrgenommen. Werden weitere Elemente über DOM-Scripting in den Quellcode einer Seite dynamisch eingefügt (d.h. ohne dass die Seite neu lädt), soll diese Einfügung unterhalb des auslösenden Elements geschehen, damit Screenreader hinzugefügte Elemente bemerken und vorlesen. Werden Elemente an anderer Stelle im DOM eingefügt, etwa am Seitenende (das ist oft bei Modalen Dialogen der Fall), müssen Scripte für ein sinnvolles Fokusmanagement sorgen und damit eine sinnvolle Fokusreihenfolge gewährleisten.",
    "howChecked": "1. Anwendbarkeit des Prüfschritts Der Prüfschritt ist anwendbar, wenn die Seite Links, Formularelemente oder Objekte (z. B. Menüs oder Dialoge, die nach Interaktion eingeblendet werden) enthält. 2. Prüfung Seite im Firefox Browser laden. Mit der Tabulatortaste die Links, Formularelemente und Objekte durchgehen und prüfen, ob die Reihenfolge im Wesentlichen nachvollziehbar ist. Seite in Chrome aufrufen und die Prüfung wiederholen. 2.1 Prüfung von dynamisch eingefügten Inhalten Wenn Inhalte dynamisch generiert werden (also Interaktionen auf der Seite Inhalte hinzufügen, die nicht schon in der Ansicht ohne CSS auf der frisch geladenen Seite sichtbar sind): Seite im Firefox aufrufen. Voreinstellung im Firefox: Im Browser-Menü Einstellungen wählen. Dort im Bereich \"Surfen\" die Option \"Markieren von Text mit der Tastatur zulassen\" auswählen. Hierdurch wird die Cursor-Position als blinkende Einfügemarke angezeigt. Dies entspricht in der Regel dem Screenreader-Fokus. Dynamisch eingefügte Inhalte aufrufen, etwa durch Formulareingabe oder Auslösen einer Schaltfläche. Browsereigenes Entwicklerwerkzeug ( Inspektor für Firefox) aufrufen, das Element-Symbol (das Icon zeigt den Cursor auf einer Taste) links in der Menüleiste auswählen und den eingefügten Inhalt anklicken. Im eingeblendeten Fenster lässt sich nun der generierte Quellcode im Zusammenhang einsehen. Position des eingefügten Elements prüfen. Fall 1: Erscheint der eingefügte Inhalt im Quellcode unterhalb des auslösenden Elements (Siehe dazu die Erläuterung in Abschnitt 3. Hinweise ). Fall 2: Wenn generierte Pseudo-Fenster (Modalen Dialogen) im Quellcode nicht direkt nach dem auslösenden Element, sondern an anderer Stelle , etwa ganz am Seitenende, eingefügt werden: Pseudo-Fenster schließen und vom auslösenden Element aus erneut mit der Tastatur aufrufen. Erkennen auch Screenreader-Nutzer, dass ein neuer Inhalt hinzugefügt wurde? Das kann auf verschiedene Weise geschehen, z. B.: Der Fokus wird über ein Skript zum Beginn des eingefügten Elements verschoben (die blinkende Einfügemarke ist an dessen Beginn sichtbar) Der Link-/Button-Text oder eine Eigenschaft des auslösenden Elements (etwa disabled ) wird geändert und beim Weiter-Tabben erhält das hinzugefügte Element den nächsten Fokus Wird der Fokus auf das auslösende Element zurückverschoben, wenn das Pseudo-Fenster geschlossen wird? 3. Hinweise Die Tabulatorreihenfolge sollte im Wesentlichen der visuellen Anordnung auf dem Bildschirm folgen. Kleinere Abweichungen sind kein Problem, manchmal ist es ja auch gar nicht möglich, aus der Anordnung auf dem Bildschirm eine Reihenfolge zwingend abzuleiten. Die Tabulatorreihenfolge ist schwer nachzuvollziehen, wenn sie über unsichtbare ausführbare Elemente geht. Das betrifft insbesondere aufeinander folgende nicht sichtbare Sprunglinks. Wenn die Tabulatorreihenfolge nicht gut erkennbar ist, weil z. B. die Fokushervorhebung unterdrückt wird, ist das Bookmarklet Show Tab Focus von Jeff Smith ein hilfreiches Werkzeug zum hervorheben der aktuellen Position. Die Prüfung erfolgt bei eingeschaltetem JavaScript. Der Prüfer muss mit der Funktionsweise der eingesetzten Browser vertraut sein, er muss wissen, welche Tasten und Tastenkombinationen für die Tastaturbedienung vorgesehen sind. Wichtig in diesem Zusammenhang: Die Felder von Formularen können ggf. trotz korrekter Auszeichnung unter Umständen nicht mit der Tabulatortaste durchwandert werden. Wenn das Browserfenster nicht den Fokus hat, darf man nicht einfach hineinklicken und dann erst mit der Tastaturbedienung anfangen. Der Fokus muss vielmehr per Tastatur (F6) zum Browserfenster bewegt werden. Auswahllisten ohne Submit-Button, die auf onchange reagieren, können ggf. mit den Pfeiltasten allein nicht bedient werden, da immer schon die erste Listenoption ausgelöst wird. Um solche Auswahllisten durchzublättern, muss man sie ggf. zunächst mit der Tastenkombination \"ALT + Pfeil nach unten\" öffnen. Dann kann man mit den Pfeiltasten nach oben und unten durch die Optionen blättern und mit der Eingabetaste eine Option auswählen. Die ARIA Authoring Practices Guide (APG) bieten eine Orientierung, welche Fokusreihenfolge / welches Fokusmanagement bei bestimmten Widget-Typen zu erwarten ist. Zur Einfügung dynamisch generierter Inhalte unterhalb des auslösenden Elements In manchen Fällen kann es angemessen sein, Inhalte nicht unmittelbar nach dem auslösenden Element, sondern weiter unten auf der Seite dynamisch einzufügen bzw. zu aktualisieren. Ein Beispiel ist die dynamische Ergebnisanzeige unterhalb eines mehrstufigen Suchformulars. Hier ist zu prüfen, ob das dynamische Verhalten des Formulars schon aus dem Kontext der Eingabefelder bzw. Auswahllisten heraus bzw. durch erläuternde Texte oder Hilfefunktionen deutlich wird. 4. Bewertung Erfüllt Die Reihenfolge, in der Links, Formularelemente und Objekte mit der Tabulatortaste angesteuert werden, ist im Wesentlichen nachvollziehbar und schlüssig. Nicht voll erfüllt Die Tabulatorreihenfolge ist nicht schlüssig, sie weicht ohne nachvollziehbaren Grund von der visuellen Anordnung ab oder der Tastaturfokus ist über mehr als drei aufeinanderfolgende Stationen im Browserfenster nicht sichtbar. Pseudofenster, die außerhalb der normalen Quellcodereihenfolge, also etwa am Seitenende, eingefügt werden, erhalten nicht unmittelbar oder beim nächsten Tabben den Fokus. Beim Schließen von Pseudofenstern wird der Fokus nicht auf das auslösende Element zurückgesetzt. Nicht erfüllt Die Reihenfolge, in der Links, Formularelemente und Objekte mit der Tabulatortaste angesteuert werden, ist nicht nachvollziehbar und erschwert die Bedienung mit der Tastatur erheblich.",
    "sources": "Knowbility: Let’s Focus on Slide-Out Navigation (March 2020)",
    "classification": "Abgrenzung zu anderen Prüfschritten In diesem Prüfschritt wird die Tabreihenfolge geprüft, egal, ob diese der Anordnung fokussierbarer Elemente im Quellcode entspricht oder über tabindex und Skripte erzeugt wird. Die grundsätzliche Erreichbarkeit und Auslösbarkeit von interaktiven Elementen ist Gegenstand von Prüfschritt 9.2.1.1 \"Ohne Maus nutzbar\". Die Sichtbarkeit des Fokus ist Gegenstand von Prüfschritt 9.2.4.7 \"Aktuelle Position des Fokus deutlich\". Geprüft wird hier die richtige Position eingeblendeter oder eingefügter Inhalte. Ob diese Inhalte selbst sinnvoll sind, wird in anderen Prüfkriterien wie 9.3.3.3 \"Hilfe bei Fehlern\" oder 9.2.4.4 \"Aussagekräftige Linktexte\" geprüft. Einordnung des Prüfschritts nach WCAG 2.1 Guideline Guideline 2.4 Navigable: Provide ways to help users navigate, find content, and determine where they are Success criterion 2.4.3 Focus Order (Level A) Techniques General Techniques G59: Placing the interactive elements in an order that follows sequences and relationships within the content HTML Techniques H4: Creating a logical tab order through links, form controls, and objects Scripting Techniques SCR26: Inserting dynamic content into the Document Object Model immediately following its trigger element SCR37: Creating Custom Dialogs in a Device Independent Way SCR27: Reordering page sections using the Document Object Model Failures F44: Failure of Success Criterion 2.4.3 due to using tabindex to create a tab order that does not preserve meaning and operability F85: Failure of Success Criterion 2.4.3 due to using dialogs or menus that are not adjacent to their trigger control in the sequential navigation order"
  },
  {
    "id": "9.2.4.4",
    "title": "9.2.4.4 Aussagekräftige Linktexte",
    "whatChecked": "Ziel oder Zweck des Links sollen aus dem Linktext hervorgehen oder aus dem direkten Kontext des Links ermittelbar sein. Falls Links nicht auf HTML-Seiten verweisen, soll der Link über das Dateiformat des Zieldokuments informieren.",
    "whyChecked": "Blinde Nutzer, die von Link zu Link tabben, bekommen die Linktexte vorgelesen und können bei aussagekräftigen Linktexten leicht entscheiden, ob sie einem Link folgen möchten. Falls der Linktext selbst nicht aussagekräftig ist, soll der unmittelbare Kontext für Screenreader-Nutzer wenigstens leicht ermittelbar sein. Screenreader bieten die Möglichkeit der Auflistung sämtlicher Links der Seite und damit einen schnellen Überblick, selbst wenn die Seite ansonsten schlecht zugänglich ist. Diese Technik funktioniert allerdings nicht, wenn alle Linktexte gleich sind und nicht ausreichend Auskunft über das Linkziel geben. Bei Links zu Angeboten in anderen Formaten als HTML (zum Beispiel PDF- oder Word-Dokumente) ist es für Nutzende sinnvoll zu wissen, in welchem Format Informationen angeboten werden, bevor sie einen Link aktivieren. Wenn Informationen zum Dateiformat visuell bereitgehalten werden (etwa über ein mittels CSS eingeblendetes PDF- oder Word-Icon) dann soll diese Information auch für blinde Nutzer verfügbar sein.",
    "howChecked": "1. Anwendbarkeit des Prüfschritts Der Prüfschritt ist anwendbar, wenn die Seite Links enthält. 2. Prüfung 2.1 Prüfung von Linktexten Seite im Firefox aufrufen. Prüfen, ob die Linktexte aussagekräftig sind, das heißt, im Linktext oder im Kontext eine Auskunft über Ziel oder Zweck des Links geben. Für Links, deren sichtbarer Linktext allein nicht aussagekräftig ist (z. B. \"mehr\" oder \"weiterlesen\"), prüfen, ob der Linktext durch eine der folgenden Möglichkeiten im Kontext sinnvoll ergänzt wird: durch zusätzlichen, über CSS versteckten Linktext (hierfür ggf. in der Web Developer Toolbar die Option CSS &gt; Disable All Styles wählen und die betroffenen Links erneut prüfen) durch den Alternativtext einer mit im selben a -Element verlinkten Grafik (hierfür die Option Images &gt; Display Alt Attributes wählen) durch den Text im umschließenden Element ( p , li ). Das div -Element wird hier wie p behandelt bei Links in untergeordneten Listen durch den Text des übergeordneten li -Elements durch den Text der umschließenden Tabellenzelle und der dazugehörigen Überschriftenzellen ( td , th ) durch den Text der vorangehenden Überschrift ( h1 - h6 ) Mit Hilfe des aria-label oder aria-labelledby -Attributs (Achtung: aria-label überschreibt den Text des Links) durch einen verständlichen Link am Seitenbeginn, der Linktexte auf der Seite erweitert. 2.2 Prüfung von Links auf andere Dateiformate Seite im Browser aufrufen. Prüfen, ob visuell, etwa über zusätzliche Icons oder in Custom-Tooltips, Auskunft über das Dateiformat gegeben wird. Prüfen, ob visuelle Information zum Dateiformat auch programmatisch bereitgestellt wird (etwa über versteckten Linktext, Alternativtext, das title -Attribut oder geeignete ARIA-Attribute). Falls weder über den Linktext noch über ein entsprechend eindeutiges Icon Auskunft über das Dateiformat gegeben wird, ist das Dateiformat des Links möglicherweise für alle Nutzenden unklar. Dies ist nicht als Mangel im Sinne dieses Prüfschritts zu bewerten (sollte jedoch ggf. als allgemeines Usability-Problem angemerkt werden). 3. Hinweise Links, deren Ziel generell für alle Nutzer unklar ist, fallen nicht unter diesen Prüfschritt. Verlinkte URLs und verlinkte E-Mail-Adressen vermitteln über ihr Format den Linkzweck (etwa, dass sie einen Email-Client öffnen oder auf ein externes Webangebot verlinken). URLs sind für alle Nutzer möglicherweise nicht aussagekräftig und werden deshalb hier nicht negativ bewertet. Bei verlinkten Grafiken ist der Linktext der Wert des alt -Attributs des img -Elements. Der Linktext kann auch aus dem alt -Text einer oder mehrerer Grafiken und einfachem Text zusammengesetzt sein. Nicht aussagekräftige Links wie \"mehr..\", \"weiter\", \"etc.\" im letzten li -Element einer Liste werden akzeptiert, wenn die Bedeutung aus dem programmatisch ermittelbaren Kontext hervorgeht. Dazu gehört der den Link einschließende Absatz oder Listenpunkt oder auch die vorangehende Überschrift. Wenn zusätzlicher, per CSS unsichtbar gemachter Linktext mit display:none versteckt wird, ist er programmatisch nicht ermittelbar und verbessert nicht die Aussagekraft des Links: dieser Text wird von Screenreadern ignoriert. Das title -Attribut eines Links ist potenziell programmatisch ermittelbar, wird aber in manchen Fällen (abhängig von Einstellungen) nicht von Screenreadern ausgewertet. 4. Bewertung Erfüllt Alle Links benennen im Linktext oder im programmatisch ermittelbaren Kontext Linkziel oder Linkzweck. Alle Links auf nicht-HTML-Angebote, die visuell über das Dateiformat informieren, stellen diese Information auch programmatisch ermittelbar zur Verfügung.",
    "sources": "Zweck der Kontextunabhängigkeit Assistive technology has the ability to provide users with a list of links that are on the Web page. Link text that is as meaningful as possible will aid users who want to choose from this list of links. Meaningful link text also helps those who wish to tab from link to link. Meaningful links help users choose which links to follow without requiring complicated strategies to understand the page. WCAG 2.1, Link Purpose (In Context): Understanding SC 2.4.4 Gruppen zusammengehöriger Links Bei einer Gruppe zusammengehöriger Links kann im ersten Link Ziel oder Zweck genannt werden und in den folgenden Links unterscheidende Informationen. Die WCAG 2.1 geben folgendes Beispiel: A list of books is available in three formats: HTML, PDF, and mp3 (a recording of a person reading the book). To avoid hearing the title of each book three times (once for each format), the first link for each book is the title of the book, the second link says \"PDF\" and the third says, \"mp3.\" WCAG 2.1, Link Purpose (In Context): Understanding SC 2.4.4: Examples of Success Criterion 2.4.4 Aussagekraft über den Kontext Whenever possible, provide link text that identifies the purpose of the link without needing additional context. In some situations, authors may want to provide part of the description of the link in logically related text that provides the context for the link. In this case the user should be able to identify the purpose of the link without moving focus from the link. In other words, they can arrive on a link and find out more about it without losing their place. This can be achieved by putting the description of the link in the same sentence, paragraph, list item, the heading immediately preceding the link, or table cell as the link, or in the table header cell for a link in a data table, because these are directly associated with the link itself. WCAG 2.1, Link Purpose (In Context): Understanding SC 2.4.4 Grenzen des title -Attributs (Technik H33: Supplementing link text with the title attribute) The title attribute is used to provide additional information to help clarify or further describe the purpose of a link. If the supplementary information provided through the title attribute is something the user should know before following the link, such as a warning, then it should be provided in the link text rather than in the title attribute. Because of the extensive user agent limitations in supporting access to the title attribute, authors should use caution in applying this technique. For this reason, it is preferred that the author use technique C7: Using CSS to hide a portion of the link text (CSS) or H30: Providing link text that describes the purpose of a link for anchor elements (HTML). WCAG 2.1 Technik, H33: Supplementing link text with the title attribute",
    "classification": "Abgrenzung zu anderen Prüfschritten In diesem Prüfschritt wird nur geprüft, ob die Information über das Dateiformat überhaupt vorhanden ist. Das ist der Fall, wenn das Dateiformat in einer Grafik, im Linktext oder im zugänglichen Namen des Elements angegeben wird. Bei verlinkten Grafiken ist der Linktext der alt -Text des img -Elements. Die Zugänglichkeit und Aussagekraft des alt -Textes wird jedoch im Prüfschritt 9.1.1.1a \"Alternativtexte für Bedienelemente\" geprüft. In diesem Prüfschritt wird nur geprüft, ob die Information über das Dateiformat überhaupt vorhanden ist. Das ist der Fall, wenn das Dateiformat in einer Grafik, im Linktext oder im title-Text des Links angegeben wird. Ist die Grafik, die Auskunft über das Dateiformat gibt, nicht im Link eingebunden (z. B. unverlinkt dem Link vorangestellt), so wird dies in Prüfschritt 11.1.1.1b \"Alternativtexte für Grafiken und Objekte\" geprüft. Einordnung des Prüfschritts nach WCAG 2.1 Guideline Guideline 2.4 Navigable: Provide ways to help users navigate, find content, and determine where they are Success criteria 2.4.4 Link Purpose (In Context) (Level A) Techniques General Techniques G53: Identifying the purpose of a link using link text combined with the text of the enclosing sentence G91: Providing link text that describes the purpose of a link HTML Techniques H24: Providing text alternatives for the area elements of image maps H30: Providing link text that describes the purpose of a link for anchor elements H33: Supplementing link text with the title attribute H77: Identifying the purpose of a link using link text combined with its enclosing list item H78: Identifying the purpose of a link using link text combined with its enclosing paragraph H79: Identifying the purpose of a link using link text combined with its enclosing table cell and associated table headings H80: Identifying the purpose of a link using link text combined with the preceding heading element H81: Identifying the purpose of a link in a nested list using link text combined with the parent list item under which the list is nested CSS Techniques C7: Using CSS to hide a portion of the link text (CSS) ARIA Techniques ARIA7: Using aria-labelledby for link purpose ARIA8: Using aria-label for link purpose Failures F63: Failure of Success Criterion 2.4.4 due to providing link context only in content that is not related to the link F89: Failure of 2.4.4, 2.4.9 and 4.1.2 due to using null alt on an image where the image is the only content in a link"
  },
  {
    "id": "9.2.4.5",
    "title": "9.2.4.5 Alternative Zugangswege",
    "whatChecked": "Es gibt mindestens zwei unterschiedliche Zugangswege, um zu den Inhalten des Angebotes zu gelangen.",
    "whyChecked": "Benutzer bevorzugen verschiedene Zugangswege, um zu Inhalten zu gelangen. Manche orientieren sich an hierarchischen Navigationsmenüs, andere nutzen ein Inhaltsverzeichnis (Sitemap), noch andere ziehen eine Suchfunktion vor. Gerade sehbehinderte Benutzer kommen oft schneller über eine Suche zu den gewünschten Inhalten. Deshalb sollte das Angebot verschiedene Zugangswege zu den Inhalten bereitstellen.",
    "howChecked": "Anwendbarkeit des Prüfschritts Der Prüfschritt ist anwendbar, wenn das Webangebot informationsorientiert ist und aus mehr als einer Seite besteht. Prüfung Das Angebot auf vorhandene Zugangswege hin betrachten. Übliche Zugangswege sind: Durchgängig verfügbare Navigationsmenüs Inhaltsverzeichnis (Sitemap) Suchfunktion (direkt über ein Sucheingabefeld oder über Verlinkung auf eine zentrale Suchseite) Alle Seiten des Angebots sind von der Startseite her verlinkt oder auf jeder Seite des Angebots verlinkt (nur für kleine Sites geeignet) Sequenzielle Verlinkung aller Seiten (höchstens für kleine Sites geeignet, oder für Sites, in denen die Wahrnehmung der Seiten in einer bestimmten Reihenfolge sinnvoll ist) als Teil eines Prozesses erzeugte Seiten (etwa als Ergebnis einer Transaktion) Gibt es mindestens zwei Zugangswege, etwa eine hierarchisches Navigationsmenü und eine Suchfunktion, oder ein Navigationsmenü und ein Inhaltsverzeichnis (Sitemap)? Zugangswege stichprobenartig ausprobieren, um deren Funktionsfähigkeit zu überprüfen Hinweise Es wird nicht gefordert, dass hierarchische Navigationsmenüs die tieferen Ebenen des Angebots vollständig abbilden. Es spielt für diesen Prüfschritt keine Rolle, ob Navigationsmenüs vertikal oder horizontal orientiert sind. Sie sollen aber als eigenständige Bereiche kenntlich sein. Die Kombination aus hierarchischem Hauptmenü und untergeordneten Bereichmenüs gilt als ein Zugangsweg. Ein hierarchischer Navigationspfad (Breadcrumb) ist sinnvoll. Er gilt jedoch nicht als eigenständiger Zugangsweg, da er nur die Navigation zu höheren Ebenen der Seitenhierarchie erlaubt, nicht den Zugang zu weiter unten liegenden Ebenen. Bei kleinen Angeboten mit nur wenigen Seiten, die alle von der Startseite verlinkt sind, gilt diese gleichzeitig als Sitemap, sofern auf allen Unterseiten des Angebotes deutlich ein Link auf die Startseite angeboten wird. Bei sequenziellen Prozessen kann es sinnvoll sein, dass außer der Navigation zu folgenden und vorhergehenden Prozessschritten keine weitere Navigation angeboten wird. Denn die Seiten (oder Instanzen) des Prozesses machen nur innerhalb des Gesamtprozesses Sinn und sollen nicht einzeln erreichbar sein. Hier sollte das Fehlen weiterer Navigationsoptionen nicht negativ bewertet werden.",
    "sources": "Multiple Ways - Specific Benefits of Success Criterion 2.4.5 Providing an opportunity to navigate sites in more than one manner can help people find information faster. Users with visual impairments may find it easier to navigate to the correct part of the site by using a search, rather than scrolling through a large navigation bar using a screen magnifier or screen reader. A person with cognitive disabilities may prefer a table of contents or site map that provides an overview of the site rather than reading and traversing through several Web pages. Some users may prefer to explore the site in a sequential manner, moving from Web page to Web page in order to best understand the concepts and layout. Individuals with cognitive limitations may find it easier to use search features than to use a hierarchical navigation scheme that be difficult to understand. ( Multiple Ways: Understanding SC 2.4.5 )",
    "classification": "Einordnung des Prüfschritts nach WCAG 2.1 Guideline Guideline 2.4 Navigable: Provide ways to help users navigate, find content, and determine where they are. Success criterion 2.4.5 Multiple Ways (Level AA) Techniques General Techniques G63: Providing a site map G64: Providing a Table of Contents G125: Providing links to navigate to related Web pages G126: Providing a list of links to all other Web pages G161: Providing a search function to help users find content G185: Linking to all of the pages on the site from the home page"
  },
  {
    "id": "9.2.4.6",
    "title": "9.2.4.6 Aussagekräftige Überschriften und Beschriftungen",
    "whatChecked": "Überschriften beschreiben den folgenden Inhalt, Beschriftungen sind aussagekräftig.",
    "whyChecked": "Visuell werden Webseiten-Inhalte durch Überschriften strukturiert. Dank dieser Strukturierung wissen Nutzende, was zusammengehört, können die Inhalte der Webseite leicht überblicken und gezielt auf Inhalte zugreifen, die sie interessieren. Wenn Formularelemente aussagekräftig beschriftet sind, können Sie von Nutzenden als solche erkannt und bedient werden.",
    "howChecked": "1. Anwendbarkeit des Prüfschritts Der Prüfschritt ist anwendbar, wenn es auf der Seite Inhalte gibt, die durch Überschriften strukturiert werden und wenn die Seite Formularelemente enthält. 2. Prüfung Seite im Firefox laden. Prüfen, ob die Überschriften im Zusammenhang mit den durch sie strukturierten Inhalten aussagekräftig sind. Prüfen, ob Beschriftungen von Formularelementen aussagekräftig sind. Prüfen, ob programmatisch hinterlegte Beschriftungen aussagekräftig sind - etwa bei visuellen Linktexten, die mittels aria-label überschrieben werden, und hinterlegte Beschriftungen von grafischen Bedienelementen. Dazu gehört auch die Nutzung der richtigen Sprache. Wenn zur Gruppen-Beschriftung fieldset mit legend eingesetzt wird: Ist die Ausgabe von legend und label im Zusammenhang aussagekräftig? 3. Hinweise 3.1 Hinweise zu Fachausdrücken Besonders in Fachanwendungen gibt es häufiger Beschriftungen und Überschriften mit Fachausdrücken, Abkürzungen oder Codes, die nicht allgemeinverständlich sind, aber der Zielgruppe bekannt sind. Die Verwendung diese Fachausdrücke bringt Vorteile mit sich (Wiedererkennbarkeit, Präzision, Kürze), kann aber auch dazu führen, dass sie nicht allgemein aussagekräftig sind: sie müssen erlernt werden. Das ist bei Fachanwendungen vertretbar und sollte nicht zu einer negativen Bewertung führen. 4. Bewertung Erfüllt: Überschriften passen zu den ihnen folgenden Inhalten, Beschriftungen von Formularelementen sind aussagekräftig. Nicht voll erfüllt: Überschriften oder Beschriftungen sind obskur oder schwer verständlich (z.B. unübersetzt) Durch Flüchtigkeits- oder Kopierfehler haben Formularelemente unrichtige, nicht zutreffende Beschriftungen Bestimmte Eingabeformate sind für valide Eingaben erforderlich, werden aber nicht über zusätzliche Beschriftungen vermittelt Besonders in Fachanwendungen gibt es Labels und Überschriften, die in dem betreffenden Nutzerkreis bestimmten, etablierten Vokabularen entsprechen (einschließlich viel genutzter Abkürzungen). Die Verwendung fachspezifischer Beschriftungen bringt Vorteile mit sich (Wiedererkennbarkeit, Präzision, Kürze), kann aber auch dazu führen, dass sie nicht unbedingt für jeden aussagekräftig oder anschaulich sind, was aber nicht zu einer negativen Bewertung führen soll. Bei Angeboten, die Komponenten aus Frameworks einsetzen, finden sich häufig englischsprachige hinterlegte Beschriftungen, die nicht übersetzt wurden, etwa ein Schließen-Icon mit aria-label=\"close\" . In solchen Fällen kann der Prüfschritt 9.1.1.1a \"Alternativtexte für Bedienelemente\" mit \"erfüllt\" bewertet werden, der Mangel liegt in der mangelnden Aussagekraft, die hier bewertet wird.",
    "classification": "Abgrenzung von anderen Prüfschritten In diesem Prüfschritt geht es um die Aussagekraft von Überschriften und Beschriftungen, auch wenn diese visuell versteckt sind. Die programmatische Ermittelbarkeit durch Assistive Technologien ist den Prüfkriterien 9.1.3.1a \"HTML-Strukturelemente für Überschriften\" und 9.1.3.1h \"Beschriftung von Formularelementen programmatisch ermittelbar\" zugeordnet. Alternativtexte von Bildern, etwa Teaser-Grafiken (Vorschaubildern) werden in Prüfschritt 9.1.1.1a Alternativtexte für Bedienelemente.adoc bewertet. Hier wird nur die Aussagekraft hinterlegter Beschriftungen von grafischen Bedienelementen bzw. Icons bewertet, falls überhaupt eine Beschriftung vorhanden ist. Ist bei grafischen Bedienelementen keine programmatisch ermittelbare Beschriftung vorhanden, ist dies bei 9.1.1.1a zu bewerten. Einordnung des Prüfschritts nach WCAG 2.1 Guideline Guideline 2.4 Navigable: Provide ways to help users navigate, find content, and determine where they are. Success criterion 2.4.6 Headings and Labels (Level A) Techniques General Techniques G130: Providing descriptive headings G131: Providing descriptive labels"
  },
  {
    "id": "9.2.4.7",
    "title": "9.2.4.7 Aktuelle Position des Fokus deutlich",
    "whatChecked": "Der Tastaturfokus soll deutlich hervorgehoben werden. Wenn Autoren keine eigene Fokushervorhebung umsetzen, darf die Standardhervorhebung durch den Browser nicht über CSS unterdrückt werden. Der Kontrast der Fokushervorhebung (z.B. Fokusrahmen um Elemente, Unterstreichung, Farbumkehr) zum nicht-fokussierten Zustand muss mindestens 3:1 betragen. Versteckte Sprunglinks sollen bei Fokuserhalt eingeblendet werden.",
    "whyChecked": "Für Tastaturnutzende ist es wichtig, zu sehen, wo sich der Tastaturfokus gerade befindet, also welcher Link oder Schalter ausgelöst wird, wenn sie die Enter-Taste drücken, oder welches Eingabefeld oder andere Formularelement gerade den Fokus hat.",
    "howChecked": "1. Anwendbarkeit des Prüfschritts Der Prüfschritt ist anwendbar, wenn die Seite interaktive Elemente enthält. 2. Prüfung Seite in Firefox laden. Alle Bedienelemente mit Tabulator durchlaufen und prüfen, ob sie mit grafischen Veränderungen auf den Fokus reagieren (zum Beispiel mit Farbwechseln, Unterstreichungen oder eingeblendeten Symbolen). Versteckte Sprunglinks sollen bei Fokuserhalt eingeblendet werden. Wenn die Fokushervorhebung ausschließlich über einen Farbwechsel geschieht, prüfen, ob der Kontrastabstand zwischen fokussiertem und unfokussiertem Zustand mindestens 3:1 beträgt. Bei Links, die sich nicht grafisch verändern, prüfen, ob sie auf den Mauszeiger reagieren. Wenn dies der Fall ist: Abbruch oder weiter mit 6. Wenn nur der Standard-Browser-Tastaturfokus (Systemkranz) erscheint, prüfen, ob dieser an dieser vor gestalteten (also etwa über CSS gefärbten) Hintergründen gut zu erkennen ist. In Zweifelsfällen gemäß Prüfschritt 9.1.4.11 Kontraste von Grafiken und grafischen Bedienelementen ausreichend bzw. 9.1.4.3 Kontraste von Texten ausreichend ermitteln, ob der Kontrastabstand zwischen Systemfokus und Hintergrund mindestens 3:1 beträgt Seite im Chrome Browser laden und die Schritte 2-7 wiederholen. 3. Hinweise Die Prüfung muss mit aktiviertem JavaScript erfolgen. Der Prüfschritt ist nicht erfüllt, wenn überhaupt kein Tastaturfokus vorhanden ist, die Webseite also den browsereigenen Tastaturfokus (zum Beispiel mit JavaScript blur() oder CSS outline:none ) unterdrückt. Dann ist eventuell auch Prüfschritt 9.2.1.1 \"Ohne Maus nutzbar\" nicht erfüllt! Grundsätzlich hat sich die Standard-Hervorhebung des Tastaturfokus im Browser bei fehlender Gestaltung durch Autoren in den letzten Jahren verbessert. Abhängig von Betriebssystem und Browser, der Hintergrundfarbe und anderen Aspekten des Designs ist die Standard-Hervorhebung der Browser in manchen Fällen jedoch nicht gut sichtbar. Eine gezielte Gestaltung in CSS, z.B. über die :focus Pseudo-Klasse, stellt sicher, dass der Tastaturfokus immer gut sichtbar ist. 4. Bewertung Erfüllt Die Fokussierung interaktiver Elemente ist visuell wahrnehmbar: Rahmen, Unterstreichung, Farbumkehr, Formänderungen oder zusätzliche Markierungen werden bei Tastaturfokussierung eingesetzt. Wenn die Fokussierung von Links oder Buttons nur über die Änderung der Text- oder Hintergrundfarbe vermittelt wird, beträgt deren Kontrastabstand zum unfokussierten Zustand mindestens 3:1. Wenn nur der Standard-Browser-Tastaturfokus angezeigt wird, ist dieser vor gestalteten Hintergründen ausreichend sichtbar, er erfüllt den Prüfschritt 9.1.4.11 \"Kontraste von Grafiken und grafischen Bedienelementen ausreichend\". Nicht voll erfüllt Sprunglinks bleiben bei Fokuserhalt versteckt. Nicht erfüllt Der Standard-Browser-Tastaturfokus wird unterdrückt, bei Tastaturnutzung wird kein Fokus angezeigt.",
    "classification": "Bezug zu 1.4.11 Non-Text Contrast (Sichtbarkeit der Fokushervorhebung) Der Understanding-Text zur WCAG Anforderung 1.4.11 Non-Text Contrast führt im Abschnitt \"Relationship with Use of Color and Focus Visible\" aus: In combination with 2.4.7 Focus Visible, the visual focus indicator for a component must have sufficient contrast against the adjacent background when the component is focused, except where the appearance of the component is determined by the user agent and not modified by the author. If the focus state relies on a change of color (e.g., changing only the background color of a button), then changing from one color to another that has at least a 3:1 contrast ratio with the previous state of the control is a method for meeting the Focus visible criteria. Einordnung des Prüfschritts nach WCAG 2.1 Guideline Guideline 2.4 Navigable: Provide ways to help users navigate, find content, and determine where they are Success criterion 2.4.7 Focus Visible (Level AA) 1.4.11 Non-Text Contrast (Level AA) Techniques General Techniques G149: Using user interface components that are highlighted by the user agent when they receive focus G165: Using the default focus indicator for the platform so that high visibility default focus indicators will carry over G195: Using an author-supplied, highly visible focus indicator CSS Techniques C15: Using CSS to change the presentation of a user interface component when it receives focus Client-side Scripting Techniques SCR31: Using script to change the background color or border of the element with focus Failures F55: Failure of Success Criteria 2.1.1, 2.4.7, and 3.2.1 due to using script to remove focus when focus is received F78: Failure of Success Criterion 2.4.7 due to styling element outlines and borders in a way that removes or renders non-visible the visual focus indicator",
    "questions": "Ist die Anzeige des Fokus nicht Sache des Browsers? Alle Browser zeigen dem Tastaturnutzer in irgendeiner Weise, wo der Fokus ist, wenn diese Anzeige nicht aktiv unterdrückt wird. Dennoch ist die Anzeige des Fokus nicht allein Sache des Browsers. Die Webseite legt fest, wie sie im Browser aussehen soll. Sie ändert etwa die Farben fokussierter Links und Linkhintergründe oder setzt andere Gestaltungselemente ein. In dieser von der Webseite festgelegten Umgebung muss der Fokus für Tastaturnutzer gut sichtbar sein."
  },
  {
    "id": "9.2.5.1",
    "title": "9.2.5.1 Alternativen für komplexe Zeiger-Gesten",
    "whatChecked": "Wenn Webinhalte Funktionen implementieren, die über pfadbasierte Zeiger-Gesten (etwa Wischgesten oder Mehrpunktgesten) bedient werden können, gibt es Alternativen für die Aktivierung mittels einer einfachen Zeigereingabe. 'Zeiger' schließt dabei indirekte Eingaben mittels Mauszeiger ebenso wie direkte Eingaben ein, etwa mit dem Finger auf dem Touchscreen oder mit dem Stift auf einem Grafiktablett. Ausgenommen sind Fälle, in denen die pfadbasierte oder Mehrpunkt-Eingabe essenziell wichtig ist - etwa bei der Handschrifterkennung. Ziehbewegungen (Dragging Motions) wie in Drag-and-Drop-Aktionen gelten nicht als pfadbasierte Geste im Sinne dieser Anforderung. Diese Anforderung gilt nur für Zeiger-Gesten, die von Webinhalten interpretiert und verarbeitet werden. Sie betreffen also nicht Gesten für die Bedienung von Nutzeragenten oder Hilfsmitteln, etwa Gesten zur Navigation zwischen Seiten im Browser oder zur Nutzung systemseitiger Screenreader. Die Anforderung gilt auch nicht für Inhalte, bei denen das Verhalten vom Betriebssystem oder Browser bestimmt wird und nicht von Web-Autoren. Ein Beispiel hierfür sind scrollbare Bereiche, die über CSS overflow:scroll definiert sind und für die kein Verhalten bezüglich Zeiger-Gresten über JabvaScript festgelegt wurde, und bei denen die Scrollbalken nicht explizit vom Autor versteckt werden. Beispiele für pfadbasierte Gesten: Wischgeste, etwa zum Bewegen etwa von autor-definierten Slider-Bereichen oder zum Löschen von Inhalten Ziehen eines autor-definierten Sliders, wenn eine initiale Richtung nötig ist, um das Element zu bewegen Zeichnen eines Pfads, z. B. ein 'Z' zum Widerrufen Beispiele für Mehrpunkt-Gesten: Zwei-Finger-Spreizgeste zum Zoomen (sofern dies vom Webinhalt und nicht vom Browser implementiert ist) \"Split tap\" (ein Finger hält, der andere tippt) Streichen mit mehreren Fingern Hinweis : Pfadunabhängige Ziehbewegungen (dragging motions) wie Drag-and-Drop-Eingaben gelten nicht als pfadbasiert im Sinne dieses Prüfschritts, da hier nur Beginn und Endpunkt feststehen und der Pfad dazwischen beliebig ist. Wenn Elemente dem gedrückten Zeiger (Maus-Cursor oder Finger) in jede Richtung folgen und keine initiale Richtung notwendig ist, um die Geste zu vollziehen, ist von einer Ziehbewegung auszugehen. Abhängig von der Prüfumgebung kann diese Unterscheidung unterschiedlich ausfallen. So ist auf Touchscreens in mobilen Systemumgebungen häufig eine initiale horizontale Richtung zum Bewegen von horizontalen Slidern nötig, da bei vertikaler Bewegung stattdessen die Seite gescrollt wird. In dieser Umgebung würde die Bedienung eines solchen Sliders also als pfadbasiert gelten müssen und deshalb unter diesen Prüfschritt fallen.",
    "whyChecked": "Für Menschen mit Bewegungseinschränkungen ist es oft schwierig und teilweise unmöglich, komplexe Zeiger-Gesten erfolgreich auszuführen. Deshalb sollen solche Gesten, wenn Sie von Web-Inhalten implementiert werden, nicht der einzige Weg sein, eine Funktion auszuführen. Beispiele für komplexe Gesten sind Wischgesten vom Rand her, um Menüs einzublenden, Wischgesten zum Bewegen von autor-definierten Karussells bzw. Slidern, oder Mehrpunktgesten wie die Spreizgeste zum Vergrößern eines Kartenausschnitts.",
    "howChecked": "1. Anwendbarkeit des Prüfschritts Der Prüfschritt ist anwendbar, wenn Web-Inhalte Eventhandler implementieren, die auf komplexe Gesten (etwa Wischgesten, Mehrpunkt-Gesten) ansprechen. Ausgenommen sind also Inhalte, bei denen das Verhalten vom Betriebssystem oder Browser bestimmt wird und nicht von Web-Autoren. 2. Prüfung Seite auf einem Smartphone aufrufen. Sichtprüfung und Ausprobieren, ob Webinhalte komplexe Gesten implementieren (z. B. auf Karussells, Slidern). Lassen sich Slider oder andere Inhaltselemente durch autor-definierte Wischgesten bewegen? Werden durch Wischgesten vom Rand her Menüs oder andere Webinhalte eingeblendet? Reagieren bestimmte Elemente (etwa Karten) auf die Zwei-Finger-Spreizgeste zum Ändern des Zoomfaktors? Prüfen, ob die über komplexe Zeigergesten auslösbare Funktion auch über einfache Zeiger-Gesten wie Tippen, Doppeltippen oder Tippen-und-Halten ausgelöst werden kann, etwa durch Aktivierung von alternativen statischen Elementen (z. B. Tasten, die Slider bewegen, Werte erhöhen oder verringern, oder Menüs einblenden). 3. Hinweise Webinhalte können ggf. Alternativen zur Aktivierung über einfache Zeiger-Gesten nur in bestimmten Systemumgebungen und Benutzeragenten anbieten, nicht aber in anderen. So kann beispielsweise ein Test auf einem mobilen Gerät erforderlich sein, um festzustellen, ob die in einem Desktop-Browser angebotenen Alternativen zur Aktivierung über einfache Zeiger-Gesten auch in mobilen Browsern verfügbar sind. Ausgenommen sind Funktionen, die von Natur aus und notwendigerweise auf komplexen Pfaden oder Mehrpunktgesten basieren. So wird beispielsweise die Eingabe der eigenen Signatur von Natur aus pfadbasiert sein. 4. Bewertung Prüfschritt erfüllt Für alle autor-definierten komplexen Zeiger-Gesten gibt es alternative Eingabemöglichkeiten über einfache Zeiger-Gesten in den Umgebungen, die in die Prüfung gemäß Accessibility Baseline einbezogen sind.",
    "sources": "Understanding Success Criterion 2.5.1: Pointer Gestures (zur Zeit nur auf Englisch verfügbar) Github-Issue zur Behandlung von scrollbaren Bereichen bezüglich Anforderungen nach 2.5.1 Ponter Gestures unfd 2.5.7 Dragging Movements . Das Ergebnis der langen Diskussion war, dass für Slider bzw. scrollbare Bereiche nur Alternativen gefordert werden, wenn das Verhalten über Scripts von Web-Autoren explizit definiert wurde und nicht vom Betriebssystem bzw. Browser gehandhabt wird. https://github.com/w3c/wcag/issues/2684",
    "classification": "Einordnung des Prüfschritts nach WCAG 2.1 Guideline Guideline 2.5 Input Modalities: Make it easier for users to operate functionality through various inputs beyond keyboard Success criterion 2.5.1 Pointer Gestures (Level A) Sufficient Techniques G215: Providing controls to achieve the same result as path based or multipoint gestures G216: Providing single point activation for a control slider Failures F105: Failure of Success Criterion 2.5.1 due to providing functionality via a path-based gesture without simple pointer alternative"
  },
  {
    "id": "9.2.5.2",
    "title": "9.2.5.2 Zeigergesten-Eingaben können abgebrochen oder widerrufen werden",
    "whatChecked": "Funktionen von Bedienelementen sollen nicht bereits durch den Down-Event eines Zeigers (z. B. Mauszeiger, Trackpad-Zeiger, Finger oder Eingabestift) auf einem Bedienelement ausgeführt werden; falls doch, muss es eine Möglichkeit geben, die ausgelöste Funktion entweder abzubrechen oder rückgängig zu machen. Eine Ausnahme für diese Anforderung besteht, wenn das Auslösen der Funktion durch das Down-Ereignis essenziell ist (etwa beim Zeichnen mittels Maus, Eingabestift oder Finger auf einem Touchscreen oder Grafiktablett, oder beim Interagieren mit einer virtuellen Tastatur).",
    "whyChecked": "Menschen mit motorischen Beeinträchtigungen haben häufig Schwierigkeiten, Zeiger-Gesten auf Schnittstellen-Elementen zielgerichtet auszuführen. Die Ausführung beim Up-Event (etwa wenn die Maustaste losgelassen wird oder der Finger vom Touchscreen abgehoben wird) gibt diesen Menschen die Möglichkeit, Fehleingaben zu vermeiden, da es sie befähigt, vor Auslösen des Up-Events den Zeiger vom Interface-Element wegzubewegen. Wenn Down-Events bereits Funktionen auslösen, besteht diese Korrekturmöglichkeit nicht. In Fällen, wo eine Zeiger-Eingabe mehrstufig ist, etwa bei Drag-and-Drop Aktionen, ist es wichtig, dass es einen Weg gibt, versehentlich ausgeführte Eingaben rückgängig zu machen. Dies kann auf verschiedene Weise geschehen, etwa über eine Schaltfläche zum Rückgängig-Machen der Aktion, einen Bestätigungsdialog, durch das Loslassen des Elements über dem Ausgangsort, oder durch das Loslassen des Elements über einem Ort, der nicht als Drop Target definiert ist und das Element zum Ausgangspunkt zurückspringen lässt.",
    "howChecked": "1. Anwendbarkeit des Prüfschritts Der Prüfschritt ist anwendbar, wenn auf der Seite Bedienelemente vorhanden sind. 2. Prüfung Es wird auf einem Smartphone überprüft, ob es Bedienelemente gibt, deren Funktionen durch Down-Events ausgelöst werden. Die Prüfung auf dem Desktop ist nicht ausreichend, weil hier Touch-Events wie touchstart ggf. nicht ausgewertet werden. Auf dem Smartphone Bedienelemente (Links, Schalter) berühren, den Finger kurz liegen lassen. Beobachten, ob nun schon eine Funktion ausgeführt wird. Dies geschieht wahrscheinlich aufgrund eines Down-Events. Wenn keine Funktion ausgelöst wird, Finger vom Punkt der Berührung wegbewegen und loslassen. Dadurch wird in der Regel der Aufruf des Links oder der Funktion vermieden, selbst wenn der berührte Punkt dem Finger folgt (die Seite gescrollt wird). Wenn Funktionen beim Down-Event ausgelöst werden, prüfen, ob die Funktion abgebrochen oder rückgängig gemacht werden kann oder beim Up-Event wieder rückgängig gemacht wird. 3. Hinweise Es ist in der Regel nicht notwendig, jedes einzelne Bedienelement aufzurufen, wenn eine stichprobenartige Prüfung zeigt, dass die Umsetzung gleichartig ist. Für ein Menü etwa reicht es dann, bei jeder Art von Menüeintrag (etwa Hauptmenü- und Untermenü-Einträge) ein Element zu testen. Das Gleiche gilt für Fließtextlinks. Es kann bei der Prüfung zum Aufruf von Funktionen des Browsers kommen (etwa: ein Kontextmenü wird angezeigt). Dies ist nicht Teil der Prüfung und sollte ignoriert werden. Als Zeiger-Down-Events gelten mousedown , touchstart und pointerdown . 4. Bewertung Prüfschritt erfüllt Keine Funktionen werden beim Down-Event ausgelöst. Funktionen, die beim Down-Event ausgelöst werden, können abgebrochen, zurückgenommen oder beim Up-Event in den alten Zustand zurückversetzt werden.",
    "sources": "Das Bookmarklet Down-Events auslösen von Prüfstelle T-Systems MMS kann ggf. zusätzlich eingesetzt werden, um der Reihe nach auf allen Elementen down-events auszulösen. Dabei muss die Seite genau beobachtet werden, ob sich etwas ändert bzw. geändert hat. Die Geschwindigkeit (Intervall in Millisekunden) kann am Beginn eingestellt werden. Understanding Success Criterion 2.5.2: Pointer Cancellation (zur Zeit nur auf Englisch verfügbar) Spezifikation PointerEvents ( https://www.w3.org/TR/pointerevents/ ) Spezifikation TouchEvents ( https://www.w3.org/TR/touch-events/ ) Spezifikation UIEvents ( https://www.w3.org/TR/uievents/ )",
    "classification": "Einordnung des Prüfschritts nach WCAG 2.1 Guideline Guideline 2.5 Input Modalities: Make it easier for users to operate functionality through various inputs beyond keyboard Success criterion 2.5.2 Pointer Cancellation (Level A) Sufficient Techniques G210: Ensuring that drag-and-drop actions can be cancelled G212: Using native controls to ensure functionality is triggered on the up-event. Failures F101: Failure of Success Criterion 2.5.2 due to activating a control on the down-event"
  },
  {
    "id": "9.2.5.3",
    "title": "9.2.5.3 Sichtbare Beschriftung Teil des zugänglichen Namens",
    "whatChecked": "Sichtbare Beschriftungen von Bedienelementen sollen im zugänglichen Name des Bedienelements vorkommen. Dies betrifft zum Beispiel Links, Beschriftungen von Textfeldern, Buttons oder Checkboxen.",
    "whyChecked": "Spracheingabenutzer können Bedienelemente wie Links, Tasten oder Eingabefelder aktivieren, indem sie den sichtbaren Namen sagen, auch in der Verbindung mit Befehlen (z. B. Klick \"Abschicken\" ). Wenn die sichtbare Beschriftung nicht in dem hinterlegten zugänglichen Namen des Bedienelements (also dem Text, der programmatisch als Beschriftung ermittelt wird) vorkommt, lässt sich das Bedienelement gegebenenfalls nicht oder nur über Umwege mittels Spracheingabe aktivieren. Bedienelemente haben manchmal einen zugänglichen Namen, der von der sichtbaren Beschriftung abweicht, weil er über nicht sichtbare Attribute wie aria-label oder über nur bei Mausnutzung eingeblendete Attribute wie title festgelegt wird. So könnte etwa die sichtbare Beschriftung \"AGB akzeptieren\" durch den hinterlegten zugänglichen Namen \"Allgemeine Geschäftsbedingungen annehmen\" ersetzt werden. Wenn Spracheingabenutzer nun Klicke \"AGB akzeptieren\" diktieren, kommt dieser Text so nicht im zugänglichen Namen vor, die Eingabe schlägt deshalb fehl. Manchmal wird versteckter Text benutzt, um sichtbare Beschriftungen zu erweitern, oft auch in der Absicht, Hilfsmittelnutzern zu helfen. Das ist dann in Ordnung, wenn die sichtbare Beschriftung durchgehend in dem zugänglichen Namen enthalten ist, am besten zu Beginn.",
    "howChecked": "1. Anwendbarkeit des Prüfschritts Der Prüfschritt ist anwendbar auf Bedienelemente, die entweder sich selbst beschriften (Links, Tasten) oder einem Bedienelement wie einem Texteingabefeld oder einer Checkbox direkt zugeordnet sind. Auf Bedienelemente, die durch mehrere sichtbare Elemente beschriftet sind, ist der Prüfschritt nicht anwendbar, so wenn Elemente über eine tabellarische Matrix über Beschriftungen in Spalten- und Zeilenüberschriften ihren zugänglichen Namen empfangen. In diesen Fällen ist es für den Spracheingabe-Nutzer unklar, welche Elemente als Beschriftung des Bedienelements gelten und dementsprechend für ein Diktat per Spracheingabe benutzt werden sollten. 2. Prüfung Für jedes Bedienelement, das sich selbst beschriftet oder durch einen einfachen zugeordneten Text beschriftet ist, prüfen, ob der Text in der gleichen Form im zugänglichen Namen des Bedienelements vorkommt. 3. Hinweise Verwenden Sie einen Screenreader, die Entwickler-Werkzeuge des Browsers oder ein anderes Tool (etwa ein Bookmarklet), um den zugänglichen Namen jedes Bedienelements für den Vergleich mit dem Text der sichtbaren Beschriftung zu ermitteln (Beachten Sie, dass die Screenreader-Ausgabe Informationen enthalten kann, die nicht Teil des zugänglichen Namens sind, zum Beispiel die Rolle des Bedienelements oder eine zusätzliche Beschreibung). Der zugängliche Name des Bedienelements kann zusätzlichen Text enthalten, aber die Zeichenkette der Beschriftung sollte in der gleichen Form in der Zeichenkette des zugänglichen Namens enthalten sein. 4. Bewertung Der Prüfschritt ist erfüllt, wenn der Beschriftungstext in der gleichen Form im zugänglichen Namen vorkommt.",
    "sources": "Understanding Success Criterion 2.5.3: Label in Name (zur Zeit nur auf Englisch verfügbar) Accessible Name and Description Computation: https://www.w3.org/TR/accname/#mapping_additional_nd_te (zur Zeit nur auf Englisch verfügbar)",
    "classification": "Einordnung des Prüfschritts nach WCAG 2.1 Guideline Guideline 2.5 Input Modalities: Make it easier for users to operate functionality through various inputs beyond keyboard Success criterion 2.5.3 Label in Name (Level A) Sufficient Techniques G208: Including the text of the visible label as part of the accessible name G211: Matching the accessible name to the visible label Failures F96: Failure due to the accessible name not containing the visible label text"
  },
  {
    "id": "9.2.5.4",
    "title": "9.2.5.4 Alternativen für Bewegungsaktivierung",
    "whatChecked": "Wenn Webinhalte auf die Bewegung eines mobilen Gerätes reagieren oder wenn Bewegungen der Nutzenden von Gerätesensoren oder der Kamera erfasst werden, um Funktionen auszulösen, sollten hierfür alternative Eingabemöglichkeiten vorhanden sein, und die Bewegungseingabe soll von Nutzenden abgeschaltet werden können. Der Prüfschritt gilt nicht für Bewegungseingaben, die für die Funktion wesentlich sind, z. B. wenn ein Bewegungssensor die Schritte einer Person aufzeichnet, oder wenn die Bewegung Teil einer zugänglichkeits-unterstützten Hilfsmitteleingabe ist. Abschaltbarkeit der Bewegungseingabe: Gegebenenfalls können Webinhalte diese Anforderung erfüllen, indem sie Betriebssystemeinstellungen unterstützen, die es den Nutzenden ermöglichen, die Bewegungserkennung auf Systemebene zu deaktivieren.",
    "whyChecked": "Menschen mit motorischen Einschränkungen können Bewegungseingaben oft nicht, oder nicht gezielt, ausführen. In manchen Fällen sind Geräte fest montiert, zum Beispiel an einem Rollstuhl, was Bewegungseingaben unmöglich macht. Deshalb ist es wichtig, dass es auch andere Möglichkeiten der Eingabe über Bedienelemente des Webinhaltes gibt. Bei anderen motorischen Einschränkungen kann es durch unwillkürliche Bewegungen zu ungewollten Eingaben kommen. Deshalb ist es wichtig, dass sich von Webinhalten bereitgestellte motorische Eingaben deaktivieren lassen.",
    "howChecked": "1. Anwendbarkeit des Prüfschritts Der Prüfschritt ist anwendbar, wenn Webinhalte bestimmte Bewegungseingaben definieren, etwa die Bewegung durch eine 360-Grad-Rundumansicht durch ein Rotieren des Geräts, oder das Blättern durch eine Folge von Präsentationsfolien durch ruckartige Seitwärtsbewegungen. 2. Prüfung Über Bewegungen, Quellcode-Prüfung oder geeignete Hilfsfunktionen, die in Scripten das Vorhandensein von Motion-Eventhandlern aufzeigen, prüfen, ob der Webinhalt in irgend einer Weise auf Bewegungseingaben reagiert. Für alle Funktionen, die über Bewegungseingabe ausgelöst werden, prüfen, ob alternative Eingabemöglichkeiten über Bedienelemente bestehen. Prüfen, ob sich vorhandene Bewegungseingaben abschalten lassen. 3. Bewertung Prüfschritt erfüllt Von Webinhalten definierte Bewegungseingaben haben eine alternative Eingabemöglichkeit über zugängliche Bedienelemente oder lassen sich vom Nutzer wirkungsvoll deaktivieren (ggf. über Einstellungen des Betriebssystems).",
    "sources": "Understanding Success Criterion 2.5.4: Motion Actuation (zur Zeit nur auf Englisch verfügbar)",
    "classification": "Einordnung des Prüfschritts nach WCAG 2.1 Guideline Guideline 2.5 Input Modalities: Make it easier for users to operate functionality through various inputs beyond keyboard Success criterion 2.5.4 Motion Actuation (Level A) Sufficient Techniques G213: Provide conventional controls and an application setting for motion activated input Failures F106: Failure due to inability to deactivate motion actuation"
  },
  {
    "id": "9.3.1.1",
    "title": "9.3.1.1 Hauptsprache angegeben",
    "whatChecked": "Die Hauptsprache der Webseite soll angegeben werden.",
    "whyChecked": "Screenreader verwenden Wortlisten, in denen die Aussprache der Wörter festgelegt ist. Sie müssen wissen, in welcher Sprache ein Text verfasst ist, damit sie die richtige Wortliste verwenden und den Text korrekt aussprechen können.",
    "howChecked": "1. Anwendbarkeit des Prüfschritts Der Prüfschritt ist immer anwendbar. 2. Prüfung Quelltextanalyse: Den Quelltext der Seite ansehen und prüfen, ob im öffnenden html -Element das lang -Attribut (bzw. bei xhtml-Seiten das xml:lang -Attribut) verwendet wird und darin die Hauptsprache der Seite richtig angegeben ist. 3. Bewertung Erfüllt Die Hauptsprache der Webseite ist korrekt angegeben. Nicht erfüllt Die Hauptsprache der Webseite ist nicht angegeben oder es wird eine falsche Sprache angegeben.",
    "classification": "Abgrenzung zu anderen Prüfschritten Prüfschritt 9.3.1.2 \"Anderssprachige Wörter und Abschnitte ausgezeichnet\" Einordnung des Prüfschritts nach WCAG 2.1 Guideline Guideline 3.1 Readable: Make text content readable and understandable Success criterion 3.1.1 Language of Page (Level A) Techniques HTML Techniques H57: Using language attributes on the html element"
  },
  {
    "id": "9.3.1.2",
    "title": "9.3.1.2 Anderssprachige Wörter und Abschnitte ausgezeichnet",
    "whatChecked": "Wenn innerhalb einer Seite Wörter und Textabschnitte in einer anderen Sprache vorkommen, müssen diese mithilfe des lang -Attributs ausgezeichnet werden.",
    "whyChecked": "Screenreader verwenden Wortlisten, in denen die Aussprache der Wörter festgelegt ist. Sie müssen wissen, zu welcher Sprache ein Text gehört, damit sie die richtige Wortliste verwenden und den Text korrekt aussprechen können.",
    "howChecked": "1. Anwendbarkeit des Prüfschritts Der Prüfschritt ist anwendbar, wenn die Seite Wörter, ganze Sätze, Absätze oder andere größere Abschnitte in einer anderen Sprache enthält. 2. Prüfung Seite im Firefox aufrufen. Das Lang bookmarklet aufrufen. Prüfen, ob anderssprachige Wörter und Abschnitte richtig ausgezeichnet sind. Ausnahmen gelten für Eigennamen, Fachbegriffe und unklare Sprache (siehe [3.Hinweise] ). 3. Hinweise Einzelne fremdsprachige Wörter können als Teil der Sprache des umgebenden Textes betrachtet werden und müssen nicht ausgezeichnet werden, es sei denn, es ist klar, dass eine Änderung der Sprache beabsichtigt war oder die Aussprache ohne einen Sprachwechsel unverständlich wäre. In deutschen Texten ist z.B. bei Wörtern wie \"Enter\" oder \"Helpdesk\" eine Auszeichnung nicht sinnvoll: solche Begriffe sind zum einen tendenziell bereits Teil der deutschen Sprache und werden zum anderen deutsch und englisch sehr ähnlich ausgeprochen, so dass ohne Sprachauszeichnung kein praktisches Problem entsteht. Ebenfalls nicht ausgezeichnet werden sollten \"gemischte\" Wörter. Beispiele für solche Wörter: Webauftritt, Checkpunkt. Einzelne fremdsprachige Wörter müssen ausgezeichnet werden, wenn sie keinen Eingang in den deutschen Sprachgebrauch gefunden haben. Wörter, die im aktuellen \"Deutschen Universalwörterbuch\" des Duden-Verlags aufgenommen sind, müssen nicht ausgezeichnet werden. Die Online-Duden-Suche unter http://www.duden.de/suchen erlaubt leider keine Differenzierung mehr, in welchem Duden-Wörterbuch Einträge gefunden wurden. Sie kann also allenfalls unterstützend herangezogen werden. Die Wortlisten von Screenreadern sollten auch geläufige Fremdwörter enthalten. Dies ist jedoch nicht durchgängig der Fall, auch geläufige Fremdwörter werden ohne Auszeichnung falsch ausgesprochen. Daher macht ihre Auszeichnung Sinn, auch wenn sie nicht gefordert wird. Beispiele für geläufige Fremdwörter, die ausgezeichnet werden können, aber nicht müssen: Copyright, Website, Site, Homepage. 4. Bewertung Erfüllt Anderssprachige Wörter und Abschnitte sind durchgängig ausgezeichnet. Wenn einzelne anderssprachige Wörter \"vergessen\" worden sind, soll das nicht negativ bewertet werden. Sie sollten aber zu mindestens 90% ausgezeichnet sein Nicht erfüllt Weniger als 50 % der anderssprachigen Wörter sind ausgezeichnet.",
    "sources": "Wichtigkeit der Sprachauszeichnung nach WCAG 2.1 Identifying changes in language is important for a number of reasons: It allows braille translation software to follow changes in language, e.g., substitute control codes for accented characters, and insert control codes necessary to prevent erroneous creation of Grade 2 braille contractions. Speech synthesizers that support multiple languages will be able to speak the text in the appropriate accent with proper pronunciation. If changes are not marked, the synthesizer will try its best to speak the words in the default language it works in. Thus, the French word for car, \"voiture\" would be pronounced \"voyture\" by a speech synthesizer that uses English as its default language. Marking changes in language can benefit future developments in technology, for example users who are unable to translate between languages themselves will be able to use machines to translate unfamiliar languages. Marking changes in language can also assist user agents in providing definitions using a dictionary. ( Language of Parts: Understanding SC 3.1.2 )",
    "classification": "Abgrenzung zu anderen Prüfschritten Prüfschritt 9.3.1.1 \"Hauptsprache angegeben\" Einordnung des Prüfschritts nach WCAG 2.1 Guideline Guideline 3.1 Readable: Make text content readable and understandable Success criterion 3.1.2 Language of Parts (Level AA) Techniques HTML Techniques H58: Using language attributes to identify changes in the human language"
  },
  {
    "id": "9.3.2.1",
    "title": "9.3.2.1 Keine unerwartete Kontextänderung bei Fokus",
    "whatChecked": "Wenn irgendeine Komponente der Seite den Fokus erhält, soll dies nicht zu einer unerwarteten Kontextänderung führen.",
    "whyChecked": "Unerwartete und unangekündigte Kontextänderungen bei Fokussierung einer Komponente (z. B. das automatische Abschicken von Formularen), kann die Orientierung von Nutzenden beeinträchtigen. Kontextänderungen auf der Seite selbst können Nutzende ablenken und verwirren oder auch unbemerkt bleiben und dadurch für Verwirrung sorgen. Sie sollten deshalb erwartet und klar nachvollziehbar sein. Das Öffnen neuer Fenster bei Fokussierung einer Komponente oder beim Laden einer Seite kann die Orientierung der Nutzenden ebenfalls beeinträchtigen. Das gilt ganz besonders für blinde und sehbehinderte Nutzende. Sie bemerken möglicherweise nicht, dass sich der Kontext geändert hat. Wenn das neue Fenster den Fokus erhält, funktioniert der Zurück-Button des Browsers nicht mehr. Der Überblick kann verloren gehen, möglicherweise wird dann versehentlich das falsche Fenster (mit der Historie der bislang besuchten Seiten) geschlossen.",
    "howChecked": "1. Anwendbarkeit des Prüfschritts Der Prüfschritt ist anwendbar, wenn der Webauftritt interaktive Elemente enthält. 2. Prüfung Seite im Firefox aufrufen. Das Laden der Seite sollte kein neues Fenster öffnen. Mit der Tabulatortaste die Links und Formularelemente durchgehen. Der Fokuserhalt soll keine automatischen Kontextänderungen (etwa Pop-up-Fenster oder automatisches Abschicken von Formularen) auslösen. 3. Hinweise Der Prüfschritt bezieht sich nur auf neue Browserfenster, nicht auf skriptgesteuerte Seiten-Elemente, die den Inhalt überlagern (Stichwort modaler Dialog). Das Öffnen von Custom Tooltips, also nicht modalen Fenstern, die sich beim Weitertabben oder Mausklick selbständig schließen, gilt dabei nicht als Kontextänderung.",
    "classification": "Einordnung des Prüfschritts nach WCAG 2.1 Guideline Guideline 3.2 Predictable: Make Web pages appear and operate in predictable ways. Success criterion 3.2.1 On Focus (Level A) Techniques General Techniques G107: Using \"activate\" rather than \"focus\" as a trigger for changes of context Advisory Techniques G200: Opening new windows and tabs from a link only when necessary G201: Giving users advanced warning when opening a new window Failures F52: Failure of Success Criterion 3.2.1 due to opening a new window as soon as a new page is loaded",
    "questions": "Der Prüfschritt bezieht sich nur auf das Öffnen neuer Fenster beim Laden der Seite, erlaubt die BITV 2.0 jetzt das unangekündigte Öffnen von neuen Fenstern über Links? Die WCAG empfehlen in den Advisory Techniques G200 und G201 , das Öffnen neuer Fenster auf Fälle zu beschränken, in denen das aus einer Zugänglichkeitsperspektive sinnvoll ist und Benutzer zuvor über das Öffnen eines neuen Fensters zu informieren (etwa als Teil des Links, der das Fenster öffnet). Das unangekündigte Öffnen neuer Fenster bei der Aktivierung von Links wird jedoch grundsätzlich akzeptiert. Dies ist dadurch gerechtfertigt, das moderne Benutzeragenten Einstellungsmöglichkeiten für den Umgang mit automatisch öffnenden Fenstern bieten. In den meisten aktuellen Browser-Versionen lässt sich inzwischen festlegen, ob neue Fenster also zusätzliches Browser-Fenster oder in einem Tab (Registrierkarte) geöffnet werden sollen oder ob unangekündigte Fenster grundsätzlich unterdrückt werden sollen (Stichwort Popup-Blocker). Einige Browser (Firefox) erlauben auch die Festlegung, ob neue Tabs im Vordergrund geöffnet werden sollen (also den Fokus erhalten sollen) oder nicht."
  },
  {
    "id": "9.3.2.2",
    "title": "9.3.2.2 Keine unerwartete Kontextänderung bei Eingabe",
    "whatChecked": "Eingaben von Nutzenden auf Formularen sollen nicht zu unerwarteten Kontext-Änderungen führen. Alle Kontextänderungen müssen unterhalb des auslösenden Elements geschehen und sollen klar nachvollziehbar sein, der Fokus soll nicht versetzt werden.",
    "whyChecked": "Unerwartete und unangekündigte Kontextänderungen bei einer Auswahl in Formularen können die Orientierung von Nutzern beeinträchtigen (z.B. die Auswahl einer Checkbox oder ein Radio-Button ruft eine neue Seite auf, eine Auswahlliste ohne Submit-Button reagiert auf onchange . Kontextänderungen auf der Seite selbst können Nutzende ablenken und verwirren oder auch unbemerkt bleiben und dadurch für Verwirrung sorgen (plötzlich sind Inhalte verändert). Sie sollten deshalb erwartet und klar nachvollziehbar sein. Wenn Kontextänderungen auf der selben Seite nicht unterhalb des Elements stattfinden, das sie auslöst, werden sie von blinden Nutzenden häufig nicht wahrgenommen.",
    "howChecked": "1. Anwendbarkeit des Prüfschritts Der Prüfschritt ist anwendbar, wenn die Seite Formularelemente enthält. 2. Prüfung Seite im Browser (Chrome oder Firefox) aufrufen. Formularelemente (Checkboxes, Radio Buttons, Auswahllisten) ausprobieren. Werden unerwartete und nicht angekündigte Kontextänderungen erzeugt? Überprüfen, ob Inhaltsänderungen hervorgerufen werden (etwa Einblendungen zusätzlicher Formularfelder). Sind die Inhaltsänderungen begrenzt und gut nachvollziehbar oder werden vor dem auslösenden Element angekündigt bzw. erklärt? Prüfen, ob Inhaltsänderungen unterhalb des Elements, das sie auslöst, hervorgerufen werden. Prüfen, ob durch Formulareingaben hervorgerufene Kontextänderungen (etwa dynamisch eingeblendete Elemente) den aktuellen Fokus versetzen. 3. Hinweise Fehlermeldungen, die über die JavaScript-Funktion alert() ausgegeben werden, gelten nicht als Pop-Ups im Sinne des Prüfschritts. Sie öffnen sich als Antwort auf Eingaben von Nutzenden und sie sind modal, in Hinblick auf die Orientierung daher unproblematisch. Änderungen, die über Skripte und ARIA Live Regions vorgenommen werden, etwa die automatische Einblendung von Vorschlägen unterhalb des Texteingabefelds einer Such-Funktion, sollen nicht den aktuellen Fokus versetzen. Zur Abgrenzung von Kontextänderungen und Inhaltsänderungen: Klare Kontextänderungen ( changes of context ) sind laut WCAG 2.1 etwa Sprünge zu anderen Seiten und das Öffnen neuer Fenster, aber auch das dynamische Laden von neuen Inhalten auf der selben Seite, wenn diese Inhalte wie eine neue Seite wirken oder Inhalte in stark veränderter Anordnung erscheinen. Auch das Auslösen von Sprunglinks zu Ankern auf derselben Seite ist als Kontextänderung zu betrachten. Davon abgrenzen muss man bloße Inhaltsänderungen (in den WCAG 2.1: changes of content ). Diese liegen vor, wenn etwa die Auswahl in einer Auswahlliste ( select ) die Inhalte einer darunter befindlichen Auswahlliste dynamisch aktualisiert (etwa: die Wahl eines Kontinents aktualisiert eine Auswahlliste mit Ländern). Auch das Ausklappen zusätzlicher Formularbereiche unterhalb des auslösenden Elements kann als Inhaltsänderung gelten, wenn Fokus und Scrollstatus der Seite unverändert bleiben. Ob Änderungen unerwartet sind oder nicht, lässt sich nur aus dem Gesamtkontext heraus bestimmen. Vergleiche: WCAG 2.1, Appendix A: Glossary: changes of context 4. Bewertung Nicht voll erfüllt Die Interaktion mit Formularelementen führt zu unerwarteten und nicht angekündigten Kontextänderungen. Nicht erfüllt Formulare werden automatisch abgeschickt, wenn der Fokus das Formular verlässt. Das Ändern des Status einer Checkbox oder eines Radio-Buttons löst automatisch eine unerwartete Kontextänderung aus (öffnet etwa ein neues Fenster).",
    "classification": "Abgrenzung von anderen Prüfschritten Die Verwendung von Submit-Buttons, die in den Techniken G80 und H32 dem Success Criterion 3.2.2 On Input [no automatic change of context ] zugeordnet ist, wird nur indirekt im Prüfschritt 9.2.1.1 \"Ohne Maus nutzbar\" geprüft. Einordnung des Prüfschritts nach WCAG 2.1 Guideline Guideline 3.2 Predictable: Make Web pages appear and operate in predictable ways Success criterion 3.2.2 On Input (Level A) Techniques General Techniques G80: Providing a submit button to initiate a change of context using a technology-specific technique listed below Hinweis: Die Technik G80 ist SC 3.2.2 zugeordnet, wird aber nur indirekt geprüft. G13: Describing what will happen before a change to a form control that causes a change of context to occur is made HTML Techniques H32: Providing submit buttons Hinweis: Die Technik H32 ist SC 3.2.2 zugeordnet, wird aber nur indirekt geprüft. H84: Using a button with a select element to perform an action Failures F36: Failure of Success Criterion 3.2.2 due to automatically submitting a form and presenting new content without prior warning when the last field in the form is given a value F37: Failure of Success Criterion 3.2.2 due to launching a new window without prior warning when the status of a radio button, check box or select list is changed"
  },
  {
    "id": "9.3.2.3",
    "title": "9.3.2.3 Konsistente Navigation",
    "whatChecked": "Navigationsmechanismen sollen innerhalb des Webauftritts einheitlich sein.",
    "whyChecked": "Eine einheitliche Navigation innerhalb des Webauftritts erleichtert das Verständnis, Gesuchtes wird leichter gefunden.",
    "howChecked": "1. Anwendbarkeit des Prüfschritts Der Prüfschritt ist immer anwendbar 2. Prüfung 2.1 Ist die Navigation einheitlich? Ausgehend von der Startseite verschiedene Bereiche des Webangebots aufsuchen, dabei wenn möglich unterschiedliche Navigationsmechanismen verwenden (Menüs, Direktlinks, Breadcrumb, Teaser oder Suche). Prüfen, ob Navigationsmechanismen und Menüeinträge in verschiedenen Bereichen des Webauftritts gleich angeordnet und gestaltet sind. 3. Hinweise Die Navigation auf der Startseite unterscheidet sich häufig von der Navigation auf anderen Seiten, weil dort noch kein Bereichsmenü angezeigt werden muss oder weil zusätzliche Navigationsmöglichkeiten nur auf der Startseite angeboten werden. Falls Inhalte über geskriptete Layer eingeblendet werden, sollte geprüft werden, ob sich diese Inhalte deutlich von sonstigen Seiten und Seitenwechseln unterscheiden, da hier die üblichen Navigationsmöglichkeiten (etwa der Zurück-Button des Browsers) nicht gleichermaßen greifen. 4. Bewertung Bewertung als nicht oder teilweise erfüllt immer erläutern!",
    "sources": "Die WCAG 2.1 zur Bedeutung einheitlicher Navigation und der Berechtigung abweichender Bereichsnavigation Ensuring that repeated components occur in the same order on each page of a site helps users become comfortable that they will able to predict where they can find things on each page. This helps users with cognitive limitations, users with low vision, users with intellectual disabilities, and also those who are blind. (…​) Individuals with low vision who use screen magnification to display a small portion of the screen at a time often use visual cues and page boundaries to quickly locate repeated content. Presenting repeated content in the same order is also important for visual users who use spatial memory or visual cues within the design to locate repeated content. It is important to note that the use of the phrase \"same order\" in this section is not meant to imply that subnavigation menus cannot be used or that blocks of secondary navigation or page structure cannot be used(…​) ( Consistent Navigation: Understanding SC 3.2.3 )",
    "classification": "Abgrenzung von anderen Prüfschritten Geprüft wird in der \"Normaleinstellung\", also mit eingeschaltetem JavaScript und mit den für den Webauftritt vorgesehenen Stylesheets. Der Prüfschritt 9.1.3.3 \"Ohne Bezug auf sensorische Merkmale nutzbar\" klärt, ob die Navigation auch funktioniert, wenn die zugeordneten Stylesheets nicht verwendet werden. Einordnung des Prüfschritts nach WCAG 2.1 Guideline Guideline 3.2 Make Web pages appear and operate in predictable ways. Success criteria 3.2.3 Consistent Navigation (Level AA) Techniques General Techniques G61: Presenting repeated components in the same relative order each time they appear Failures F66: Failure of Success Criterion 3.2.3 due to presenting navigation links in a different relative order on different pages"
  },
  {
    "id": "9.3.2.4",
    "title": "9.3.2.4 Konsistente Bezeichnung",
    "whatChecked": "Navigationsmechanismen und Funktionen, die innerhalb eines Webauftritts wiederholt eingesetzt werden, sollen einheitlich bezeichnet sein.",
    "whyChecked": "Klare und durchgängig verwendete Bezeichnungen für die Navigation und sich wiederholende Funktionen erleichtern Benutzern das Verständnis der Inhalte des Angebots. Gesuchtes wird leichter gefunden, Zusammenhänge sind einfacher zu erkennen.",
    "howChecked": "1. Anwendbarkeit des Prüfschritts Der Prüfschritt ist immer anwendbar 2. Prüfung 2.1 Sind Navigation und sich wiederholende Funktionen einheitlich bezeichnet? Ausgehend von der Startseite verschiedene Bereiche des Webangebots aufsuchen. Prüfen, ob Navigationsmechanismen, Menüeinträge und sich wiederholende Funktionen in verschiedenen Bereichen des Webauftritts aussagekräftig und einheitlich benannt sind. Orientieren sich die (oft kürzeren) Menüeinträge an den Überschriften der Zielseiten? Falls das Angebot Framesets zur Gliederung der Inhaltsbereiche benutzt: Mit der Web Developer Toolbar auf verschiedenen Seiten mit der Funktion Outline &gt; Outline Frames gefolgt von Information &gt; Display Element Information und dann einem Klick mit dem Cursor-Fadenkreuz auf den Rahmen der Frames prüfen, ob Frames mit gleichen Inhalten (etwa Navigationsmenü) immer an der gleichen Stelle im frameset eingebunden sind. 3. Bewertung Bewertung als nicht oder teilweise erfüllt immer erläutern!",
    "classification": "Abgrenzung von anderen Prüfschritten Während es in diesem Prüfschritt darum geht, ob die eingesetzten Navigationsmechanismen durchgängig einheitliche Bezeichnungen verwendet werden, wird in Prüfschritt 9.3.2.3 \"Konsistente Navigation\" dagegen geprüft, ob die Navigationsmechanismen und Menüeinträge in verschiedenen Bereichen des Webauftritts durchgängig einheitlich angeordnet sind. Einordnung des Prüfschritts nach WCAG 2.1 Guideline Guideline 3.2 Make Web pages appear and operate in predictable ways. Success criteria 3.2.4 Consistent Identification (Level AA) Techniques General Techniques G131: Providing descriptive labels G197: Using labels, names, and text alternatives consistently for content that has the same functionality HTML Techniques H70: Using frame elements to group blocks of repeated material Failures F31: Failure of Success Criterion 3.2.4 due to using two different labels for the same function on different Web pages within a set of Web pages"
  },
  {
    "id": "9.3.3.1",
    "title": "9.3.3.1 Fehlererkennung",
    "whatChecked": "Wenn ein Formular Fehlermeldungen erzeugt, sollen die fehlerhaft ausgefüllten Felder identifiziert und der Fehler in Textform beschrieben werden.",
    "whyChecked": "Bei Formulareingaben kommt es öfters zu Fehlern: Nutzer verschreiben sich oder überspringen benötigte Eingaben. Wenn das Angebot Nutzereingaben überprüft, sollen die Felder mit fehlerhaften oder fehlenden Eingaben identifiziert werden. Dies erleichtert den Nutzern, Eingaben zu korrigieren.",
    "howChecked": "1. Anwendbarkeit des Prüfschritts Der Prüfschritt ist anwendbar, wenn die Seite Formulare enthält, welche bei inkorrektem Ausfüllen Fehlermeldungen erzeugen. Dies kann schon während der Eingabe oder erst nach dem Abschicken des Formulars geschehen. 2. Prüfung Formular unvollständig oder fehlerhaft ausfüllen, etwa durch das Leerlassen von Pflichtfeldern oder das Eingeben syntaktisch nicht korrekter E-Mail-Adressen. Falls das Abschicken des Formulars eine Fehlermeldung erzeugt: Prüfen, ob die betroffenen Felder identifiziert werden und der Fehler mit Hilfe von Text beschrieben wird. Die Identifizierung der betroffenen Felder kann, auch abhängig von der Länge des Formulars, auf verschiedene Arten geschehen: Bei Neuanzeige des Formulars werden am Seitenbeginn fehlerhaft ausgefüllte Felder identifiziert. Fehlerhaft ausgefüllte Felder werden zusätzlich deutlich hervorgehoben. Die Labeltexte fehlerhaft ausgefüllter Felder ändern sich, um auf die Fehler darstellungsunabhängig hinzuweisen. Fehlermeldungen, die nahe am Formularfeld positioniert sind, aber nicht Teil des Labels sind, sind programmatisch ermittelbar, etwa durch die Verknüpfung mittels aria-labelledby oder aria-describedby . Fehlermeldungen werden mit Hilfe von Live-Regionen oder Benachrichtigungen ( alertdialog ) bereitgestellt. Prüfen, ob nach Korrektur der Eingaben und erneutem Abschicken des Formulars zuvor angezeigte Fehlermeldungen verschwinden. 3. Hinweise Wenn serverseitig eine Fehlermeldung auf neuer Seite ausgegeben wird, wird diese wie ein Seitenzustand unter der Ausgangsseite mitgeprüft. Geprüft wird auch die Erfüllung anderer relevanter Prüfkriterien. Wenn Formulare keine Fehlermeldungen erzeugen, ist dies nicht negativ zu bewerten. Die Verknüpfung von Fehlermeldungen mit aria-errormessage (siehe WAI-ARIA 1.1 Spec ) ist bislang noch nicht ausreichend von Browsern unterstützt, um Fehlermeldungen ausreichend zugänglich für Screenreader-Nutzende zu verknüpfen. 4. Bewertung Nicht voll erfüllt Die Fehlermeldung nach Formularüberprüfung benennt Felder mit fehlender oder fehlerhafter Eingabe nicht klar oder verweist nicht deutlich darauf (etwa durch Änderung des dem Feld zugeordneten Labels, semantische Hervorhebung, oder Links). Unspezifische Fehlermeldung, Felder mit Eingabefehlern oder fehlenden Eingaben werden lediglich grafisch hervorgehoben. Nicht erfüllt Die Fehlermeldung gibt keinen Aufschluss darüber, welche Eingabe den Fehler erzeugt hat. Bei fehlerhafter Eingabe wird das Formular neu angezeigt. Bereits gemachte korrekte Eingaben sind gelöscht, die Felder sind wieder leer und müssen erneut ausgefüllt werden. Ausnahme: Das Löschen bereits gemachter Eingaben ist sinnvoll bei sicherheitsrelevanten Daten wie Passwörtern oder Benutzernamen.",
    "sources": "DOM Scripting und WAI ARIA zur Erzeugung von Fehlermeldungen während der Formular-Eingabe Marco’s accessibility blog: Easy ARIA tip #3: aria-invalid and role \"alert\" (Juli 2008, englischer Text)",
    "classification": "Abgrenzung von anderen Prüfschritten Ob infolge von Fehleingaben generierte oder eingeblendete Fehlermeldungen an der richtigen Stelle im Quelltext stehen, ist Gegenstand des Prüfschritts 9.1.3.2 \"Sinnvolle Reihenfolge\". Einordnung des Prüfschritts nach WCAG 2.1 Guideline Guideline 3.3 Input Assistance: Help users avoid and correct mistakes. Success criteria 3.3.1 Error Identification (Level A) Techniques General Techniques G83: Providing text descriptions to identify required fields that were not completed G84: Providing a text description when the user provides information that is not in the list of allowed values G85: Providing a text description when user input falls outside the required format or values Scripting Techniques SCR18: Providing client-side validation and alert SCR32: Providing client-side validation and adding error text via the DOM ARIATechniques ARIA18: Using aria-alertdialog to Identify Errors ARIA19: Using ARIA role=alert or Live Regions to Identify Errors ARIA21: Using Aria-Invalid to Indicate An Error Field",
    "questions": "Warum wird nicht grundsätzlich bei allen Formularen eine Fehlerüberprüfung verlangt? Eine Fehlerbehandlung ist oft sinnvoll, aber nicht grundsätzlich bei allen Formularen. Das hängt ab vom Zweck des Formulars und der Art des Angebots. So kann es unter Umständen sinnvoll sein, grundsätzlich alle Eingaben, auch solche mit Fehlern, zu verwerten. Wenn jedoch irgendwelche Fehlermeldungen generiert werden, müssen diese brauchbar sein. Das wird in diesem Prüfschritt überprüft."
  },
  {
    "id": "9.3.3.2",
    "title": "9.3.3.2 Beschriftungen von Formularelementen vorhanden",
    "whatChecked": "Sichtbare Beschriftungen von Formularelementen sind vorhanden. Eine sichtbare Beschriftung von Formularelementen soll vor (das heißt links neben oder über) dem zugehörigen Eingabefeld vorhanden sein. Nur die Beschriftung von Checkboxes und Radiobuttons kann (und sollte normalerweise) rechts neben dem zugehörigen Eingabefeld angeordnet werden. Wenn für die Eingabe ein bestimmtes Format verlangt wird, so sind die Anweisungen für alle Benutzer lesbar.",
    "whyChecked": "Wenn sichtbare Beschriftungen zur Verfügung gestellt werden, wissen Nutzer, welche Eingaben erwartet werden. Fehler können so vermieden werden. Die Anordnung von Beschriftungen direkt vor oder über dem Eingabefeld entspricht den üblichen Gestaltungskonventionen. Auch in ausschnitthaften Ansichten (etwa in Vergrößerungssoftware) wird schnell klar, welche Beschriftung zu welchem Feld gehört.",
    "howChecked": "1. Anwendbarkeit des Prüfschritts Der Prüfschritt ist anwendbar, wenn die Seite Formularelemente enthält. 2. Prüfung Die Seite im Firefox oder Chrome Browser aufrufen. 2.1 Sind Beschriftungen vorhanden? Sind alle Formularelemente sichtbar beschriftet? Sind Pflichtfelder über Text gekennzeichnet, etwa durch die Ergänzung (Pflichtfeld) nach der Beschriftung, oder durch die Auszeichnung aller Nicht-Pflichtfelder durch die Ergänzung (optional)? Wenn zur Anzeige der Pflichtfelder Symbole wie Sternchen (*) genutzt werden, sollte deren Bedeutung erklärt sein (am besten am Beginn des Formulars, bei einem mehrstufigen Formular beim ersten Formular). Wenn Eingabefelder ein bestimmtes Eingabeformat vorgeben, wird dieses vor dem Eingabefeld oder auch im Placeholder-Text klar beschrieben (Beispiele wären \"Format der Datumseingabe: TT.MM.JJJJ\" oder \"Telefonnummer: Nur Zahlen ohne Leerstellen oder Bindestriche eingeben\"). 2.2 Sind Beschriftungen richtig positioniert? Mittels Web Developer Toolbar die Funktion Miscellaneous &gt; Linearize page aufrufen und damit die Struktur der Seite linearisieren. Prüfen, ob in der linearisierten Ansicht die Beschriftung der Eingabefelder klar den Feldern zuzuordnen ist, das heißt, die Beschriftung soll immer direkt über oder vor dem Feld stehen. Die Beschriftung von Checkboxen und Radiobuttons kann (und sollte in der Regel auch) nach dem Formularelement stehen. 3. Hinweise Das placeholder -Attribut ist keine ausreichende Beschriftung im Sinne dieses Prüfschritts. Es verschwindet bei (auch versehentlichen) Nutzereingaben. Bei kombinierten Eingabeelementen hat nicht immer jedes Element eine zugeordnete Beschriftung. In diesem Fall sollen Elemente mit einem erklärenden title -Attribut versehen werden. Beispiel: In einem Formular werden für die Eingabe eines Datums drei Auswahllisten angeboten (Tag, Monat und Jahr). Die drei Auswahllisten haben eine gemeinsame Beschriftung: Datum. Die Auswahllisten für Tag, Monat und Jahr sind mit einem erklärenden title -Attribut versehen. Es kann sinnvoll sein, dass bei Formularen Hinweise zum Eingabeformat oder zu ausgelösten Aktionen einmal am Beginn des Formulars stehen statt vor jedem einzelnen Eingabefeld. Wenn ein einfaches Suchformular nur aus einem Eingabefeld und einem Button besteht, ist oftmals keine sichtbare Beschriftung notwendig. Voraussetzung ist jedoch, dass sich die visuelle Gestaltung des Submit-Buttons an übliche Konventionen orientiert. Es muss visuell verständlich sein, dass es sich um eine Suche handelt (z.B. durch Verwendung eines Lupe-Icons). Die programmatische Ermittelbarkeit einer nicht visuellen Beschriftung ist Gegenstand des Prüfschritts 1.3.1h Beschriftung von Formularelementen programmatisch ermittelbar (siehe dort Abschnitt 3.3). Ein Mangel bzgl. der programmatischen Ermittelbarkeit führt in diesem Prüfschritt nicht zu einer negativen Bewertung. 4. Bewertung Nicht erfüllt Wichtige Formularelemente (z. B. die Sucheingabe) sind ohne sichtbare Beschriftung, auch angrenzende Elemente erklären nicht die Funktion. Teilweise erfüllt oder schlechter Beschriftungen werden nur als Formularfeld-Vorbelegung ( placeholder -Attribut) bereitgestellt.",
    "classification": "Abgrenzung von anderen Prüfschritten In diesem Prüfschritt geht es um sichtbare Beschriftungen. Das Vorhandensein programmatisch ermittelbarer Namen von Formularelementen wird dagegen in Prüfschritt 9.1.3.1h \"Beschriftung von Formularelementen programmatisch ermittelbar\" geprüft. Einordnung des Prüfschritts nach WCAG 2.1 Guidelines Guideline 3.3 Input Assistance: Help users avoid and correct mistakes. Success criteria 3.3.2 Labels or Instructions (Level A) Techniques General Techniques G13: Describing what will happen before a change to a form control that causes a change of context to occur is made G89: Providing expected data format and example G131: Providing descriptive labels G162: Positioning labels to maximize predictability of relationships G184: Providing text instructions at the beginning of a form or set of fields that describes the necessary input HTML Techniques H44: Using label elements to associate text labels with form controls H65: Using the title attribute to identify form controls when the label element cannot be used H71: Providing a description for groups of form controls using fieldset and legend elements H90: Indicating required form controls using label or legend ARIA Techniques ARIA1: Using the aria-describedby property to provide a descriptive label for user interface controls ARIA9: Using aria-labelledby to concatenate a label from several text nodes ARIA17: Using grouping roles to identify related form controls Failures F82: Failure of Success Criterion 3.3.2 by visually formatting a set of phone number fields but not including a text label"
  },
  {
    "id": "9.3.3.3",
    "title": "9.3.3.3 Hilfe bei Fehlern",
    "whatChecked": "Wenn ein Formular Fehlermeldungen erzeugt, müssen diese verständlich sein und Hinweise geben, wie der Fehler zu korrigieren ist.",
    "whyChecked": "Bei Formulareingaben kommt es öfters zu Fehlern: Nutzer verschreiben sich oder überspringen benötigte Eingaben. Wenn das Angebot Nutzereingaben überprüft, sollen die ausgegebenen Fehlermeldungen hilfreich sein und es den Nutzenden erleichtern, Eingaben zu korrigieren.",
    "howChecked": "1. Anwendbarkeit des Prüfschritts Der Prüfschritt ist anwendbar, wenn die Seite Formulare enthält, welche bei inkorrektem Ausfüllen Fehlermeldungen erzeugen. Dies kann schon während der Eingabe oder erst nach dem Abschicken des Formulars geschehen. 2. Prüfung Formular unvollständig oder fehlerhaft ausfüllen, etwa durch das Leerlassen von Pflichtfeldern oder das Eingeben syntaktisch nicht korrekter E-Mail-Adressen. Falls das Abschicken des Formulars eine Fehlermeldung erzeugt: Prüfen, ob Fehlermeldungen oder Korrekturvorschläge verständlich und sinnvoll sind. Fehlermeldungen oder Korrekturvorschläge können auf verschiedene Weise zur Verfügung gestellt werden, z. B.: Bei Neuanzeige des Formulars werden am Seitenbeginn Fehler beschrieben. Korrekturvorschläge werden nahe der betroffenen Eingabefelder angezeigt und mit einer geeigneten ARIA-Technik verknüpft. 3. Hinweise Wenn serverseitig eine Fehlermeldung auf einer neuen Seite ausgegeben wird, wird diese wie ein Seitenzustand unter der Ausgangsseite mitgeprüft. Geprüft wird auch die Erfüllung anderer relevanter Prüfkriterien. Bei komplizierten Formaten, z. B. Datum, hilft eine Angabe, in welcher Weise das Datum eingegeben werden soll (z. B. tt.mm.jjjj), um Fehler zu vermeiden. Wenn Formulare keine Fehlermeldungen erzeugen, ist dies nicht negativ zu bewerten. Hinweise, wie genau der Fehler korrigiert werden kann, sind nicht erforderlich, wenn diese die Sicherheit des Inhalts gefährden würden. Fehlermeldungen von Anmelde- und Passwortfeldern müssen beispielsweise keine spezifischen Hinweise enthalten, da dies die Sicherheit des Anmeldevorgangs beeinträchtigen würden. 4. Bewertung Nicht erfüllt Fehlermeldungen sind unklar oder irreführend.",
    "classification": "Abgrenzung von anderen Prüfschritten Die Identifizierung und Benennung des Fehlers, ist Gegenstand des Prüfschritts 9.3.3.1 \"Fehlererkennung\". Einordnung des Prüfschritts nach WCAG 2.1 Guideline Guideline 3.3 Input Assistance: Help users avoid and correct mistakes. Success criteria 3.3.3 Error Suggestion (Level AA) General Techniques G83: Providing text descriptions to identify required fields that were not completed G84: Providing a text description when the user provides information that is not in the list of allowed values G85: Providing a text description when user input falls outside the required format or values G177: Providing suggested correction text Scripting Techniques SCR18: Providing client-side validation and alert SCR32: Providing client-side validation and adding error text via the DOM ARIATechniques ARIA2: Identifying a required field with the aria-required property ARIA18: Using aria-alertdialog to Identify Errors"
  },
  {
    "id": "9.3.3.4",
    "title": "9.3.3.4 Fehlervermeidung wird unterstützt",
    "whatChecked": "Bei wichtigen Dateneingaben (etwa bei finanziellen Transaktionen) gibt es die Möglichkeit, die Dateneingabe rückgängig zu machen oder sie vor dem Abschicken zu überprüfen und zu korrigieren. Erfolgreiche Eingaben werden bestätigt.",
    "whyChecked": "Bei jeder Dateneingabe können Fehler passieren. Gerade wenn sich der Prozess nicht rückgängig machen lässt, ist es wichtig, Benutzer dazu anzuhalten, die eingegebenen Daten vor dem Abschicken noch einmal zu überprüfen. Dies ist für alle Benutzer wichtig. Für Benutzer mit Behinderungen ist jedoch in vielen Fällen das Risiko von Fehleingaben größer. Benutzer mit Legasthenie vertauschen häufiger Zahlen, Benutzer mit motorischen Einschränkungen drücken häufiger versehentlich falsche Tastaturtasten. Deshalb ist das Rückgängig-Machen oder Anzeigen, Überprüfen und gegebenenfalls Korrigieren eingegebener Daten für diese Benutzer besonders wichtig.",
    "howChecked": "1. Anwendbarkeit des Prüfschritts Der Prüfschritt ist anwendbar, wenn die Seite Formulare für Transaktionen enthält, durch die Nutzer rechtlich bindende Verpflichtungen eingehen. Dazu gehören Online-Bestellvorgänge und andere finanzielle Transaktionen. 2. Prüfung Formular mit Beispieldaten ausfüllen und Prozess fortsetzen. Eine der folgenden drei Optionen soll erfüllt sein: Datenanzeige mit Korrekturmöglichkeit: Die eingegebenen Daten werden dem Benutzer vor dem Abschicken noch einmal angezeigt, es gibt an dieser Stelle die Möglichkeit, die Daten zu korrigieren. Bestätigung: Das Abschicken erfolgt erst nach Bestätigung eines Dialogs, der die Konsequenzen der Transaktion beschreibt. Unmittelbare Rückabwicklung: Die Transaktion (etwa das Löschen von angelegten Datensätzen) kann unmittelbar rückgängig gemacht werden. 3. Hinweise Eine Checkbox oberhalb des \"Abschicken\"-Buttons zur Bestätigung der Richtigkeit von Benutzereingaben ist ein wesentlich schwächeres Instrument als die Anzeige der kompletten Eingabe auf einer neuen Seite vor dem endgültigen Abschicken des Formulars. Solche Checkboxen werden häufig für formalrechtlich relevante Funktionen genutzt, wie etwa die Bestätigung der Geschäftsbedingungen eines Anbieters. Sie werden deshalb von vielen Benutzern nicht richtig wahrgenommen und routinemäßig gesetzt. Für die Bestätigung wichtiger Eingaben sind sie deshalb weniger geeignet. Erfolgreiche Eingaben sollten nach dem Abschicken bestätigt werden. 4. Bewertung Nicht voll erfüllt Daten werden vor dem Abschicken zum Überprüfen angezeigt, es gibt aber keinen expliziten Link zurück zum Formular, um Daten zu korrigieren oder zu ergänzen. Es gibt weder eine Datenanzeige mit Korrekturmöglichkeit noch die Möglichkeit der unmittelbaren Rückabwicklung. Zum Bestätigen der Eingabe gibt es keinen Dialog, sondern lediglich eine Checkbox über dem \"Abschicken\"-Button. Nach dem erfolgreichen Abschicken gibt es keine Bestätigung. Nicht erfüllt Wichtige Daten werden ohne vorherige Datenanzeige, Dialog zur Bestätigung, oder Möglichkeit der sofortigen Rückabwicklung abgeschickt. Bei Neuanzeige des Formulars sind bereits gemachte Eingaben gelöscht, die Felder sind wieder leer und müssen erneut ausgefüllt werden.",
    "classification": "Einordnung des Prüfschritts nach WCAG 2.1 Guideline Guideline 3.3 Input Assistance: Help users avoid and correct mistakes. Success criterion 3.3.4 Error prevention (Legal, Financial, Data) (Level AA) Techniques General Techniques G98: Providing the ability for the user to review and correct answers before submitting G99: Providing the ability to recover deleted information G155: Providing a checkbox in addition to a submit button G164: Providing a stated time within which an online request (or transaction) may be amended or canceled by the user after making the request G168: Requesting confirmation to continue with selected action G199: Providing success feedback when data is submitted successfully"
  },
  {
    "id": "9.4.1.1",
    "title": "9.4.1.1 Korrekte Syntax",
    "whatChecked": "Die verwendete Markup-Sprache HTML muss korrekt eingesetzt werden. Dabei muss für jedes Element folgendes gewährleistet sein: Sie besitzen vollständige Start- und Endtags sie sind gemäß Spezifikation korrekt verschachtelt sie enthalten keine doppelten Attribute alle ihre IDs sind eindeutig, außer dort wo die Spezifikationen etwas anderes erlauben",
    "whyChecked": "Eine saubere HTML-Syntax vereinfacht Browsern oder Screenreadern den Umgang mit der Seite.",
    "howChecked": "1. Anwendbarkeit des Prüfschritts Der Prüfschritt ist immer anwendbar. 2. Prüfung mit dem W3C-Validator Seite im Chrome-Browser aufrufen. Bookmarklet Check serialized DOM of current page nutzen, um die Validität des geparsten Quelltextes im W3C-Validator zu prüfen. Falls das Bookmarklet nicht funktioniert, im Validator also nichts angezeigt wird, den DOM-Code kopieren und direkt im W3C Validator im Tab 'Validate by direct Input' eingeben (hier muss ggf. eine nicht mitkopierte DOCTYPE Erklärung der Seite zu Beginn eingefügt werden, z. B. bei HTML5 die Zeile &lt;!DOCTYPE html&gt; ). Falls Fehler angezeigt werden (Error), also die Seite nicht validiert, mit dem Syntax Only Bookmarklet die Fehler filtern. Prüfen, ob nach der Anwendung des Bookmarklets noch Fehler vorhanden sind. 3. Hinweise Die in HTML5 vorgesehenen validen Custom-Attribute nutzen das Format data-* , zum Beispiel data-platznummer=\"44\" . Manche Scripting Frameworks nutzen eigene Formate. Angular.js etwa nutzt das Format ng-* . Trotz fehlender Validität sind solche Custom-Attribute grundsätzlich kein Barrierefreiheits-Problem, solange sie semantisch korrekt (also z. B. mit korrekt öffnenden und schließenden Anführungszeichen) eingesetzt sind. Browser ignorieren Attribute, die nicht zugeordnet werden können. In diesem Prüfschritt wird das vom Browser nach Auswertung von Scripten generierte DOM geprüft, nicht der Seitenquelltext vor Interpretation im Browser. 4. Bewertung Erfüllt Das Prüfergebnis des W3C-HTML-Validators ist nach Anwendung des WCAG parsing only Bookmarklet positiv. Falls noch Fehler (Errors) auftauchen, sind diese auf den semantisch korrekten Einsatz von Custom-Attributen zurückzuführen. Eher erfüllt Das Prüfergebnis des W3C-HTML-Validators zeigt auch nach Anwendung des Syntax only Bookmarklets Fehler.",
    "sources": "WCAG Note zum Umgang mit dem Erfolgskriterium 4.1.1 Parsing (entfernt in WCAG 2.2, immer erfüllt in WCAG 2.0 und 2.1) Understanding SC 4.1.1:Parsing (Level A)",
    "classification": "Einordnung des Prüfschritts nach WCAG 2.1 Guideline Guideline 4.1 Compatible: Maximize compatibility with current and future user agents, including assistive technologies. Success criterion 4.1.1 Parsing (Level A) Techniques General Techniques G134: Validating Web pages G192: Fully conforming to specifications HTML Techniques H74: Ensuring that opening and closing tags are used according to specification H75: Ensuring that Web pages are well-formed H88: Using HTML according to spec H93: Ensuring that id attributes are unique on a Web page Failures F70: Failure of Success Criterion 4.1.1 due to incorrect use of start and end tags or attribute markup F77: Failure of Success Criterion 4.1.1 due to duplicate values of type ID"
  },
  {
    "id": "9.4.1.2",
    "title": "9.4.1.2 Name, Rolle, Wert verfügbar",
    "whatChecked": "Alle selbst gestalteten Komponenten einer Website (also Elemente oder Widgets, die nicht auf interaktiven HTML-Elementen beruhen) sind so umgesetzt, dass die semantischen Informationen (Name, Rolle, Eigenschaften) vorhanden sind. Werden nicht semantische Elemente (etwa div oder span ) eingesetzt und mithilfe von JavaScript zu Bedienelementen umfunktioniert, wird die Semantik mithilfe von WAI-ARIA bereitgestellt. Die wechselnden Zustände der Bedienelemente werden nicht nur visuell über CSS und JavaScript abgebildet, sondern auch über scriptgesteuerte Änderung der Werte der ARIA-Attribute, damit die Semantik auch bei nicht-visueller Nutzung verfügbar ist.",
    "whyChecked": "Standard-HTML-Bedienelemente wie Links ( a -Element) und Formularelemente ( input , button , checkbox etc.) haben Namen, Rollen, Wert und Zustände, sofern sie gemäß Spezifikation umgesetzt sind und sind für Hilfsmittel wie Screenreader generell erkennbar. So bekommen etwa blinde Nutzer mit, wenn sie auf einen Link tabben und können diesem dann folgen. Auch Zustände, beispielsweise einer Checkbox (ausgewählt oder nicht ausgewählt) werden vermittelt. Interaktive Schaltflächen sollten deshalb mit Hilfe von geeigneten nativen HTML-Elementen umgesetzt werden, damit ihre Bedeutung klar wird. Falls ungeeignete (weil nicht semantische) Elemente (etwa div oder span ) mithilfe von JavaScript zu Links oder Bedienelementen umfunktioniert werden, kann die Semantik mit Hilfe von WAI-ARIA bereit gestellt werden. Dies betrifft auch Komponenten (Widgets wie z. B. Tabpanels, Akkordeons etc.), die in nativem HTML so nicht zur Verfügung stehen und mit Hilfe von nicht semantischen Elementen und Scripten umgesetzt sind. WAI-ARIA Attribute helfen, diese zu verstehen, indem semantische Informationen vom Browser an die Hilfsmitteltechnologien übermittelt werden.",
    "howChecked": "1. Anwendbarkeit des Prüfschritts Der Prüfschritt ist anwendbar, wenn die Seite interaktive Bedienelemente (Links, Formularelemente, oder programmierte Elemente, die auf onclick oder andere Event Handler reagieren) enthält. 2. Prüfung Seite im Firefox Browser aufrufen Bedienelemente der Seite auf korrekte Semantik prüfen: Gibt es offensichtliche Links oder Schaltflächen ohne href -Attribut? Dies lässt sich z. B. mit Hilfe der Web Developer Toolbar über die Funktion Information &gt; Verweisdetails anzeigen (display link details) feststellen. Gibt es Formularelemente wie Checkboxen oder Radio-Buttons, die von der systemüblichen Darstellung abweichen, da sie mit anderen Elementen wie div oder img nachgebildet wurden? Gibt es auf der Seite selbstgebaute Widgets wie etwa Schieberegler oder Tabpanels? Mittels Developer Tools prüfen, ob über WAI-ARIA Name, Eigenschaften und gegebenenfalls Zustände abgebildet werden. Zustandsänderungen müssen durch Änderungen der Attribute-Werte reflektiert werden. Grafische Zustandsänderungen durch den geskripteten Austausch von Bildern, die anstelle von Bedienelementen eingesetzt werden, müssen auch für Hilfsmittel verfügbare sinnvolle Änderungen von alt -Attributen bzw. WAI-ARIA Eigenschaften erzeugen. 3. Hinweise Im Zweifelsfall den ARIA Authoring Practices Guide konsultieren. Unsemantische Elemente wie span oder div sind nur dann mit der Tastatur fokussierbar, wenn das tabindex -Attribut gesetzt wurde. Falls das nicht der Fall ist, müssen Elemente also gegebenenfalls mit dem Cursor-Werkzeug des aViewers untersucht werden. Für die Prüfung von komplexen Widgets sollte der Screenreader ergänzend genutzt werden. Bei dynamischen eingeblendeten Elementen (etwa den Ausklapplisten von Comboboxen) kann es notwendig sein, den laufenden Script anzuhalten, um eingeblendete Inhalte zu untersuchen. Hierzu eignet sich die Eingabe des Scripts setTimeout(function(){debugger}, 5000); in der Konsole der Entwicklerwerkzeuge (diese sind aufrufbar mit F12), unmittelbar gefolgt vom Aufruf der einzublendenden Inhalte. Fünf Sekunden nach Aktivierung des Konsolen-Scripts stoppt die Ausführung des Scripts der Seite, die dynamischen Elemente können nur mittels Entwicklerwerkzeugen untersucht werden. 4. Bewertung Nicht erfüllt Wichtige Bedienelemente sind mit unsemantischen HTML-Elementen oder a -Elementen ohne href -Attribut umgesetzt, ohne dass die Semantik mit WAI-ARIA nachgebildet wurde.",
    "sources": "WAI-ARIA Spezifikation https://www.w3.org/TR/wai-aria/ Accessible Rich Internet Applications (WAI-ARIA) 1.1 (zur Zeit Candidate Recommendation ) ARIA in HTML ARIA in HTML ARIA-Widgets ARIA Authoring Practice Guide (APG)",
    "classification": "Abgrenzung von anderen Prüfschritten In diesem Prüfschritt geht es nicht um die Bewertung der Tastaturbedienbarkeit geskripteter Bedienelemente. Dies ist Gegenstand von Prüfschritt 9.2.1.1 \"Ohne Maus nutzbar\". Einordnung des Prüfschritts nach WCAG 2.1 Guideline Guideline 4.1 Compatible: Maximize compatibility with current and future user agents, including assistive technologies. Success criterion 4.1.2 Name, Role, Value (Level A) Techniques General Techniques G10: Creating components using a technology that supports the accessibility API features of the platforms on which the user agents will be run to expose the names and roles, allow user-settable properties to be directly set, and provide notification of changes G108: Using markup features to expose the name and role, allow user-settable properties to be directly set, and provide notification of changes G135: Using the accessibility API features of a technology to expose names and roles, to allow user-settable properties to be directly set, and to provide notification of changes HTML Techniques H64: Using the title attribute of the frame and iframe elements H91: Using HTML form controls and links ARIA Techniques ARIA4: Using a WAI-ARIA role to expose the role of a user interface component ARIA5: Using WAI-ARIA state and property attributes to expose the state of a user interface component ARIA14: Using aria-label to provide an invisible label where a visible label cannot be used ARIA16: Using aria-labelledby to provide a name for user interface controls Failures F15: Failure of Success Criterion 4.1.2 due to implementing custom controls that do not use an accessibility API for the technology, or do so incompletely F20: Failure of Success Criterion 1.1.1 and 4.1.2 due to not updating text alternatives when changes to non-text content occur F59: Failure of Success Criterion 4.1.2 due to using script to make div or span a user interface control in HTML F79: Failure of Success Criterion 4.1.2 due to the focus state of a user interface component not being programmatically determinable or no notification of change of focus state available"
  },
  {
    "id": "9.4.1.3",
    "title": "9.4.1.3 Statusmeldungen programmatisch verfügbar",
    "whatChecked": "Eine Statusmeldung ist eine Nachricht, die einer Seite dynamisch hinzugefügt wird. Sie informiert Nutzenden beispielsweise über den Erfolg oder das Ergebnis einer Aktion, über den Fortschritt eines Prozesses oder über das Vorkommen von Fehlern. Wenn Webangebote Statusmeldungen erzeugen, sollen visuell eingeblendete Statusmeldungen mit geeigneten Rollen und Eigenschaften ausgezeichnet und programmatisch ermittelbar sein, das bedeutet die Statusmeldungen werden Nutzenden von assistiven Technologien (Screenreader) präsentiert, ohne dass sie den Fokus erhalten. Beispiele für Statusmeldungen: Ware wurde im Shop dem Warenkorb hinzugefügt 3 Bücher der Merkliste hinzugefügt Formular erfolgreich abgeschickt (Erfolgsmeldung) 5 Suchergebnisse (etwa nach Filterung der Ergebnisse) 3 Fehler im Formular (bei clientseitiger Prüfung ohne Neuladen der Seite) Punktestand geändert Seite wird geladen (bei visueller Ladeanzeige/Fortschrittsbalken)",
    "whyChecked": "In vielen Nutzungskontexten erhalten sehende Nutzende von Webangeboten Statusmeldungen (einige von ihnen vorübergehend), die Rückmeldungen über das Ergebnis von Interaktionen (z. B. die Zahl der beim Filtern einer Suchergebnisliste zurückgegebenen Einträge) oder den Erfolg oder Misserfolg von Transaktionen geben. Diese Meldungen sind ebenso wichtig für nicht-visuelle Nutzende und sollten für assistive Technologien verfügbar sein, damit die Nutzer auf sie aufmerksam werden, ohne ihren aktuellen Fokus oder Standpunkt ändern zu müssen.",
    "howChecked": "1. Anwendbarkeit des Prüfschritts Der Prüfschritt ist anwendbar, wenn die Webinhalte Statusmeldungen generieren, die nicht den Fokus erhalten. Er ist nicht anwendbar, wenn Meldungen im Zusammenhang mit Kontextänderungen erscheinen, zum Beispiel, wenn nach dem Abschicken eines Formulars die Seite neu lädt und dann vor dem Formular eine Fehlermeldung erscheint. 2. Prüfung Statusmeldungen identifizieren. Dafür Eingaben vornehmen, die zur Generierung von Statusmeldungen führen. Über eine Quellcode-Analyse prüfen, ob der Container mit der Statusmeldung als ARIA-Live-Region ausgezeichnet ist. Sind entsprechende ARIA-Live-Attribute vorhanden? Die Ausgabe der Statusmeldung zusätzlich mit dem Screenreader prüfen: Eingaben vornehmen, die zur Generierung von Statusmeldungen führen. Sofern das Angebot von sich aus Statusmeldungen generiert, etwa bei aktualisierten Inhalten, diese Meldungen abwarten. Prüfen, ob Statusmeldungen beim Erscheinen vom Screenreader ausgegeben werden, ohne dass der Fokus auf die Meldung versetzt wird. 3. Hinweise Nicht als Statusmeldung gelten: Fehlermeldung über Dialog (Kontextänderung durch Fokusumsetzung) Die Hinzufügung von Bedienelementen, wie z. B. zusätzliche Formularelemente Ob die Statusmeldung tatsächlich vom Screenreader ausgegeben wird, kann abhängig von genutztem Browser und Screenreader unterschiedlich ausfallen. Der Erfolg kann davon abhängen, ob die Statusmeldung in ein bereits bestehendes Element eingefügt wird oder ob eine kurze Zeitverzögerung vor der Generierung der Meldung definiert worden ist. Für eine möglichst gute Unterstützung in unterschiedlichen Umgebungen: Beim Laden der Seite sollte ein (leerer) Container im DOM vorhanden und als Live-Region ausgezeichnet sein. Erst wenn die Aktualisierung ausgelöst wird, sollte die Textänderung in den vorhandenen Container eingefügt oder aktualisiert werden. Hinweis zur Verwendung von role=\"status\" : Die ARIA-Technik ARIA 22: Using role=status to present status messages der Web Content Accessibility Guidelines (WCAG 2.1) beschreibt den Einsatz von role=\"status\" für die Aktualisierung eines Warenkorbs (Beispiel 2). Damit die Ausgabe mit dem Screenreader NVDA in Firefox funktioniert, muss derzeit (Stand April 2021) mit aria-atomic=\"true\" ergänzt werden (auch wenn dies die Technik aktuell nicht formuliert). 4. Bewertung Erfüllt Alle Statusmeldungen sind richtig ausgezeichnet und damit programmatisch verfügbar.",
    "sources": "Understanding Success Criterion 4.1.3 Status Messages (zur Zeit nur auf Englisch verfügbar) W3C-Definition einer Statusmeldung: https://www.w3.org/TR/WCAG/#dfn-status-messages W3C-Definition einer Live-Region: https://www.w3.org/TR/wai-aria/#dfn-live-region ARIA 1.1 Spezifikation: https://www.w3.org/TR/wai-aria-1.1/",
    "classification": "Einordnung des Prüfschritts nach WCAG 2.1 Guideline Guideline 4.1 Compatible: Maximize compatibility with current and future user agents, including assistive technologies. Success criterion 4.1.3 Status messages (Level AA) Techniques Situation A: If a status message advises on the success or results of an action, or the state of an application: ARIA22: Using role=status to present status messages in combination with any of the following: G199: Providing success feedback when data is submitted successfully Situation B: If a status message conveys a suggestion, or a warning on the existence of an error: ARIA19: Using ARIA role=alert or Live Regions to Identify Errors in combination with any of the following: G83: Providing text descriptions to identify required fields that were not completed G84: Providing a text description when the user provides information that is not in the list of allowed values G85: Providing a text description when user input falls outside the required format or values G177: Providing suggested correction text G194: Providing spell checking and suggestions for text input Situation C: If a status message conveys information on the progress of a process: ARIA23: Using role=log to identify sequential information updates ARIA22: Using role=status to present status messages in combination with G193: Providing help by an assistant in the Web page Failures F103: Failure of Success Criterion 4.1.3 due to providing status messages that cannot be programmatically determined through role or properties"
  }
]