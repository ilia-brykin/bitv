{
  "_STEP_9_2_1_1_NAME_": "Ohne Maus nutzbar",
  "_STEP_9_2_1_1_NAME_MENU_": "9.2.1.1 Ohne Maus nutzbar",
  "_STEP_9_2_1_1_WHAT_CHECKED_1_": "<p>Die Webseite soll auch ohne Maus - also ausschließlich mit der Tastatur - zu benutzen sein.</p>",
  "_STEP_9_2_1_1_WHY_CHECKED_1_": "<p>Die Bedienung soll geräteunabhängig möglich sein. Das bedeutet: Sie muss sowohl mit der Maus als auch mit der Tastatur möglich sein. Denn auch andere Spezialgeräte verhalten sich so wie eine Maus oder wie eine Tastatur.</p>",
  "_STEP_9_2_1_1_WHY_CHECKED_2_": "<p>Probleme gibt es meistens mit der Tastaturbedienung, denn die Mehrzahl der Webnutzer arbeitet mit der Maus, daher wird oft nur an die gedacht.</p>",
  "_STEP_9_2_1_1_WHY_CHECKED_3_": "<p>Auf die Tastaturbedienbarkeit angewiesen sind zum Beispiel viele motorisch eingeschränkte Menschen oder Blinde.</p>",
  "_STEP_9_2_1_1_HOW_CHECKED_1_": "<h3 id=\"_1_anwendbarkeit_des_prüfschritts\">1. Anwendbarkeit des Prüfschritts</h3>",
  "_STEP_9_2_1_1_HOW_CHECKED_2_": "<p>Der Prüfschritt ist anwendbar, wenn der Webauftritt interaktive Elemente enthält.</p>",
  "_STEP_9_2_1_1_HOW_CHECKED_3_": "<h3 id=\"_2_prüfung\">2. Prüfung</h3>",
  "_STEP_9_2_1_1_HOW_CHECKED_4_": "<ol><li><p>Seite im Firefox Browser aufrufen.</p></li><li><p>Mit der Tabulatortaste die Links und Formularelemente durchgehen.</p></li><li><p>Prüfen, ob alle wesentlichen Links und Formularelemente erreicht und benutzt werden können</p></li><li><p>Falls die Seite Elemente enthält, die wie Bedienelemente aussehen, jedoch nicht mit der Tabulatortaste angesteuert werden, prüfen, ob diese Elemente auf die Maus reagieren (zum Beispiel mit Bewegung, Vergrößerung, Einblenden von weiteren Inhalten).</p></li><li><p>Falls die Seite scrollbare Bereiche enthält, sollen nicht sichtbare Inhalte dieser Bereiche auch über die Tastatur erreichbar sein.</p></li><li><p>Seite im Chrome Browser aufrufen und Schritte 2 bis 5 wiederholen.</p></li></ol>",
  "_STEP_9_2_1_1_HOW_CHECKED_5_": "<h3 id=\"_3_hinweise\">3. Hinweise</h3>",
  "_STEP_9_2_1_1_HOW_CHECKED_6_": "<h4 id=\"_3_1_allgemeine_hinweise\">3.1 Allgemeine Hinweise</h4>",
  "_STEP_9_2_1_1_HOW_CHECKED_7_": "<ul><li><p>Prüfende müssen mit der Funktionsweise der eingesetzten Browser vertraut sein, sie müssen wissen, welche Tasten und Tastenkombinationen für die Tastaturbedienung vorgesehen sind.</p></li><li><p>Probleme bei der Bedienung werden in der Regel durch die Verwendung von JavaScript verursacht. Die Prüfung erfolgt also bei eingeschaltetem JavaScript.</p></li><li><p>Unwesentlich können zum Beispiel Funktionen sein, die schon vom Browser selbst angeboten werden (beispielsweise \"Fenster schließen\").</p></li><li><p>Auch die Tastaturbedienbarkeit von Elementen ohne Fokushervorhebung wird geprüft. Zur Anzeige des Fokus kann ein geignetes Bookmarklet wie Force Show Keyboard Focus genutzt werden.</p></li></ul>",
  "_STEP_9_2_1_1_HOW_CHECKED_8_": "<p>Wichtig in diesem Zusammenhang:</p>",
  "_STEP_9_2_1_1_HOW_CHECKED_9_": "<ul><li><p>Wenn das Browserfenster nicht den Fokus hat, darf man nicht einfach hinein klicken und dann erst mit der Tastaturbedienung anfangen. Der Fokus muss vielmehr per Tastatur (F6) zum Browserfenster bewegt werden.</p></li><li><p>Auswahllisten ohne Submit-Button, die auf “onchange” reagieren, können ggf. mit den Pfeiltasten allein nicht bedient werden, da immer schon die erste Listenoption ausgelöst wird. Um solche Auswahllisten durchzublättern, muss man sie ggf. zunächst mit der  Tastenkombination \"Alt + Pfeil nach unten\" öffnen. Dann kann man mit den Pfeiltasten nach oben und unten durch die Optionen blättern und mit der Eingabetaste eine Option auswählen.</p></li><li><p>Die Nutzung per Tastatur muss nicht genau der Nutzung per Maus entsprechen. Es ist beispielsweise kein Mangel, wenn per Maus über Ausklappmenüs in einem Schritt tiefe Links aufgerufen werden können, per Tastatur aber für den Aufruf der betreffenden Seiten mehrere Schritte erforderlich sind.</p></li></ul>",
  "_STEP_9_2_1_1_HOW_CHECKED_10_": "<p>Manche Elemente lassen sich ggf. bei eingeschaltetem Screenreader NVDA nicht aktivieren (oder nur bei zusätzlichem Drücken der <code>alt</code>-Taste). Dies ist in der Regel auf fehlerhafte ARIA-Auszeichnung zurückzuführen und wird in Prüfschritt 9.4.1.2 \"Name, Rolle, Wert verfügbar\" bewertet.</p>",
  "_STEP_9_2_1_1_HOW_CHECKED_11_": "<h4 id=\"_3_2_hinweis_zu_drag_and_drop_funktionen\">3.2 Hinweis zu Drag-and-Drop-Funktionen</h4>",
  "_STEP_9_2_1_1_HOW_CHECKED_12_": "<p>Für wichtige Bedienfunktionen, die mittels Drag-and-Drop bedienbar sind, müssen auch tastaturnutzbare Alternativen angeboten werden.</p>",
  "_STEP_9_2_1_1_HOW_CHECKED_13_": "<h3 id=\"_4_bewertung\">4. Bewertung</h3>",
  "_STEP_9_2_1_1_HOW_CHECKED_14_": "<h4 id=\"_erfüllt\">Erfüllt</h4>",
  "_STEP_9_2_1_1_HOW_CHECKED_15_": "<ul><li><p>Alle wesentlichen Inhalte und Funktionen sind in Firefox und Chrome im Prinzip erreichbar und bedienbar.</p></li></ul>",
  "_STEP_9_2_1_1_HOW_CHECKED_16_": "<h4 id=\"_nicht_erfüllt\">Nicht erfüllt</h4>",
  "_STEP_9_2_1_1_HOW_CHECKED_17_": "<ul><li><p>Wesentliche Inhalte und Funktionen sind in Firefox oder Chrome mit der Tastatur nicht erreichbar oder nicht bedienbar.</p></li></ul>",
  "_STEP_9_2_1_1_SOURCES_1_": "<h3 id=\"_die_wcag_2_1_zur_tastaturbedienbarkeit\">Die WCAG 2.1 zur Tastaturbedienbarkeit</h3>",
  "_STEP_9_2_1_1_SOURCES_2_": "<div lang=\"en\" class=\"a_ml_5\"><blockquote><p>If all functionality can be achieved using the keyboard, it can be accomplished by keyboard users, by speech input (which creates keyboard input), by mouse (using on-screen keyboards), and by a wide variety of assistive technologies that create simulated keystrokes as their output. No other input form has this flexibility or is universally supported and operable by people with different disabilities, as long as the keyboard input is not time-dependent.</p><p>Note that providing universal keyboard input does not mean that other types of input should not be supported. Optimized speech input, optimized mouse/pointer input, etc., are also good. The key is to provide keyboard input and control as well.</p><p>Some devices do not have native keyboards? for example, a PDA or cell phone. If these devices have a Web browsing capability, however, they will have some means of generating text or \"keystrokes.\" This guideline uses the term \"keyboard interface\" to acknowledge that Web content should be controlled from keystrokes that may come from a keyboard, keyboard emulator, or other hardware or software that generates keyboard or text input.</p></blockquote></div>",
  "_STEP_9_2_1_1_SOURCES_3_": "<p>(<a href=\"https://www.w3.org/WAI/WCAG21/Understanding/keyboard.html\"> Keyboard Accessible: Understanding Guideline 2.1</a>)</p>",
  "_STEP_9_2_1_1_CLASSIFICATION_1_": "<h3 id=\"_abgrenzung_zu_anderen_prüfschritten\">Abgrenzung zu anderen Prüfschritten</h3>",
  "_STEP_9_2_1_1_CLASSIFICATION_2_": "<ul><li><p>Dieser Prüfschritt betrifft die <strong>Auslösbarkeit</strong> von Funktionen und Links auch über die Tastatur.</p></li><li><p><strong>Tastaturfallen</strong> sind Gegenstand von Prüfschritt 9.2.1.2 \"Keine Tastaturfalle\"</p></li><li><p>Bei skriptgenerierten oder über Skripts eingeblendeten Elementen (etwa ausklappenden Texten oder Lightboxen) ist die <strong>sinnvolle Reihenfolge</strong> im   Quellcode Gegenstand von Prüfschritt 9.1.3.2 \"Sinnvolle Reihenfolge\".</p></li><li><p>Die Fokus<strong>hervorhebung</strong> ist Gegenstand von Prüfschritt 9.2.4.7 \"Aktuelle Position des Fokus deutlich\".</p></li><li><p>In diesen Prüfschritt spielt die Fokus-Reihenfolge, in der Links und Formularelemente angesteuert werden, keine Rolle.  Die Sinnvolle Fokus<strong>reihenfolge</strong> wird in 9.2.4.3 \"Schlüssige Reihenfolge bei der Tastaturbedienung\"   bewertet.</p></li></ul>",
  "_STEP_9_2_1_1_CLASSIFICATION_3_": "<h3 id=\"_einordnung_des_prüfschritts_nach_wcag_2_1\">Einordnung des Prüfschritts nach WCAG 2.1</h3>",
  "_STEP_9_2_1_1_CLASSIFICATION_4_": "<h4 id=\"_guideline\">Guideline</h4>",
  "_STEP_9_2_1_1_CLASSIFICATION_5_": "<ul><li><p><a href=\"https://www.w3.org/TR/WCAG21/#keyboard-accessible\"> Guideline 2.1 Keyboard Accessible: Make all functionality available from a keyboard.</a></p></li></ul>",
  "_STEP_9_2_1_1_CLASSIFICATION_6_": "<h4 id=\"_success_criteria\">Success criteria</h4>",
  "_STEP_9_2_1_1_CLASSIFICATION_7_": "<ul><li><p><a href=\"https://www.w3.org/TR/WCAG21/#keyboard\"> 2.1.1 Keyboard</a> (Level A)</p></li></ul>",
  "_STEP_9_2_1_1_CLASSIFICATION_8_": "<h4 id=\"_techniques\">Techniques</h4>",
  "_STEP_9_2_1_1_CLASSIFICATION_9_": "<h5 id=\"_general_techniques\">General Techniques</h5>",
  "_STEP_9_2_1_1_CLASSIFICATION_10_": "<ul><li><p><a href=\"https://www.w3.org/WAI/WCAG21/Techniques/general/G90.html\"> G90: Providing keyboard-triggered event handlers</a></p></li><li><p><a href=\"https://www.w3.org/WAI/WCAG21/Techniques/general/G202.html\"> G202: Ensuring keyboard control for all functionality</a></p></li></ul>",
  "_STEP_9_2_1_1_CLASSIFICATION_11_": "<h5 id=\"_html_techniques\">HTML Techniques</h5>",
  "_STEP_9_2_1_1_CLASSIFICATION_12_": "<ul><li><p><a href=\"https://www.w3.org/WAI/WCAG21/Techniques/html/H91.html\"> H91: Using HTML form controls and links</a></p></li></ul>",
  "_STEP_9_2_1_1_CLASSIFICATION_13_": "<h5 id=\"_scripting_techniques\">Scripting Techniques</h5>",
  "_STEP_9_2_1_1_CLASSIFICATION_14_": "<ul><li><p><a href=\"https://www.w3.org/WAI/WCAG21/Techniques/client-side-script/SCR2.html\"> SCR2: Using redundant keyboard and mouse event handlers</a></p></li><li><p><a href=\"https://www.w3.org/WAI/WCAG21/Techniques/client-side-script/SCR20.html\"> SCR20: Using both keyboard and other device-specific functions</a></p></li><li><p><a href=\"https://www.w3.org/WAI/WCAG21/Techniques/client-side-script/SCR27.html\"> SCR27: Reordering page sections using the Document Object Model</a></p></li><li><p><a href=\"https://www.w3.org/WAI/WCAG21/Techniques/client-side-script/SCR29.html\"> SCR29: Adding keyboard-accessible actions to static HTML elements</a></p></li><li><p><a href=\"https://www.w3.org/WAI/WCAG21/Techniques/client-side-script/SCR35.html\"> SCR35: Making actions keyboard accessible by using the onclick event of anchors and buttons</a></p></li></ul>",
  "_STEP_9_2_1_1_CLASSIFICATION_15_": "<h5 id=\"_failures\">Failures</h5>",
  "_STEP_9_2_1_1_CLASSIFICATION_16_": "<ul><li><p><a href=\"https://www.w3.org/WAI/WCAG21/Techniques/failures/F42.html\"> F42: Failure of Success Criterion 1.3.1 and 2.1.1 due to using scripting events to emulate links in a way that is not programmatically determinable</a></p></li><li><p><a href=\"https://www.w3.org/WAI/WCAG21/Techniques/failures/F54.html\"> F54: Failure of Success Criterion 2.1.1 due to using only pointing-device-specific event handlers (including gesture) for a function</a></p></li><li><p><a href=\"https://www.w3.org/WAI/WCAG21/Techniques/failures/F55.html\"> F55: Failure of Success Criteria 2.1.1, 2.4.7, and 3.2.1 due to using script to remove focus when focus is received</a></p></li></ul>"
}
