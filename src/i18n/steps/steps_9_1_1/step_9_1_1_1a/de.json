{
  "_STEP_9_1_1_1A_NAME_": "Alternativtexte für Bedienelemente",
  "_STEP_9_1_1_1A_WHAT_CHECKED_1_": "<p>Grafische Bedienelemente (alle verlinkten / interaktiven Grafiken und Bilder) müssen mit Alternativtexten versehen werden (nicht verlinkte bzw. nicht interaktive Grafiken und Bilder werden in Prüfschritt 9.1.1.1b \"Alternativtexte für Grafiken und Objekte\" geprüft).</p>",
  "_STEP_9_1_1_1A_WHAT_CHECKED_2_": "<p>Die Alternativtexte für Bedienelemente (z. B. Icons oder Logos) oder Teaserbilder sollen das <strong>Ziel</strong> des Links bezeichnen. Alternativtexte für grafische Schaltflächen (Buttons) sollen die <strong>Aktion</strong> bezeichnen, die der Button auslöst. Wenn Image maps eingesetzt werden, sollen deren Bereiche (<code>area</code>-Elemente) sinnvolle Alternativtexte haben.</p>",
  "_STEP_9_1_1_1A_WHAT_CHECKED_3_": "<p>Thema dieses Prüfschritts sind auch Textlinks, die per CSS durch Hintergrundbilder ersetzt werden sowie Textalternativen für Icon Fonts und SVGs.</p>",
  "_STEP_9_1_1_1A_WHY_CHECKED_1_": "<p>Für blinde Benutzer oder für Benutzer, die für schnellere Zugriffszeiten das Laden von Grafiken abschalten, sind Grafiken nicht zugänglich. Die Textalternative tritt dann an die Stelle der Grafik, sie soll die Grafik ersetzen.</p>",
  "_STEP_9_1_1_1A_WHY_CHECKED_2_": "<p>Icon Fonts sind Schriftarten, die Symbole statt Buchstaben beinhalten. Sie werden per CSS eingebunden und werden entweder von assistiven Technologien nicht ausgegeben oder es wird ein Unicode-Äquivalent wiedergegeben, was die Bedeutung im Kontext nicht vermittelt.</p>",
  "_STEP_9_1_1_1A_HOW_CHECKED_1_": "<h3 id=\"_1_anwendbarkeit_des_prüfschritts\">1. Anwendbarkeit des Prüfschritts</h3>",
  "_STEP_9_1_1_1A_HOW_CHECKED_2_": "<p>Der Prüfschritt ist anwendbar, wenn Grafiken, Icon Fonts oder SVGs als Bedienelemente (Menüs, Logos, Teaserbilder oder Schaltflächen) eingesetzt werden.</p>",
  "_STEP_9_1_1_1A_HOW_CHECKED_3_": "<h3 id=\"_2_prüfung\">2. Prüfung</h3>",
  "_STEP_9_1_1_1A_HOW_CHECKED_4_": "<h4 id=\"_2_1_anzeige_der_alternativtexte_von_grafiken\">2.1 Anzeige der Alternativtexte von Grafiken</h4>",
  "_STEP_9_1_1_1A_HOW_CHECKED_5_": "<ol><li><p>Die Seite im <a href=\"https://www.bitvtest.de/bitv_test/das_testverfahren_im_detail/werkzeugliste.html#firefox\"> Firefox</a> aufrufen.</p></li><li><p>Bedienelemente feststellen (zum Beispiel horizontale oder vertikale Navigationsleisten, Logo, Banner, Teaserbilder, grafische Schaltflächen).</p></li><li><p>In der <a href=\"https://www.bitvtest.de/bitv_test/das_testverfahren_im_detail/werkzeugliste.html#webdeveloper\"> Web Developer Toolbar</a> das Menü <em>Images &gt; Display Alt Attributes</em> aufrufen und prüfen, ob die Bedienelemente mit äquivalenten Alternativtexten versehen sind (siehe <a href=\"#_2_6_gleichwertige_äquivalente_alternativtexte\">2.6 Gleichwertige (äquivalente) Alternativtexte</a>). Alternativ kann auch das <a href=\"https://www.bitvtest.de/bitv_test/das_testverfahren_im_detail/werkzeugliste.html#imagesbm\"> Images bookmarklet</a> eingesetzt werden.</p></li><li><p>Feststellen, ob die Seite Image maps enthält. Hierfür kann gegebenenfalls der Quelltext nach <code>map</code> durchsucht werden. Ist eine Image map vorhanden, weiter mit <a href=\"#_2_2_anzeige_von_image_maps\">2.2 Anzeige von Image maps</a>.</p></li></ol>",
  "_STEP_9_1_1_1A_HOW_CHECKED_6_": "<h4 id=\"_2_2_anzeige_von_image_maps\">2.2 Anzeige von Image maps</h4>",
  "_STEP_9_1_1_1A_HOW_CHECKED_7_": "<p>Falls Image maps eingesetzt werden:</p>",
  "_STEP_9_1_1_1A_HOW_CHECKED_8_": "<p>Die Web Developer Tools öffnen und im Quellcode prüfen, ob für jeden Link (<code>area</code>-Element der Image map, aktiver Bereich) <strong>und</strong> für das Gesamtbild der Image map ein gleichwertiger Alternativtext vorhanden ist (siehe <a href=\"#_2_6_gleichwertige_äquivalente_alternativtexte\">2.6 Gleichwertige (äquivalente) Alternativtexte</a>).</p>",
  "_STEP_9_1_1_1A_HOW_CHECKED_9_": "<p>Der Alternativtext für die gesamte Image map sollte in der Regel die Image map beschreiben, die Alternativtexte für die aktiven Bereiche (<code>area</code>-Elemente) sollten die Linkziele bezeichnen.</p>",
  "_STEP_9_1_1_1A_HOW_CHECKED_10_": "<h4 id=\"_2_3_textalternativen_für_hintergrundgrafiken\">2.3 Textalternativen für Hintergrundgrafiken</h4>",
  "_STEP_9_1_1_1A_HOW_CHECKED_11_": "<p>Hintergrundgrafiken haben kein <code>alt</code>-Attribut, auf diese Weise kann also keine Textalternative hinterlegt werden.</p>",
  "_STEP_9_1_1_1A_HOW_CHECKED_12_": "<p>Falls eine Hintergrundgrafik aber einen im HTML-Dokument tatsächlich vorhandenen Textlink ersetzt (CSS-Bildersetzungsverfahren), dann gilt dieser Textlink als Textalternative für die Hintergrundgrafik. Voraussetzung ist allerdings, dass ein geeignetes Bildersetzungsverfahren verwendet wurde (nicht <code>display:none</code>).</p>",
  "_STEP_9_1_1_1A_HOW_CHECKED_13_": "<h5 id=\"_grundeinstellung_in_firefox\">Grundeinstellung in Firefox</h5>",
  "_STEP_9_1_1_1A_HOW_CHECKED_14_": "<ol><li><p><a href=\"https://www.bitvtest.de/bitv_test/das_testverfahren_im_detail/werkzeugliste.html#firefox\"> Firefox</a> aufrufen und im Menü <em>Extras</em> den Dialog <em>Einstellungen…</em> aufrufen. Den Reiter <em>Inhalt</em> wählen und im Bereich <em>Schriftarten &amp; Farben</em> die Option <em>Farben…\u200B</em> wählen.</p></li><li><p>Im Dialog <em>Farben</em> im Bereich <em>Text und Hintergrund</em> als Hintergrundfarbe eine Farbe wählen, die normalerweise eher selten für die Seitengestaltung verwendet wird (gut geeignet sind z. B. helle Rosa- oder Grüntöne).</p></li><li><p>Im Select <em>Ausgewählte Farben anstatt Farben der Seite verwenden</em> die Option <em>Immer</em> wählen.</p></li><li><p>Die Dialogfenster mit \"OK\" schließen.</p></li></ol>",
  "_STEP_9_1_1_1A_HOW_CHECKED_15_": "<h5 id=\"_prüfung\">Prüfung</h5>",
  "_STEP_9_1_1_1A_HOW_CHECKED_16_": "<ol><li><p>Seite in <a href=\"https://www.bitvtest.de/bitv_test/das_testverfahren_im_detail/werkzeugliste.html#firefox\"> Firefox</a> aufrufen.</p></li><li><p>Prüfen, ob grafische Bedienelemente verschwinden. Das passiert, wenn sie als Hintergrundbilder eingebunden sind.</p></li><li><p>Falls nicht redundante grafische Bedienelemente als Hintergrundbilder eingebunden sind: Prüfen, ob das Hintergrundbild einen tatsächlich im HTML-Dokument vorhandenen Textlink ersetzt oder ein aussagekräftiger Alternativtext auf andere Art hinterlegt ist (z. B. als <code>aria-label</code> oder <code>title</code> auf dem Link).</p></li><li><p>Wenn ein leeres <code>a</code>-Element ohne eingeschlossenen Text durch ein Hintergrundbild ersetzt wird, ist dies wie ein nicht vorhandenes oder leeres <code>alt</code>-Attribut zu werten.</p></li><li><p>Falls Textlinks durch Hintergrundbilder ersetzt werden: Prüfen, welches Verfahren für die Bildersetzung verwendet wurde. Wenn <code>display:none</code> verwendet wird, ist dies wie ein nicht vorhandenes oder leeres <code>alt</code>-Attribut zu werten.</p></li><li><p>Falls ein geeignetes Bildersetzungsverfahren verwendet wurde: Prüfen, ob der Textlink eine äquivalente Textalternative für das Hintergrundbild darstellt (siehe <a href=\"#_2_6_gleichwertige_äquivalente_alternativtexte\">2.6 Gleichwertige (äquivalente) Alternativtexte</a>).</p></li></ol>",
  "_STEP_9_1_1_1A_HOW_CHECKED_17_": "<h4 id=\"_2_4_textalternativen_für_icon_fonts\">2.4 Textalternativen für Icon Fonts</h4>",
  "_STEP_9_1_1_1A_HOW_CHECKED_18_": "<p>Beim Einsatz von Icon Fonts ist es nicht möglich, mittels <code>alt</code>-Attribut eine Textalternative zu hinterlegen.</p>",
  "_STEP_9_1_1_1A_HOW_CHECKED_19_": "<p>Falls ein Bedienelement aus einem solchen Icon sowie einem HTML-Text besteht, der den Zweck des Bedienelements wiedergibt, dann gilt dieser Text als Alternative für das Icon. Es ist sinnvoll, das Icon selbst mit einer geeigneten Technik für Screenreader zu verstecken (z. B. <code>aria-hidden=\"true\"</code>). Handelt es sich dabei um ein informationstragendes Icon ohne visuell sichtbaren Text (Stand-alone-Icon), so sollte eine Textalternative vorhanden sein. Dies kann beispielsweise Text sein, der mit einem geeigneten Verfahren versteckt ist (nicht <code>display:none</code>) oder über ein <code>aria-label</code> bereitgestellt wird.</p>",
  "_STEP_9_1_1_1A_HOW_CHECKED_20_": "<h5 id=\"_prüfung_2\">Prüfung</h5>",
  "_STEP_9_1_1_1A_HOW_CHECKED_21_": "<ol><li><p>Seite in <a href=\"https://www.bitvtest.de/bitv_test/das_testverfahren_im_detail/werkzeugliste.html#firefox\"> Firefox</a> aufrufen.</p></li><li><p>Bedienelemente feststellen.</p></li><li><p>Mit Firebug oder dem Seiteninspektor des Browsers prüfen, ob mit der CSS-Eigenschaft <code>content</code> für die Pseudoelemente <code>:before</code> oder <code>:after</code> Inhalt (Font Icons) eingebunden wird.</p></li><li><p>Falls nicht redundante Icons eingebunden sind: Prüfen, ob eine HTML-Textalternative vorhanden ist. Ein leeres <code>a</code>-Element ohne eingeschlossenen Text, ist wie ein nicht vorhandenes oder leeres <code>alt</code>-Attribut zu werten.</p></li><li><p>Falls HTML-Textalternativen vorhanden sind, die nicht am Bildschirm sichtbar sind: Prüfen, welches Verfahren verwendet wurde, um diese zu verstecken. Wenn <code>display:none</code> verwendet wird, ist dies wie ein nicht vorhandenes oder leeres <code>alt</code>-Attribut zu werten.</p></li><li><p>Falls eine geeignete CSS-Technik verwendet wurde: Prüfen, ob der Textlink eine äquivalente Textalternative für das Icon darstellt (siehe <a href=\"#_2_6_gleichwertige_äquivalente_alternativtexte\">2.6 Gleichwertige (äquivalente) Alternativtexte</a>).</p></li><li><p>Falls keine HTML-Textalternative vorhanden ist, prüfen, ob die Textalternative über ein <code>title</code>-Attribut oder <code>aria-label</code> bereitgestellt wird.</p></li><li><p>Falls für die Icons Text ausgegeben wird (z. B. <code>content: \"k\"</code>), prüfen, ob das Icon mit einer geeigneten Technik für Screenreader versteckt wird (z. B. <code>aria-hidden=\"true\"</code>).</p></li></ol>",
  "_STEP_9_1_1_1A_HOW_CHECKED_22_": "<h4 id=\"_2_5_textalternativen_für_inline_svgs\">2.5 Textalternativen für Inline-SVGs</h4>",
  "_STEP_9_1_1_1A_HOW_CHECKED_23_": "<h5 id=\"_prüfung_3\">Prüfung</h5>",
  "_STEP_9_1_1_1A_HOW_CHECKED_24_": "<ol><li><p>Seite im <a href=\"https://www.bitvtest.de/bitv_test/das_testverfahren_im_detail/werkzeugliste.html#firefox\"> Firefox</a> aufrufen.</p></li><li><p>Bedienelemente feststellen.</p></li><li><p>Mit den Web Developer Tools des Browsers prüfen, ob es sich um ein direkt in HTML eingebundene SVG handelt (Inline SVG).</p></li><li><p>Prüfen, ob eine Textalternative vorhanden ist</p></li><li><p>Prüfen, ob ein <code>title</code>-Element (für längere Beschreibungen das <code>desc</code>-Element) vorhanden ist und die dort hinterlegte Textalternative das Bild in angemessener Weise ersetzt (siehe <a href=\"#_2_6_gleichwertige_äquivalente_alternativtexte\">2.6 Gleichwertige (äquivalente) Alternativtexte</a>). Das <code>title</code>- bzw. <code>desc</code>-Element sollte das erste Kind-Element des <code>svg</code>-Eltern-Elements sein.</p></li><li><p>Da SVG noch nicht ausreichend von allen Screenreader-Browser-Kombinationen unterstützt wird, prüfen, ob die Zugänglichkeit über ARIA-Auszeichnung gewährleistet ist:</p><ul><li><p>SVG-Grafiken sollten <code>role=\"img\"</code> tragen, sonst wird ggf. ihr <code>title</code>-Element nicht ausgegeben.</p></li><li><p>Wird das SVG <code>title</code>-Element als zugänglicher Name genutzt, sollte das <code>svg</code>-Element mittels <code>aria-labelledby</code> auf das <code>title</code>-Element verweisen.</p></li><li><p>Wenn ein Link sowohl die SVG-Grafik als auch einen in sich aussagekräftigen Linktext enthält, sollte die SVG-Grafik über <code>aria-hidden=\"true\"</code> aus der Screenreader-Ausgabe entfernt werden. Die Nutzung einer <code>role</code> ist dann nicht erforderlich.</p></li><li><p>Wenn kein <code>title</code>- oder <code>desc</code>-Element eingesetzt wird, prüfen, ob über <code>aria-label</code> auf dem umschließenden Link eine Textalternative bereitgestellt   wird.   Für die Rolle kommt bei SVGs auch <code>role=\"graphics-document\"</code>  in Frage.   Diese kommt für komplexere SVG-Grafiken wie z. B. Erklärbilder, Diagramme,   oder Bilder mit eingebundenen Links zum Einsatz (das Ausmaß der   Unterstützung durch Screenreader ist zur Zeit unklar).</p></li></ul></li></ol>",
  "_STEP_9_1_1_1A_HOW_CHECKED_25_": "<h4 id=\"_2_6_gleichwertige_äquivalente_alternativtexte\">2.6 Gleichwertige (äquivalente) Alternativtexte</h4>",
  "_STEP_9_1_1_1A_HOW_CHECKED_26_": "<p>Entscheidend ist: die Seite soll benutzbar sein, wenn Grafiken, oder Bilder oder Objekte durch die entsprechenden Alternativtexte oder Textalternativen ersetzt sind.</p>",
  "_STEP_9_1_1_1A_HOW_CHECKED_27_": "<p>In der Regel bedeutet das:</p>",
  "_STEP_9_1_1_1A_HOW_CHECKED_28_": "<ul><li><p>Bei <strong>Schriftgrafiken</strong> soll der Alternativtext den Text der Schriftgrafik wiederholen.</p></li><li><p>Bei <strong>Symbolen</strong> soll der Alternativtext das Symbol nicht beschreiben, sondern ersetzen. Also zum Beispiel Alternativtext \"Kontakt\" für einen Briefkasten, der als Symbol für die Kontakt-Seite verwendet wird.</p></li><li><p>Bei <strong>Objekten</strong>, die nicht angezeigt werden können, sollen der Alternativtext (ganz gleich ob Fallback-Text des Objekts oder skriptgeneriert) eine kurze Beschreibung oder Identifizierung bieten. Zusätzlich ist es sinnvoll, dass ein Skript auswertet, ob das Objekt wegen deaktiviertem JavaScript und/oder deaktiviertem Plugin nicht angezeigt werden kann, und eine entsprechende Meldung generiert. In diesem Fall ist es auch ausreichend, wenn das Objekt etwa durch eine Überschrift im unmittelbaren Kontext identifiziert wird.</p></li></ul>",
  "_STEP_9_1_1_1A_HOW_CHECKED_29_": "<p>Bei <strong>verlinkten Abbildungen</strong> gibt es folgende Möglichkeiten:</p>",
  "_STEP_9_1_1_1A_HOW_CHECKED_30_": "<ul><li><p>Der abgebildete Gegenstand wird in der Textalternative beschrieben (wenn der abgebildete Gegenstand wichtig ist und daraus das Linkziel hervorgeht, zum Beispiel Logo).</p></li><li><p>Das Ziel des Links wird über die Textalternative vermittelt (nur wenn der abgebildete Gegenstand unwichtig ist, zum Beispiel Illustration).</p></li><li><p>Der sinnhafte Inhalt des abgebildeten Gegenstandes und Ziel des Links bzw. die Aktion werden über die Textalternative vermittelt (wenn beides wichtig ist).</p></li></ul>",
  "_STEP_9_1_1_1A_HOW_CHECKED_31_": "<p>Generell gilt:</p>",
  "_STEP_9_1_1_1A_HOW_CHECKED_32_": "<ul><li><p>Alternativtexte sollen kurz sein.</p></li><li><p>Ausführliche Beschreibungen von Abbildungen sollen nicht im Alternativtext, sondern im Kontext der Abbildung zur Verfügung gestellt werden.</p></li></ul>",
  "_STEP_9_1_1_1A_HOW_CHECKED_33_": "<h3 id=\"_3_hinweise\">3. Hinweise</h3>",
  "_STEP_9_1_1_1A_HOW_CHECKED_34_": "<h4 id=\"_3_1_alternativtexte_für_redundant_verlinkte_abbildungen\">3.1 Alternativtexte für redundant verlinkte Abbildungen</h4>",
  "_STEP_9_1_1_1A_HOW_CHECKED_35_": "<p>Wenn eine Abbildung und ein danebenstehender Textlink auf dasselbe Ziel verweisen, muss geprüft werden, ob Abbildung und Text in den selben Link eingeschlossen sind.</p>",
  "_STEP_9_1_1_1A_HOW_CHECKED_36_": "<p>Wenn Abbildung und Text innerhalb des selben Links stehen, soll der Alternativtext der Abbildung nicht den Text des Links wiederholen. Je nach Inhalt der Abbildung kann das <code>alt</code>-Attribut dann leer bleiben oder den abgebildeten Inhalt beschreiben, während der Linktext Zweck oder Ziel des Links beschreibt.</p>",
  "_STEP_9_1_1_1A_HOW_CHECKED_37_": "<p>Wenn Abbildung und Text zwei unabhängige Links auf dasselbe Ziel sind, dann kann das <code>alt</code>-Attribut dagegen <em>nicht</em> leer bleiben. Denn gängige Screenreader verlassen sich nicht darauf, dass leere <code>alt</code>-Attribute sachgerecht eingesetzt werden, sie behandeln bei Bedienelementen leere wie fehlende <code>alt</code>-Attribute und lesen den Dateinamen der Grafik / die URL der Zieldatei vor.</p>",
  "_STEP_9_1_1_1A_HOW_CHECKED_38_": "<h4 id=\"_3_2_unterstützung_von_svgs_durch_assistive_technologien\">3.2 Unterstützung von SVGs durch assistive Technologien</h4>",
  "_STEP_9_1_1_1A_HOW_CHECKED_39_": "<p>Da SVG noch nicht ausreichend in allen Screenreader-Browser-Kombinationen unterstützt werden, sollte derzeit die Rolle über WAI-ARIA vermittelt werden (siehe 9.4.1.2 \"Name, Rolle, Wert verfügbar\"). Die Rolle kann entfallen, wenn Text im gleichen Link das Linkziel aussagekräftig beschreibt: dann sollte die SVG-Grafik mit <code>aria-hidden=\"true\"</code> ausgezeichnet werden.</p>",
  "_STEP_9_1_1_1A_HOW_CHECKED_40_": "<h3 id=\"_4_bewertung\">4. Bewertung</h3>",
  "_STEP_9_1_1_1A_HOW_CHECKED_41_": "<h4 id=\"_teilweise_erfüllt\">Teilweise erfüllt</h4>",
  "_STEP_9_1_1_1A_HOW_CHECKED_42_": "<ul><li><p>Der Alternativtext fehlt beim Link zum Seitenanfang oder bei einem anderen für die Benutzung der Seite weniger wichtigen Bedienelement.</p></li><li><p>Alternativtexte sind missverständlich, undeutlich oder extrem lang.</p></li></ul>",
  "_STEP_9_1_1_1A_HOW_CHECKED_43_": "<h4 id=\"_nicht_erfüllt\">Nicht erfüllt</h4>",
  "_STEP_9_1_1_1A_HOW_CHECKED_44_": "<ul><li><p>Der Alternativtext für ein wichtiges Bedienelement fehlt oder er ist unbrauchbar.</p></li></ul>",
  "_STEP_9_1_1_1A_SOURCES_1_": "<h3 id=\"_anleitungen_zum_erstellen_guter_alternativtexte\">Anleitungen zum Erstellen guter Alternativtexte</h3>",
  "_STEP_9_1_1_1A_SOURCES_2_": "<ul><li><p>W3C Web Accessibility Tutorials: <a href=\"https://www.w3.org/WAI/tutorials/images/\">Images Concepts</a></p></li><li><p>WebAIM: <a href=\"https://webaim.org/techniques/alttext/\">Alternative Text</a></p></li><li><p>HTML 5.1 Spezifikation: <a href=\"https://www.w3.org/TR/html51/semantics-embedded-content.html#alt-text\"> Requirements for providing text to act as an alternative for images</a></p></li></ul>",
  "_STEP_9_1_1_1A_SOURCES_3_": "<h3 id=\"_w3c_scalable_vector_graphics_svg_1_1\">W3C - Scalable Vector Graphics (SVG) 1.1</h3>",
  "_STEP_9_1_1_1A_SOURCES_4_": "<ul><li><p><a href=\"https://www.w3.org/TR/SVG11/struct.html#DescriptionAndTitleElements\"> The 'desc' and the 'title' elements</a></p></li><li><p>Zu Rollen wie <code>role=\"graphics-document\"</code> für komplexere SVG-Grafiken: <a href=\"https://www.w3.org/TR/graphics-aria-1.0/\"> WAI-ARIA Graphics Module</a> (W3C Recommendation 02 October 2018)</p></li></ul>",
  "_STEP_9_1_1_1A_SOURCES_5_": "<h3 id=\"_svgs_zugänglich_einbinden\">SVGs zugänglich einbinden</h3>",
  "_STEP_9_1_1_1A_SOURCES_6_": "<ul><li><p><a href=\"https://www.scottohara.me/blog/2019/05/22/contextual-images-svgs-and-a11y.html\"> Contextually marking up accessible images and SVGs</a> (Scott O’Hara, May 2019)</p></li><li><p><a href=\"https://www.deque.com/blog/creating-accessible-svgs/\">Creating accessible SVGs</a> (Deque blog, January 2019)</p></li><li><p><a href=\"https://simplyaccessible.com/article/7-solutions-svgs/\"> 7 solutions for creating more accessible SVGs</a> (SimplyAccessible, March 2017)</p></li><li><p><a href=\"https://css-tricks.com/accessible-svgs/\"> Accessible SVGs</a> (CSS-Tricks, updated August 2016)</p></li></ul>",
  "_STEP_9_1_1_1A_CLASSIFICATION_1_": "<h3 id=\"_abgrenzung_zu_anderen_prüfschritten\">Abgrenzung zu anderen Prüfschritten</h3>",
  "_STEP_9_1_1_1A_CLASSIFICATION_2_": "<p>Verlinkte Grafiken sind stets in diesem Prüfschritt zu bewerten. Das gilt auch dann, wenn die Grafiken neben der Information über das Linkziel auch noch eine andere Information vermitteln sollen, wie zum Beispiel auf die Startseite verlinkte Logos.</p>",
  "_STEP_9_1_1_1A_CLASSIFICATION_3_": "<p>Einzige Ausnahme: Grafik und danebenstehender Text sind ein zusammengehöriger Link. Der Alternativtext bezieht sich dann nur auf die Grafik, die Prüfkriterien 9.1.1.1b \"Alternativtexte für Grafiken und Objekte\" oder 9.1.1.1c \"Leere alt-Attribute für Layoutgrafiken\" sind anzuwenden.</p>",
  "_STEP_9_1_1_1A_CLASSIFICATION_4_": "<ul><li><p>Alternativtexte für grafische Überschriften: siehe Prüfschritt 9.1.1.1b \"Alternativtexte für Grafiken und Objekte\".</p></li><li><p>CAPTCHAs werden im Prüfschritt 9.1.1.1d \"Alternativen für CAPTCHAs\"   geprüft.</p></li><li><p>Textäquivalent (<code>title</code>-Attribut) für Frames: siehe Prüfschritt 9.2.4.1 \"Bereiche überspringbar\".</p></li><li><p>Linktexte sind auch in Prüfschritt 9.2.4.4 \"Aussagekräftige Linktexte\"   Thema.   Dort geht es um die allgemeine Aussagekraft, in diesem Prüfschritt 9.1.1.1a   geht es dagegen nur um die Gleichwertigkeit von Alternativtext und   grafischem Link.</p></li><li><p>Die Ausgabe der entsprechenden Rolle von SVGs wird im Prüfschritt 9.4.1.2 \"Name, Rolle, Wert verfügbar\"   geprüft (s. o<a href=\"#3.2\">3.2 Unterstützung von SVGs durch assistive   Technologien</a>).</p></li></ul>",
  "_STEP_9_1_1_1A_CLASSIFICATION_5_": "<h3 id=\"_einordnung_des_prüfschritts_nach_wcag_2_1\">Einordnung des Prüfschritts nach WCAG 2.1</h3>",
  "_STEP_9_1_1_1A_CLASSIFICATION_6_": "<h4 id=\"_guideline\">Guideline</h4>",
  "_STEP_9_1_1_1A_CLASSIFICATION_7_": "<ul><li><p><a href=\"http://www.w3.org/TR/WCAG21/#text-alternatives\"> Guideline 1.1 Text Alternatives: Provide text alternatives for any non-text content so that it can be changed into other forms people need, such as large print, braille, speech, symbols or simpler language.</a></p></li></ul>",
  "_STEP_9_1_1_1A_CLASSIFICATION_8_": "<h4 id=\"_success_criterion\">Success criterion</h4>",
  "_STEP_9_1_1_1A_CLASSIFICATION_9_": "<ul><li><p><a href=\"http://www.w3.org/TR/WCAG21/#x1-1-1-non-text-content\"> 1.1.1 Non-text Content</a> (Level A)</p></li></ul>",
  "_STEP_9_1_1_1A_CLASSIFICATION_10_": "<h4 id=\"_techniques\">Techniques</h4>",
  "_STEP_9_1_1_1A_CLASSIFICATION_11_": "<h5 id=\"_general_techniques\">General Techniques</h5>",
  "_STEP_9_1_1_1A_CLASSIFICATION_12_": "<ul><li><p><a href=\"https://www.w3.org/WAI/WCAG21/Techniques/general/G94\"> G94: Providing short text alternative for non-text content that serves the same purpose and presents the same information as the non-text content</a></p></li></ul>",
  "_STEP_9_1_1_1A_CLASSIFICATION_13_": "<h5 id=\"_html_techniques\">HTML Techniques</h5>",
  "_STEP_9_1_1_1A_CLASSIFICATION_14_": "<ul><li><p><a href=\"https://www.w3.org/WAI/WCAG21/Techniques/html/H2\"> H2: Combining adjacent image and text links for the same resource</a></p></li><li><p><a href=\"https://www.w3.org/WAI/WCAG21/Techniques/html/H24\"> H24: Providing text alternatives for the <code>area</code> elements of image maps</a></p></li><li><p><a href=\"https://www.w3.org/WAI/WCAG21/Techniques/html/H30\"> H30: Providing link text that describes the purpose of a link for anchor elements</a></p></li><li><p><a href=\"https://www.w3.org/WAI/WCAG21/Techniques/html/H36\"> H36: Using <code>alt</code> attributes on images used as submit buttons</a></p></li><li><p><a href=\"https://www.w3.org/WAI/WCAG21/Techniques/html/H37\"> H37: Using <code>alt</code> attributes on <code>img</code> elements</a></p></li></ul>",
  "_STEP_9_1_1_1A_CLASSIFICATION_15_": "<h5 id=\"_aria_techniques\">ARIA Techniques</h5>",
  "_STEP_9_1_1_1A_CLASSIFICATION_16_": "<ul><li><p><a href=\"https://www.w3.org/WAI/WCAG21/Techniques/aria/ARIA6\"> ARIA6 Using <code>aria-label</code> to provide labels for objects</a></p></li><li><p><a href=\"https://www.w3.org/WAI/WCAG21/Techniques/aria/ARIA10\"> ARIA10: Using <code>aria-labelledby</code> to provide a text alternative for non-text content</a></p></li></ul>",
  "_STEP_9_1_1_1A_CLASSIFICATION_17_": "<h5 id=\"_failures\">Failures</h5>",
  "_STEP_9_1_1_1A_CLASSIFICATION_18_": "<ul><li><p><a href=\"https://www.w3.org/WAI/WCAG21/Techniques/failures/F3\"> F3: Failure of Success Criterion 1.1.1 due to using CSS to include images that convey important information</a></p></li><li><p><a href=\"https://www.w3.org/WAI/WCAG21/Techniques/failures/F20\"> F20: Failure of Success Criterion 1.1.1 and 4.1.2 due to not updating text alternatives when changes to non-text content occur</a></p></li><li><p><a href=\"https://www.w3.org/WAI/WCAG21/Techniques/failures/F30\"> F30: Failure of Success Criterion 1.1.1 and 1.2.1 due to using text alternatives that are not alternatives</a></p></li><li><p><a href=\"https://www.w3.org/WAI/WCAG21/Techniques/failures/F65\"> F65: Failure of Success Criterion 1.1.1 due to omitting the <code>alt</code> attribute on <code>img</code> elements, <code>area</code> elements, and <code>input</code> elements of type 'image'</a></p></li></ul>",
  "_STEP_9_1_1_1A_QUESTIONS_1_": "<h3 id=\"_kann_das_alt_attribut_nicht_leer_gelassen_werden_wenn_stattdessen_ein_sinnvolles_title_attribut_verwendet_wird_das_wird_in_meinem_screenreader_problemlos_ausgegeben\">Kann das <code>alt</code>-Attribut nicht leer gelassen werden, wenn stattdessen ein sinnvolles <code>title</code>-Attribut verwendet wird? Das wird in meinem Screenreader problemlos ausgegeben.</h3>",
  "_STEP_9_1_1_1A_QUESTIONS_2_": "<p>Es stimmt, dass neuere Screenreader bei Vorhandensein eines <code>title</code>-Attributs dieses anstelle eines fehlenden <code>alt</code>-Attributs ausgeben. Das trifft aber nicht auf alle gängigen Hilfsmittel zu. Deshalb verlangt der Test grundsätzlich die standardkonforme Umsetzung gemäß HTML 5.0 und WCAG 2.0:</p>",
  "_STEP_9_1_1_1A_QUESTIONS_3_": "<ul><li><p>Das <code>alt</code>-Attribut soll den <strong>Inhalt</strong> des Bildes <strong>ersetzen</strong></p></li><li><p>Das <code>title</code>-Attribut ist für <strong>zusätzliche (nicht essenzielle) Informationen</strong> gedacht</p></li></ul>",
  "_STEP_9_1_1_1A_QUESTIONS_4_": "<p>Deshalb steht in der WCAG 2.0-Technik <a href=\"http://www.w3.org/TR/WCAG20-TECHS/H33.html\">H33</a>:</p>",
  "_STEP_9_1_1_1A_QUESTIONS_5_": "<div lang=\"en\" class=\"a_ml_5\"><blockquote><p>Because of the extensive user agent limitations in supporting access to the title attribute, authors should use caution in applying this technique. For this reason, it is preferred that the author use technique <a href=\"http://www.w3.org/TR/WCAG20-TECHS/C7.html\">C7</a>: Using CSS to hide a portion of the link text (CSS) or <a href=\"http://www.w3.org/TR/WCAG20-TECHS/H30.html\">H30</a>: Providing link text that describes the purpose of a link for anchor elements (HTML).</p></blockquote></div>",
  "_STEP_9_1_1_1A_QUESTIONS_6_": "<p>Ein weiterer Punkt, der die Wichtigkeit des <code>alt</code>-Attributs unterstreicht, ist die Nutzung mit abgeschalteten Bildern. Auch wenn Alternativtexte im Bereich der Bildumrisse in manchen Browsern nicht vollständig angezeigt werden, ist das immer noch besser als eine Nicht-Anzeige beim Einsatz von <code>title</code>.</p>",
  "_STEP_9_1_1_1A_QUESTIONS_7_": "<h3 id=\"_der_alternativtext_beschreibt_die_grafik_der_title_text_beschreibt_das_link_ziel_ist_das_ein_geeigneter_lösungsansatz_für_grafische_links\">Der Alternativtext beschreibt die Grafik, der <code>title</code>-Text beschreibt das Link-Ziel: Ist das ein geeigneter Lösungsansatz für grafische Links?</h3>",
  "_STEP_9_1_1_1A_QUESTIONS_8_": "<p>Vorgeschlagen wurde diese Lösung für Fälle, in denen die Grafik nicht einfach das Linkziel abbildet (Schriftgrafik) oder für das Linkziel steht, sondern zusätzlich eine eigenständige Aussagekraft hat (zum Beispiel bei aus Anreißertext und einer verlinkten Abbildung bestehenden Teasern).</p>",
  "_STEP_9_1_1_1A_QUESTIONS_9_": "<p>Die Idee ist einleuchtend:</p>",
  "_STEP_9_1_1_1A_QUESTIONS_10_": "<p>Der sehende Benutzer klickt auf das Bild, denn er vermutet, dass hinter dem Bild eine Seite steht. Der beschreibende Alternativtext ersetzt das Bild, der blinde Benutzer schließt wie der sehende Benutzer vom (beschriebenen) Bildinhalt auf das Linkziel. Wenn aus dem Bild / der Bildbeschreibung nicht hinreichend klar hervorgeht, wo es hinführt, kann der sehende wie der blinde Benutzer auf die ergänzenden Informationen im <code>title</code>-Attribut zugreifen.</p>",
  "_STEP_9_1_1_1A_QUESTIONS_11_": "<p>In der Praxis funktioniert das aber nicht:</p>",
  "_STEP_9_1_1_1A_QUESTIONS_12_": "<p>Sehende Benutzer orientieren sich nicht an den Inhalten des Bildes, sondern eher an der Position. Viele Teaser-Bilder sind vom Inhalt her ohnehin nicht geeignet, etwas über das Linkziel zu sagen, der Bezug zum Thema des Linkziels ist oft nur ansatzweise nachvollziehbar. Aber sie <em>müssen</em> auch gar nichts über das Linkziel sagen: Das Linkziel steht im Text daneben, es muss nicht aus dem Bild erraten werden. Geklickt wird auf das Bild, weil es vielleicht leichter zu treffen ist und der Benutzer weiß, dass Teaser-Bilder üblicherweise mit weiterführenden Informationen zum jeweiligen Textabschnitt verlinkt sind.</p>",
  "_STEP_9_1_1_1A_QUESTIONS_13_": "<p>Für den blinden Benutzer ist der Zusammenhang von Bild und (darauf folgendem) Kontext dagegen normalerweise nicht klar. Er müsste also tatsächlich Vermutungen anstellen, wo ein Link hinführen könnte, der mit dem beschriebenen Bild verbunden ist. Und da das Bild die entsprechende Aussagekraft nicht hat, wäre er auf die Informationen im <code>title</code>-Attribut in der Regel <em>angewiesen</em>. Sie sind also für ihn <em>nicht ergänzend</em>.</p>",
  "_STEP_9_1_1_1A_QUESTIONS_14_": "<p>Hinzu kommt: Das <code>title</code>-Attribut wird von gängigen Screenreadern unterschiedlich behandelt und schlecht unterstützt. Nach wie vor werden von JAWS die Inhalte von <code>alt</code>-Attribut und <code>title</code>-Attribut nur alternativ vorgelesen.</p>",
  "_STEP_9_1_1_1A_QUESTIONS_15_": "<p>Das <code>title</code>-Attribut ist für ergänzende Informationen vorgesehen. Die Information über das Linkziel ist in aller Regel keine ergänzende Information, denn sie geht aus dem Bildinhalt nicht hervor. Der Alternativtext muss daher das Linkziel beschreiben.</p>",
  "_STEP_9_1_1_1A_QUESTIONS_16_": "<h3 id=\"_sollte_im_alt_attribut_und_im_title_attribut_eines_bildes_derselbe_inhalt_stehen\">Sollte im <code>alt</code>-Attribut und im <code>title</code>-Attribut eines Bildes derselbe Inhalt stehen?</h3>",
  "_STEP_9_1_1_1A_QUESTIONS_17_": "<p>Der Alternativtext soll das Bild <em>ersetzen</em>. Sehr häufig bedeutet das: Der Alternativtext sagt, was abgebildet ist.</p>",
  "_STEP_9_1_1_1A_QUESTIONS_18_": "<p>Das <code>title</code>-Attribut ist dagegen für <em>ergänzende</em> Informationen zum Bild vorgesehen. Es kann zum Beispiel verwendet werden, um zu sagen, von welcher Quelle das Bild stammt. Dort stehen also Informationen, die man dem Bild <em>nicht</em> entnehmen kann.</p>",
  "_STEP_9_1_1_1A_QUESTIONS_19_": "<p>Eigentlich also ein klarer Fall: Die Aufgaben der Attribute sind unterschiedlich, entsprechend sollten sie normalerweise nicht denselben Inhalt haben. Es gibt aber eine wichtige Ausnahme:</p>",
  "_STEP_9_1_1_1A_QUESTIONS_20_": "<p>Häufig werden Symbole oder Zeichen als <em>Bedienelemente</em> verwendet. Für sehende Nutzende ist dann eine ergänzende Beschriftung nützlich. Sie steht am besten als Text neben dem Bild, denn dann ist sie auch für Tastaturnutzer sichtbar. Aber auch das <code>title</code>-Attribut kann verwendet werden. Dann sollte im <code>title</code> -Attribut möglichst exakt der gleiche Text stehen wie im zugänglichen Namen, der über das <code>alt</code>-Attribut (oder auch über <code>aria-label</code>) gesetzt ist. Der Grund: Sind die Werte identisch, wird dieser Text von Screenreadern in der Regel nur einmal ausgegeben. Weicht er ab, erfolgt eine Ausgabe beider Werte, was oft zu unnötigen Doppelungen führt.</p>",
  "_STEP_9_1_1_1A_QUESTIONS_21_": "<h3 id=\"_screenreader_geben_oft_den_dateinamen_der_bilddatei_aus_wenn_kein_alternativtext_zur_verfügung_steht_kann_so_das_fehlen_des_alternativtextes_kompensiert_werden\">Screenreader geben oft den Dateinamen der Bilddatei aus, wenn kein Alternativtext zur Verfügung steht. Kann so das Fehlen des Alternativtextes kompensiert werden?</h3>",
  "_STEP_9_1_1_1A_QUESTIONS_22_": "<p>Nein, denn die Ausgabe des Dateinamens funktioniert nicht verlässlich. Nicht alle Browser oder Screenreader geben den Dateinamen aus. Von manchen wird der ganze Pfad der Bilddatei ausgegeben. Das ist schwer verständlich.</p>",
  "_STEP_9_1_1_1A_QUESTIONS_23_": "<h3 id=\"_soll_im_alternativtext_stehen_dass_es_sich_um_ein_navigationselement_handelt\">Soll im Alternativtext stehen, dass es sich um ein Navigationselement handelt?</h3>",
  "_STEP_9_1_1_1A_QUESTIONS_24_": "<p>Nein, das sollte vermieden werden. Screenreader oder Textbrowser geben in der Regel die Rolle des Elements aus, also etwa \"Link\" oder \"Taste\". Wenn diese Rolle im Alternativtext steht, liefert der Screenreader diese Information doppelt.</p>",
  "_STEP_9_1_1_1A_QUESTIONS_25_": "<h3 id=\"_was_ist_ein_passender_alternativtext_für_verlinkte_bilder_etwa_fotos\">Was ist ein passender Alternativtext für verlinkte Bilder, etwa Fotos?</h3>",
  "_STEP_9_1_1_1A_QUESTIONS_26_": "<p>Wenn Bilder verlinkt sind, soll der Alternativtext vor allem das Linkziel nennen. Oft geschieht dies im Zusammenhang von Teasern, die gleichzeitig Überschriften, Anreißertext und/oder  \"Weiter\" oder \"Mehr lesen\"- Links enthalten. Hier eignet sich oft die Überschrift als Linktext. Ist der gesamte Teaser verlinkt, sollte der Alternativtext des Bildes leer sein, um Doppelungen zu vermeiden. Ist das Bild für sich genommen informationstragend, sollte es einen aussagekräftigen Alternativtext haben. Es bietet sich dann an, das Bild nicht in den Teaser-Link einzuschließen. Techniken wie das <a href=\"https://inclusive-components.design/cards/\">Cards-Pattern</a> zeigen, wie das Bild dennoch zum Teil der Klick-Fläche gemacht werden kann.</p>",
  "_STEP_9_1_1_1A_QUESTIONS_27_": "<h3 id=\"_sollte_der_alternativtext_für_grafische_bedienelemente_icons_auch_sagen_was_abgebildet_ist\">Sollte der Alternativtext für grafische Bedienelemente (Icons) auch sagen, was abgebildet ist?</h3>",
  "_STEP_9_1_1_1A_QUESTIONS_28_": "<p>Symbole haben meist konventionelle Bedeutung. So steht eine Lupe für die Funktion 'Suchen', eine Diskette (immer noch) für die Funktion 'Sichern', ein Fragezeichen für 'Hilfe', ein Stift für 'Editieren'. In solchen Fällen soll der Alternativtext des Icons die Funktion bezeichnen und nicht den abgebildeten Gegenstand.</p>",
  "_STEP_9_1_1_1A_QUESTIONS_29_": "<h3 id=\"_links_oben_ist_das_firmenlogo_abgebildet_es_ist_außerdem_mit_der_startseite_verlinkt_welcher_alternativtext_ist_angemessen\">Links oben ist das Firmenlogo abgebildet, es ist außerdem mit der Startseite verlinkt. Welcher Alternativtext ist angemessen?</h3>",
  "_STEP_9_1_1_1A_QUESTIONS_30_": "<p>Der Alternativtext in diesem Fall hat zwei Aufgaben: Er soll für das Logo stehen und er soll das Linkziel vertreten. Auf dieser Grundlage kann man verschieden argumentieren:</p>",
  "_STEP_9_1_1_1A_QUESTIONS_31_": "<ol><li><p>Das Bild zeigt das Logo der Firma. Das ist auch seine vorrangige Aufgabe. Auch für einen blinden Benutzer ist es gut, zu wissen, dass die Firma ihr Logo auf der Seite zeigt. Zusätzliche Informationen zum Ziel des Links sind überflüssig. Wo soll das Logo von Müllermilch schon hinführen. Also sollte \"Logo: Müllermilch\" im Alternativtext stehen.</p></li><li><p>Das Bild hat zwei Funktionen. Es zeigt das Logo der Firma und es dient als Link auf die Startseite des Webauftritts. Der sehende Benutzer hat damit kein Problem, er wundert sich nicht, wenn er das Bild anklickt und auf der Startseite von Müllermilch landet. Ebenso der blinde Benutzer. Ein grafischer Link namens Müllermilch. Der zeigt und verweist wohl auf Müllermilch. Also kurz und knapp: \"Müllermilch\" in den Alternativtext!</p></li><li><p>Das Bild hat zwei Funktionen. Es zeigt das Logo der Firma und es dient als Link auf die Startseite des Webauftritts. Für beides soll auch der Alternativtext stehen: \"Logo: Müllermilch - zur Startseite\".</p></li></ol>",
  "_STEP_9_1_1_1A_QUESTIONS_32_": "<p>Alle drei Alternativen unterstützen den blinden Besucher. Im BITV-Test gelten daher alle drei Alternativen als angemessen.</p>"
}
